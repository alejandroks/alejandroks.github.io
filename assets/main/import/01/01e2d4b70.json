[1,["abwstieFJFJakN1HRIe4jy","ecpdLyjvZBwrvm+cedCcQy","edkrtfl7VABoadR53cid0h","69iwjG/2ZFj4Hf9nFawMEb","9aTvO5ZelK1pEhFvF+rGyi","54RXM/R9FMiqrj55lr7HaP","94BUzauJBM6LeVJZod9t5Y","80s4VGIlhNFKEgWc0Z0Ozb","eepcMjX1tBc5UwI6QuXXyK","56Rkwer0lABKgqv5jifSz0","37ZTXB/l1PmrRnY2awmM7P","a3ddpJu2RIOrIXeEw0VYpV","20FyrWfOtBoqIAmTD8Euxo","5aE9/v3GRLpKcfLWPX8KXW","a4tDmt+t5BSoxwuZiBic7X","773T7Jq0NJJZOH8rZBikeW","2fiRACobBDq5mkHzUlwoIj","c4x5nB0JFIp6vfTSmhcOsz","e7qeKYjEpGtpM6ss3Qw7EN","abdAQ4j1RNnriU7X9q+GRa","36QrB0eDZBL67Fo7/uNze5","9eUll1BvFPWqDbwNEEXMpR","5ePhTsv8NM56mhlKD4RlE1","c4llgw5DJNFa4ccI2AjsA9","8aAZ4h/QdErLKDBB/d7Jgz","d1MJcrqrlFd6KqHwUGEmKM","18WzO8GxtJCZG/Tw9TgmcN","4adJIsIs1Meqm8Gfz8BEyI","95W9Q9x3xAKr5BjcsLwYZL","03U89c9jtCBqAN9QoDsoG9","82lnpan2VIe6/rwWrh9P2C","19ewU3EqZJILDBQFuGAnIe","48FraZdXBL2rocPTuqgZrQ","d7VhnxgepHKpTzUFX4YDb6","a0qPbCnm9KDoLFz6l57I1X","76XIew2/pBDbhy1w1zAvLZ","7bt7YWGoVOdZAfQGgCss1n","88UFEj7+lLRah4FatFioi1","97F2joLAJLVoXFikcnyPoq","01630YraVGMqiWROqz/RAh","925HD53FZDs7H3v9NkFsiz","36XxoczzRI77wcgExDzCxv","39Rm5bYj1Jr6OqM+Kfyjx1","ddiSLq5NhD6qmQ5qJRIk4F","5dVKRewddLOLGRS0lL3t9j","30yiLDSilDsp+Xs3sBPcAf","02o9FI0eFNrbeivv8c8LoP","9400lA8FNL/IdsH2lZ4Xmj","18XIojMENJGYmWyNcN2Ene","fb5q1CzSlIqZbdNomywKeo","8eFL9xtH9HgblqNTROoPZT","d58oG20kJOgZHT3gcV4o1O","25su4BtIRLooHVYzYIJRAQ","19F3PGY4hHcotIt7/JOo5L","f2L300BxlJlrxN9s4Tr7+Y","b7yG1nJOJIc7TdeU2uzkrL","13HQ0+W/9DIads93UldbWl","f5jWxhWNVPALMdJKCEH0cf","39TpofWLJEy7TqTm3F8kp1","34ZVqk0TVGRqAnN5d5DqzO","1aRMY2BXxNZKJN0YyBlD7D","d7ZG5TAbpMX5uWkETJbbyt","a59tDCBxtAp7fy8hvQ86iY","fdjXSFo+tNJ5sUGcPrQO67","7f+uskaQ9IX6rNvN3lHdK+","d9tmlg4YxKX4HdjpAR35CR","baMx54L3dAdKFQGEQcVpuU","fdfZ/C/WdN4qI5KAQdSRtJ","53g9np5bZIxZV9GQE8IhbO","a3rVaSfpJFXICcuFomQkLS","98wiFpIl5L14k6H5+/Rtx8","1fpDKolMxCwpbmk/MmFfUH","711zABx5pC0IzvBK2zOggq","8crix/tYtJX7ltmlUkpEGS","d1DoZSzAxDhKlR+wa6StUG","14ltw4yF9Lr7wyr6P6rWUR","93E4/LC29PwqGvmlfvwDcZ","e0FGm2hVZE3bsSvMKfWTXp","303aboCVtMaIrBqlRaeQCe","0dSI4cmYhA3pNISuXkdqnq","5ffkRaeDJO27HrPVCiS8CG","86aQUDbyNG65YvqFRs76bs","bcsJXmK9lOn5mFPorzTAAa","8fS6oiu5lEpbdxeuLFnAQ4","ffvUwa9U1HB5LYbtCz7PVO","c9FSgt+VJMC5OOPZcWO7jz","d29goZYm1EsKMxWe53Jbtk","17tj1Jtu1C6qdCMESBe83U","5abHMU9BlEgpl6X27Jp4m3","79DItA8wZL+rTGgYDKeosX","69HMPe/2ROBbEqxXxXERCC","1cyiy5WzBPz7X79G7hVDWN","bevOGheeNAQ6nO7jzpAweP","1d3NbcRGxDfbuYUWnpo5IL","afPDZAUJNI9LkGyJgarA31","7cBE+cOeRCe7Z1PI77YayQ","94FBVD2sFN96XSZCjulcK4","47B2rXvb5N2ZaeZSDhFhAd","c4MEWPE0tHjqyfbMRmlv5/","76SboTYhFPLZUV2uvRhje4","f15Nxtp/BJ97dgE7HnjyWR","d68bFKY3xLkIQDZAm8gACX","8bQKYMkAlCE64Ug8pmXgyf","10zdmZ+dhFMJ1LohgijYl7","00yHR0VrVOC4EikR0/QnJX","039x8q3wxKJpmu86oLw/BQ","64UXVGgMNCyJCl5lqMflqC","12XKfRmYZBMouUN/CqaoRF","11jEJ9JS9DbK+heILpC+4H","d64kBAxXhHKbDla6wb/fTM","ecrYgnSSFAZr/2/Lp3g1M+","eaOjt9NdtNQ4pCzYzuHVFQ","dfhXlRIotKmLS62TCZVKoX","0dKy4geOZNPoGhRUhVjdkY","04bxcsFXRIi7u4ZBWprblt","39av4qQhxLXKa5VGRk9MfK","da5CI3RXVIXoHoOdx73Zge","0bkvs7nJhNmqTAO8s82NkT","6bXFnrBk5DTqRDKXxl8fhJ","3bvbD2xfZF3p8zi1y6+01t","a30YMgWy1MsokBdnjFf4Zf","baVvk2h3RA3qxz0U5vHZOj","a7d0KOuhVD6opDi3wdHJkx","d9TjBl1qZK5pgtx3TPuVHE","f4IXedT5ZMOqSf41xmM9hN","a763ajwKdEH6T58zB6zDdj","c7rIa7kD5DBKR16EA02WSk","24fdaeFuBCn5TYmef1nane","68YHF3AP1HWLlot0T3RgXw","9bypxfUX5MCpaBHNh3hm4l","5eXWhd8YRHu5QF9YMGEImp","4fIEONseFEYbMvBcGVzetg"],["node","_effectAsset","root","_mesh","_parent","data","_spriteFrame","_defaultClip","_textureSetter","prefab","value","_model","nodeToSet","render","skeleton3DAnimation","_skeleton","diffuseTexture","targetToggleNode","mainCamera","scene","_N$data","buttonMain","buttonRender","sizeReference","hitZoneNode","zoneRadius","collider","rigidBody"],[["cc.Node",["_name","_is3DNode","_groupIndex","_opacity","_id","_active","_prefab","_components","_parent","_trs","_children","_contentSize","_eulerAngles","_color","_anchorPoint"],-3,4,9,1,7,2,5,5,5,5],"cc.SpriteFrame",["cc.AnimationClip",["_name","_duration","wrapMode","speed","events","curveData"],-2,11],["cc.Node",["_name","_is3DNode","_groupIndex","_components","_prefab","_trs","_children","_eulerAngles","_parent"],0,12,4,7,12,5,1],["cc.Node",["_name","_is3DNode","_groupIndex","_prefab","_children","_trs","_eulerAngles","_parent","_components"],0,4,9,7,5,1,2],["cc.SphereCollider3D",["_radius","_isTrigger","node","_center"],1,1,5],["cc.Light",["_intensity","_shadowFrustumSize","_shadowDarkness","_type","_shadowMinDepth","_range","_spotAngle","_shadowType","_shadowResolution","node"],-6,1],["cc.Animation",["playOnLoad","node","_clips","_defaultClip"],2,1,3,6],["cc.MeshRenderer",["_shadowCastingMode","_receiveShadows","node","_materials","_mesh"],1,1,3,6],["SettingsHelper",["prefab","nodeToSet","offset","rotation"],2,1,5,5],["RelativePosition",["_N$isUsr","type","srToChange","value"],0,4],["SideRatioDimension",["portraitBelowSR","landscapeBelowSR","portraitAboveSR","landscapeAboveSR"],3,5,5,5,5],["cc.BufferRange",["length","offset"],1],["cc.Material",["_name","_techniqueData"],2,11],["cc.Prefab",["_name","asyncLoadAssets"],1],["cc.PrefabInfo",["fileId","root"],2,1],["faea2wgNdlNioSWaIu4GhWf",["cameraIndex","upgradeAnimationName","idleAnimationName","indexBase","node"],-1,1],["DelayAnim",["min","max"],1],["cc.SkinnedMeshRenderer",["_shadowCastingMode","node","_materials","_rootBone","_mesh","_skeleton"],2,1,3,1,6,6],["cc.SkeletonAnimation",["playOnLoad","node","_clips"],2,1,3],["ResizeComponent",["_N$isUsr","node","positions","dimensions","sizeReference"],2,1,4,4,1],["ResizeComponent",["dimensions","_N$isScaledOnResize","_N$isChangingSizeOnResize","node","positions","relativeSize"],0,1,4,4],["Dimensions",["_N$isUsr","type","value"],1,4],["cc.Sprite",["_sizeMode","node","_materials","_spriteFrame"],2,1,3,6],["CameraZoomHelper",["landscape","portrait"],1],["cc.Camera",["_cullingMask","_clearFlags","_depth","_orthoSize","_alignWithScreen","node","_backgroundColor"],-2,1,5],["UiCreateHelper",["zIndex","isNeedToHideOnResult","prefab"],1,6],["Level",["dataType","isFake"],1],["b770djH3JdEGKd6W2wUb4zT",["touchSource","node"],2,1],["cc.RigidBody3D",["_useGravity","_mass","_linearDamping","_angularDamping","_fixedRotation","node","_linearFactor","_angularFactor"],-2,1,5,5],["cc.BoxCollider3D",["_isTrigger","node","_center","_size"],2,1,5,5],["cc.Mesh",["_native","_vertexBundles","_primitives","_minPos","_maxPos"],2,9,9,5,5],["cc.mesh.VertexBundle",["verticesCount","data","formats"],2,4,9],["cc.mesh.VertexFormat",["name","type","num"],0],["cc.mesh.Primitive",["vertexBundleIndices","data"],2,4],["cc.Skeleton",["_skinIndex","_jointIndices"],1],["cc.Node",["_name","_is3DNode","_groupIndex","_children","_components","_prefab","_trs"],0,2,12,4,7],["9de5fxk7NJDW4fv7oBqZtLa",["speed","node","persona","delayAnimation","_config","specialRandomTimer","sparkHelper","render"],2,1,4,4,4,4,4,1],["Persona",["isUseSpine","personaType","isUse3DMesh","skeleton3DAnimation","meshHelper"],0,1,4],["Persona3DHelper",["weapon","hat"],3,4,4],["AnimationConfig",[],3],["SparksHelper",["countSparks","radius","timeCast","offset","sparkScale"],0,5,5],["72276KmGlZJZpWxJS3t1QWx",["eventToToggle","tutorText","node","targetToggleNode"],1,1,1],["SideRatioRelativePosition",["portraitBelowSR","landscapeBelowSR","portraitAboveSR","landscapeAboveSR"],3,5,5,5,5],["cc.SceneAsset",["_name","asyncLoadAssets"],1],["cc.Scene",["_name","_active","_children","_anchorPoint","_trs"],1,2,5,7],["1f32a19heZAzqbhPEWpda9i",["node"],3,1],["0829bEjvz5M35fdSorBbFQu",["gameName","adType","isForcedRedirectInGame","realResultOnFakeADType","node"],-1,1],["6f156wuwaxNh788i3QmRN0m",["isNeedControlShowTutorial","tutorialDelay","inputTypeOnResultRedirect","touchSourceRedirect","adTypeOnResult","tutorialCancelSource","node","mainCamera"],-3,1,1],["52782riHtlMXbpIQ0JFEuiV",["node","audioClips"],3,1,3],["cc.Canvas",["node"],3,1],["593bcF0NyZAd7jb2DzgKb4F",["node","cameraSetups","cameraShakeBounds"],3,1,9,5],["CameraSetupHelper",["followOffset","followRotation","zoom","_N$target"],3,5,5,4,1],["my.PoolManager",["node"],3,1],["4ac372RldxCW5u97uzM3P9H",["isPhysicsEnabled","isDebugPhysics","isColliderEnabled","isColliderDebug","isPhysics3DEnabled","is3DAccumulator","node"],-3,1],["718c1u31INJIoT2x+IKDNhB",["_convertEffectType","node","_effects"],2,1,12],["EffectObject",[],3],["1226euyW2FAKZFI7f4VowQS",["_convertGameObjectType","node","_prefabs"],2,1,12],["8bacaIc0xxD7L2RC2wQamct",["_N$dataType","_convertDataType","node","_data","_N$data"],1,1,12,6],["7283emJ2UxKubn1UbXdTYyw",["_convertValueType","node","_values"],2,1,9],["ValueHelper",["changeEvent"],2],["d6d14LPlvFBQrqCeGHPuyRi",["node"],3,1],["cf58dh0u2dJFbr9SmWD7PIh",["node","uiElements"],3,1,9],["1e00e2udMVFQLaNYvUAZEAR",["delayCompete","delayStartGame","startLevel","_convertLevelType","node","_levels"],-1,1,9],["cc.AudioClip",["_name","_native","duration"],0],["cc.AnimationClip",["_name","_duration","speed","curveData"],-1],["cc.Model",["_name","_nodes"],1],["5a193rjU8FLhb0Dxfg9agF7",["opacitySpeedLoose","node","button"],2,1,4],["Button",["buttonMain"],3,1],["DefaultRelativePosition",[],3],["949570fxA1MuLfwaPhZFbG2",["_N$isActiveElement","isAlwaysShow","node"],1,1],["cc.SkeletonAnimationClip",["_name","_native","_duration","sample","wrapMode","description"],-3],["51e684eVRpFD69dxvtXoIAl",["node","buttonRender"],3,1,1],["cc.Label",["_string","_styleFlags","node","_materials"],1,1,3],["7a94aZ988tAIKBjLCM8CSTq",["node"],3,1],["f639cWnKURNuKJtZM+LBhfW",["rotateOffset","speedRotate","node","persona","delayAnimation","_config","moveVelocity","zoneRadius","hitZoneNode","render"],1,1,4,4,4,5,1,1,1],["480321y+y1MmJrPwx2KxFY1",["lifetime","speed","weaponDamage","targetGroups","node","rigidBody","collider"],-1,1,1,1],["cc.JsonAsset",["_name","json"],1],["cc.EffectAsset",["_name","shaders","techniques"],0],["d21313NpVdKCZcHl6FUWlsx",["node"],3,1],["RelativeSize",["srToChange","value"],2,4],["DefaultRelativeSize",["portrait","landscape"],3,5,5],["d4641fJUiBAyrxJb2XtT6Kd",["cooldown","node","bulletPosition"],2,1,5],["f5da8lxRuJOfZkcK2AsiZON",["node"],3,1]],[[33,0,1,2,4],[15,0,1,2],[12,1,0,3],[32,0,1,2,2],[34,0,1,2],[13,1,1],[31,0,1,2,3,4,2],[12,0,2],[0,0,1,8,7,6,3],[8,0,2,3,4,2],[15,1,1],[14,0,2],[0,0,1,2,8,10,6,9,12,4],[0,0,1,8,10,6,9,12,3],[8,2,3,4,1],[0,0,4,8,7,3],[23,1,2,3,1],[0,0,1,8,10,6,9,3],[0,0,1,8,7,6,9,12,3],[0,0,1,8,7,6,9,3],[10,0,3,2],[43,0,1,2,3,1],[0,0,1,2,8,6,9,12,4],[0,0,8,7,6,11,2],[0,0,1,8,6,9,12,3],[20,0,1,2,3,2],[22,0,2,2],[56,1],[26,1,0,2,3],[0,0,1,10,6,3],[0,0,8,10,6,2],[7,1,2,3,1],[11,0,1,2,3,1],[71,0,1,2,3,4,5,7],[13,0,1,2],[0,0,1,10,7,6,9,12,3],[0,0,1,10,6,9,12,3],[4,0,1,2,7,4,3,5,6,4],[4,0,1,7,4,3,5,6,3],[7,0,1,2,3,2],[52,0,1,2,3,1],[60,0,2],[2,0,1,3,2,5,5],[69,1],[28,0,1,2],[35,0,1,3],[0,0,1,8,10,6,3],[0,0,5,1,8,10,6,9,4],[0,0,1,2,10,6,9,12,4],[0,0,2,8,7,6,3],[0,0,10,7,6,11,2],[0,0,3,8,7,6,13,11,9,3],[4,0,1,2,7,8,3,4],[38,0,1,2,3,4,4],[39,0,1,1],[9,0,2,1,2],[17,1],[40,1],[21,0,1,3,4,3],[10,1,3,2],[23,0,1,2,3,2],[24,0,2],[26,0,2,2],[2,0,1,2,5,4],[66,0,1,3],[70,0,1,2,3],[14,0,1,3],[0,0,1,2,8,6,4],[0,0,1,2,8,7,6,9,12,4],[0,0,3,8,10,6,3],[0,0,8,10,6,14,9,2],[0,0,8,7,6,11,14,9,2],[0,0,1,4,8,7,4],[0,0,4,8,10,7,11,9,3],[0,0,2,8,7,9,3],[0,0,2,4,8,7,4],[0,0,2,10,7,6,3],[0,0,10,7,6,11,9,2],[0,0,7,6,11,2],[0,0,1,2,7,6,9,4],[0,0,3,10,7,6,3],[0,0,1,10,6,9,3],[0,0,1,8,10,7,6,9,3],[0,0,1,8,10,7,6,9,12,3],[0,0,1,10,7,6,9,3],[0,0,2,10,7,6,11,9,3],[0,0,2,8,7,6,11,3],[0,0,1,2,7,6,4],[0,0,2,10,7,6,11,3],[0,0,7,6,11,9,2],[0,0,5,3,2,7,6,13,11,5],[3,0,1,2,6,3,4,5,4],[3,0,1,2,6,4,5,7,4],[3,0,1,8,3,5,3],[3,0,1,2,3,4,4],[4,0,1,2,4,3,5,6,4],[36,0,1,2,3,4,5,6,4],[16,0,1,2,4,4],[16,3,0,1,2,4,5],[7,1,2,1],[8,1,0,2,3,4,3],[37,0,1,2,3,4,5,6,7,2],[9,0,1,2],[9,0,2,3,1,2],[17,0,1,3],[41,0,1,2,3,4,4],[5,0,2,2],[5,1,0,2,3,3],[5,1,2,2],[5,1,0,2,3],[18,0,1,2,3,4,5,2],[18,0,1,2,3,2],[19,1,2,1],[19,0,1,2,2],[42,0,1,2,3,3],[20,0,1,2,3,4,2],[21,0,1,2,3,4,5,4],[10,2,3,2],[22,1,0,2,3],[11,0,1,3,1],[11,0,1,2,1],[44,0,1,3],[45,0,1,2,3,4,3],[46,0,1],[47,0,1,2,3,4,5],[48,0,1,2,3,4,5,6,7,7],[49,0,1,1],[50,0,1],[51,0,1,2,1],[24,0,1,3],[25,0,1,2,3,4,5,6,6],[25,0,5,6,2],[53,0,1],[54,0,1,2,3,4,5,6,7],[55,0,1,2,2],[57,0,1,2,2],[58,0,1,2,3,4,3],[59,0,1,2,2],[61,0,1],[62,0,1,1],[63,0,1,2,3,4,5,5],[27,0,2],[27,0,1,3],[64,0,1,2,4],[2,0,1,3,5,4],[2,0,1,2,4,5,5],[2,0,1,4,5,4],[65,0,1,2,3,5],[67,0,1,2,2],[68,0,1],[28,1,1],[72,0,1,1],[73,0,1,2,3,3],[74,0,1],[75,0,1,2,3,4,5,6,7,8,9,3],[29,1,2,3,4,0,5,6,7,6],[29,0,5,2],[30,1,2,3,1],[30,0,1,2,3,2],[76,0,1,2,3,4,5,6,5],[77,0,1,3],[78,0,1,2,4],[79,0,1],[6,3,0,9,3],[6,0,1,9,3],[6,0,2,4,1,9,5],[6,0,5,6,7,8,2,1,9,8],[80,0,1,2],[81,0,1,1],[82,0,1,2,2],[83,0,1]],[[[[6,".bin",[[3,28,[7,896],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,36,[2,1016,1152],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,896,120]],[4,[1],[2,2168,150]]],[1,-0.00391676556318998,0,-0.00402982719242573],[1,0.00391676556318998,0.0137722473591566,0.00402982719242573]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4293059298]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,24,[7,768],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,768,72]]],[1,-0.5,-0.5,-0.5],[1,0.5,0.5,0.5]],-1],0,0,[],[],[]],[[[45,0,[2,3,15,19,4,16,20,5,9,11,17,21,6,10,12,18,22,7,13,8,14]]],0,0,[0],[11],[13]],[[[34,"mat_ground",[{},"0",11,[{"defines":{"USE_NORMAL_TEXTURE":false,"OUTPUT_TO_GAMMA":false,"USE_DIFFUSE_TEXTURE":true,"INPUT_IS_GAMMA":false,"USE_ALPHA_TEST":true}},"props",11,[{"alphaThreshold":0.5,"glossiness":0},"diffuseColor",8,[4,4286789956],"diffuseTexture",6,0]]]]],0,0,[0,0],[16,1],[46,0]],[[[11,"Base2"],[29,"RootNode",true,[-2,-3,-4,-5],[1,"eeOtubRplAN5YJWBorBA9U",-1]],[35,"Base2",true,[-9,-10],[[97,2,"base_upgrade","base_2_idle",-7],[39,true,-8,[19,20,21],18]],[10,-6],[-131.465,0.007,172.838,0,0.25881904510252074,0,0.9659258262890683,2500,2500,2500],[1,0,30,0]],[29,"RootNode",true,[-12,-13],[1,"0euH3WXShFbrl5anpJ3ipw",-11]],[46,"StandartBase",true,2,[3],[1,"b9m2yS069EIotN71kF6xlz",2]],[19,"loposti_01",true,3,[[9,1,-14,[0],1]],[1,"loposti_01",3],[-0.004,0.025,0,0,0,0,1,1,1,1]],[8,"House_04_01",true,3,[[9,1,-15,[2,3,4],5]],[1,"House_04_01",3]],[47,"UpgradeBase",false,true,2,[1],[1,"2ceFN3bJNPgow0gwMvQWkS",2],[0,0,0,0,0,0,1,0,0,0]],[8,"House_04_03",true,1,[[9,1,-16,[6,7,8],9]],[1,"House_04_03",1]],[19,"house_pushka_05",true,1,[[9,1,-17,[10,11,12],13]],[1,"house_pushka_05",1],[0.022,0.037,0,0,0,0,1,1,1,1]],[8,"house_pushka_06",true,1,[[9,1,-18,[14],15]],[1,"house_pushka_06",1]],[19,"loposti_01",true,1,[[14,-19,[16],17]],[1,"bbsn5OBEVNVYoe8X/5+NIi",1],[-0.013,0.03,0.001,0,0,0,1,1,1,1]]],0,[0,2,1,0,-1,8,0,-2,9,0,-3,10,0,-4,11,0,2,2,0,0,2,0,0,2,0,-1,4,0,-2,7,0,2,3,0,-1,5,0,-2,6,0,0,5,0,0,6,0,0,8,0,0,9,0,0,10,0,0,11,0,5,2,1,4,7,3,4,4,19],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,3,-1,-2,-3,3,-1,-2,-3,3,-1,-2,-3,3,-1,3,-1,3,7,-1,-2,-3],[14,15,47,48,49,50,16,51,52,53,54,55,56,57,16,58,14,15,17,18,59,17]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4288373299]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,150,[7,4800],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,28,[2,5712,896],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,4800,912]],[4,[1],[2,6608,144]]],[1,-0.0284133423119783,0.0451873019337654,-0.00470349658280611],[1,0.0262521542608738,0.0724304616451263,0.0235003232955933]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4282079948]]]]]],0,0,[0],[1],[0]],[[[11,"EnemyFull"],[91,"EnemyFull",true,4,[[-8,-9,[67,"ZoneRadius",true,8,-11,[1,"62jW0NMsZCa48q2unoBuva",-10]]],1,1,4],[[[101,2.5,-6,[53,false,4,true,-5,[54,[102,381,-4],[55,391,[1,0.011,-1.616,0],-3]]],[56],[57],[104,2,3],[105,8,1,2,[1,0,1,0],[1,25,25,25]],-2],-7],4,1],[10,-1],[0,0,0,0,0,0,1,20,20,20]],[48,"Hips",true,4,[-12,-13,-14],[1,"Armature/Root/Hips",1],[-1.3448297586649e-8,0.92145037651062,-0.00415032543241978,-4.860339686274549e-9,9.313225191043307e-10,-8.707866072654753e-8,0.9999999999999962,1,1,1],[1,-5.569538927537642e-7,1.0672165092154159e-7,-0.000009978479491084253]],[48,"Spine1",true,4,[-15,-16,-17],[1,"Armature/Root/Hips/Spine/Spine1",1],[8.12113309933693e-9,0.257231444120407,0.00396719528362155,-0.02276681005488136,-0.021057402848828247,0.005171864785666655,0.9995056327804391,1.00000035762787,1.00000011920929,1.00000023841858],[1,-2.596168720078145,-2.399169030354814,0.6473091579925262]],[92,"RightHand",true,4,[[-18,[22,"RightHand_end",true,4,-19,[1,"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand/RightHand_end",1],[-1.42108543975646e-16,0.33932438492775,2.66453519954337e-17,0,1.38777878078145e-17,0,1,1,1,1],[1,0,1.5902773407317633e-15,0]]],1,4],[1,"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand",1],[-0.339323937892914,0.00000372409817828157,9.05990589217254e-7,-1.02445465444134e-8,4.67941710584303e-16,-2.3283055483602803e-9,1,0.999999821186066,1,1.00000023841858],[1,-0.0000011739385600404388,5.088888248644938e-14,-2.668041626758742e-7]],[95,"Head",true,4,[[22,"Head_end",true,4,-20,[1,"Armature/Root/Hips/Spine/Spine1/Neck/Head/Head_end",1],[-1.77635679969558e-17,0.103930309414864,0,6.93889390390723e-18,-1.38777878078145e-17,-3.46944695195361e-18,1,1,1,1],[1,7.951386703658794e-16,-1.5902773407317633e-15,-3.975693351829391e-16]]],[1,"Armature/Root/Hips/Spine/Spine1/Neck/Head",1],[2.68220889942938e-9,0.103930033743382,-5.90085953433572e-8,-0.08924203909869441,2.6882804303879827e-9,1.198035854311296e-9,0.9960099690552836,1.00000095367432,0.99999988079071,0.999999761581421],[1,-10.240007332582232,3.190766748054014e-7,1.0924563669730693e-7]],[49,"EnemyWeapoin",9,4,[[106,0.35,-22]],[1,"aczyBkv8RMFpGVBsyUlFsY",-21]],[68,"Character_1",true,4,1,[[110,1,-23,[0],1,1,2]],[1,"Character_1",1],[4.77768491435882e-9,-2.38418551568031e-9,-1.63912783346376e-9,8.285732633339679e-8,4.802120368019317e-10,-6.041052685275623e-25,0.9999999999999966,1,1,1],[1,0.000009494750201283635,5.502824596026312e-8,4.559493263858595e-15]],[12,"Armature",true,4,1,[-24],[1,"Armature",1],[0,0,0,8.146033536604618e-8,0,0,0.9999999999999967,1,1,1],[1,0.000009334666828389458,0,0]],[12,"Root",true,4,8,[2],[1,"Armature/Root",1],[-0.00891487300395966,0.000395220384234563,-0.184758961200714,0.07941853966474506,-0.056312639023454784,-0.008821291849363453,0.995210413457296,0.999999821186066,1,1],[1,9.040814970290768,-6.357029240322019,-1.5186659825581559]],[12,"Spine",true,4,2,[3],[1,"Armature/Root/Hips/Spine",1],[-2.35438335494109e-8,0.140690356492996,-1.11758702292519e-9,-0.03489628908634128,-0.010431003136232797,0.002904886443479019,0.999332279482818,1.00000035762787,0.999999821186066,0.999999701976776],[1,-3.9960018125503907,-1.1829999662473287,0.3743675680877697]],[12,"LeftShoulder",true,4,3,[-25],[1,"Armature/Root/Hips/Spine/Spine1/LeftShoulder",1],[0.0425640009343624,0.190589442849159,0.00268511520698667,0.020495155979993466,-0.041290387764041245,-0.07741527302999197,0.9959326924854625,0.999998986721039,1.00000047683716,1.00000035762787],[1,1.997548757892088,-4.591458205116481,-8.968608880624492]],[12,"LeftArm",true,4,11,[-26],[1,"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm",1],[0.203844010829926,1.69873231925521e-7,-4.76837129781416e-8,0.3569070176356956,-0.22845698983574156,-0.4600215933869168,0.780259519759514,0.99999988079071,1,0.999999940395355],[1,47.12159255803861,-3.4093503601563695,-61.756963959020936]],[12,"LeftForeArm",true,4,12,[-27],[1,"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm",1],[0.325248062610626,1.43051144263495e-8,5.72204577053981e-8,1.1265840784042969e-7,-0.265643056199473,-0.01997360365731234,0.9638645246350399,1.00000011920929,1.00000011920929,1.00000011920929],[1,-0.6084557041763533,-30.82835221257968,-2.2066481747992297]],[37,"LeftHand",true,4,13,[[22,"LeftHand_end",true,4,-28,[1,"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand/LeftHand_end",1],[1.42108543975646e-16,0.339324295520782,-2.66453519954337e-17,-2.77555756156289e-17,6.93889390390723e-18,-1.38777878078145e-17,1,1,1,1],[1,-3.180554681463515e-15,7.951386703658794e-16,-1.5902773407317633e-15]]],[1,"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand",1],[0.339323848485947,-2.00271600192536e-7,1.08480449512172e-7,-1.8626447051417505e-9,-5.5879363358712924e-9,-1.4901162970204502e-8,0.9999999999999999,0.999999940395355,0.999999940395355,1.00000023841858],[1,-2.134433702156907e-7,-6.403303396469998e-7,-0.00000170754749486598]],[12,"Neck",true,4,3,[5],[1,"Armature/Root/Hips/Spine/Spine1/Neck",1],[-1.12652777772837e-7,0.242687031626701,0.00137423165142536,0.10747492417859225,0.01696368693404604,-0.01378177589447395,0.9939675229360384,0.999999344348907,1.00000047683716,1.00000035762787],[1,12.36749260734157,2.10296654942141,-1.3609562156518518]],[12,"RightShoulder",true,4,3,[-29],[1,"Armature/Root/Hips/Spine/Spine1/RightShoulder",1],[-0.042564008384943,0.190594151616096,0.00268549146130681,-0.9965862085576395,-0.08032463450641873,0.010011718570893838,0.01623722560588915,0.999999105930328,1.00000035762787,1.00000035762787],[1,-178.21444398142864,1.0069796823559634,9.231621956326007]],[12,"RightArm",true,4,16,[-30],[1,"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm",1],[-0.203843966126442,0.00000820256718725432,5.57899454634025e-7,0.29542767093922107,-0.23608516173615646,-0.48241298467053856,0.7901037905697599,0.999999940395355,1,0.99999988079071],[1,33.585892390139314,-11.753359301354928,-64.39632823026737]],[12,"RightForeArm",true,4,17,[4],[1,"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm",1],[-0.325247973203659,-0.00000519871719006915,-3.57627868652344e-7,3.413172553327383e-7,-0.21701379079816865,-0.016303703155256963,0.9760323784930075,1.00000023841858,1,1.00000023841858],[1,-0.40561033652284784,-25.07724031416158,-1.823805315712323]],[12,"LeftUpLeg",true,4,2,[-31],[1,"Armature/Root/Hips/LeftUpLeg",1],[0.119939766824245,4.95463581273725e-8,0,-0.679581116317029,0.44574662662357795,-0.4529598341935744,0.36647897594040907,1.00000035762787,1.00000011920929,1.00000023841858],[1,-164.23502406741264,-56.357584651569375,-69.69233157272893]],[12,"LeftLeg",true,4,19,[-32],[1,"Armature/Root/Hips/LeftUpLeg/LeftLeg",1],[0.401315838098526,9.53674295089968e-9,3.51667388542865e-8,-0.05179045771497262,-0.0279082044871857,0.14628955845262956,0.9874908838565092,1.00000011920929,1,1.00000011920929],[1,-5.647198251791867,-2.394742965078116,16.9663472876078]],[12,"LeftFoot",true,4,20,[-33],[1,"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot",1],[0.374624371528625,7.74860353658369e-8,-5.42402247560858e-8,-0.05351092961036219,0.07587712502530893,-0.5329780870480005,0.8410193820815205,0.999999284744263,0.999999225139618,1.00000023841858],[1,-1.226793498697366,9.532457463212111,-64.77084992432063]],[37,"LeftToeBase",true,4,21,[[22,"LeftToeBase_end",true,4,-34,[1,"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase/LeftToeBase_end",1],[0,0.179125517606735,-3.55271359939116e-17,1.73472347597681e-18,-2.77555756156289e-17,4.81482486096809e-35,1,1,1,1],[1,1.9878466759147014e-16,-3.180554681463515e-15,-7.350630600949912e-48]]],[1,"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase",1],[0.179125547409058,-1.43051144263495e-8,2.95042976716786e-8,-5.416294264801796e-8,-3.3400980488104295e-7,-0.23700774370722777,0.9715077608659102,1.00000047683716,1.00000023841858,1.00000011920929],[1,-0.000017012446001378332,-0.000043547553007050466,-27.420004003276663]],[12,"RightUpLeg",true,4,2,[-35],[1,"Armature/Root/Hips/RightUpLeg",1],[-0.119940020143986,3.05697312796838e-7,-2.50339500240671e-8,0.3795742711659294,0.5020920682247304,0.46465129024666774,0.622837142571614,1.00000023841858,0.99999988079071,0.999999940395355],[1,1.2745084589300422,76.79136499830781,73.73296734233716]],[12,"RightLeg",true,4,23,[-36],[1,"Armature/Root/Hips/RightUpLeg/RightLeg",1],[-0.401315629482269,1.66893006081636e-8,-5.9604643443123e-10,-0.07940408527661426,-0.04415589901217221,0.11406070665096649,0.9893105695493671,1.00000023841858,1.00000011920929,1],[1,-8.6957702935292,-4.0834152532361845,13.455804070799568]],[12,"RightFoot",true,4,24,[-37],[1,"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot",1],[-0.374624520540237,-3.81469718035987e-8,2.98023223876953e-7,0.0638326966719897,-0.03482168644728091,-0.523522712135307,0.8489032965344414,0.999999225139618,0.999999344348907,0.999999701976776],[1,9.20656517314196,0.9835003258085339,-63.28909276809335]],[37,"RightToeBase",true,4,25,[[22,"RightToeBase_end",true,4,-38,[1,"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase/RightToeBase_end",1],[3.55271359939116e-17,0.179126128554344,-3.55271359939116e-17,6.93889390390723e-17,-2.77555756156289e-17,2.7755575615628904e-17,1,1,1,1],[1,7.951386703658793e-15,-3.1805546814635156e-15,3.180554681463515e-15]]],[1,"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase",1],[-0.17912620306015,-6.44475193212202e-8,-3.70740877997378e-7,0.15120767355566134,-0.10709077392685326,-0.21143389048161654,0.9596684404279635,1.00000083446503,1,1.00000035762787],[1,15.812353205424953,-9.063696372731775,-25.989011141488792]],[112,1,[3,4,5]]],0,[0,2,1,0,13,7,0,12,5,0,12,4,0,14,27,0,0,1,0,-2,27,0,-1,8,0,-2,7,0,2,1,0,4,1,0,-1,10,0,-2,19,0,-3,23,0,-1,11,0,-2,15,0,-3,16,0,-1,6,0,4,4,0,4,5,0,2,6,0,0,6,0,0,7,0,-1,9,0,-1,12,0,-1,13,0,-1,14,0,4,14,0,-1,17,0,-1,18,0,-1,20,0,-1,21,0,-1,22,0,4,22,0,-1,24,0,-1,25,0,-1,26,0,4,26,0,5,1,2,4,9,3,4,10,4,4,18,5,4,15,38],[0,0,0,0,0,0,27],[-1,3,15,-1,-2,-3,11],[60,61,62,63,64,65,19]],[[[66,"Tutorial",true],[50,"Tutorial",[-6],[[114,60,[null],-3,-2],[31,-4,[9],8],[25,true,-5,[20,true,[21,[0,0.5,0.2],[0,0.75,0.35],[0,0.5,0.2],[0,0.71,0.26]]],[26,true,[32,[5,0.15,0.15],[5,0.15,0.15],[5,0.3,0.3],[5,0.25,0.25]]]]],[10,-1],[5,400,400]],[69,"Holder",0,1,[-7,-8,-9],[1,"c4aMmmcpRMoaX3orOYWeSE",1]],[30,"TutorialHand",2,[-10,-11],[1,"8cvz6Wo5BEWq3Yo68id5Ye",1]],[51,"Dot",120,2,[[16,-12,[0],1]],[1,"b4nVaXNa1NPYhv/bA0DObB",1],[4,4294956544],[5,81,84],[0,-39.634,0,0,0,0,1,12,12,1]],[51,"Elips",100,2,[[16,-13,[2],3]],[1,"45BGYXbVlErZDicNXdKVIc",1],[4,4278190080],[5,164,164],[0,0,0,0,0,0,1,3,3,1]],[23,"RenderLoop",3,[[16,-14,[4],5]],[1,"beO5W5K4RCsqybiDhtJujZ",1],[5,419,221]],[70,"Hand",3,[-15],[1,"2423yP9nRGsIKfxfA5Qr8p",1],[0,0.25,0.9],[-50.542,-82.707,0,0,0,0,1,1,1,1]],[71,"Render",7,[[16,-16,[6],7]],[1,"5aUNOus3BLWJ3mwEjjfcKo",1],[5,270,409],[0,0.25,0.9],[0,0,0,0,0,0,1,0.7,0.7,1]]],0,[0,2,1,0,17,2,0,0,1,0,0,1,0,0,1,0,-1,2,0,-1,4,0,-2,5,0,-3,3,0,-1,6,0,-2,7,0,0,4,0,0,5,0,0,6,0,-1,8,0,0,8,0,5,1,16],[0,0,0,0,0,0,0,0,0,0],[-1,6,-1,6,-1,6,-1,6,7,-1],[1,66,1,67,1,68,1,69,20,20]],[[{"name":"button_install_yellow","rect":[0,0,876,317],"offset":[0,0],"originalSize":[876,317],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[70]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4285018888]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,227,[7,7264],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,291,[2,8116,9312],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,127,[2,18868,4064],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,7264,852]],[4,[1],[2,17428,1440]],[4,[2],[2,22932,840]]],[1,-0.0446968451142311,0,-0.0316550955176353],[1,0.044696856290102,0.0375967621803284,0.0316550955176353]],-1],0,0,[],[],[]],[[[6,".bin",[[3,168,[7,5376],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,168,[2,6372,5376],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,5376,996]],[4,[1],[2,11748,504]]],[1,-0.00522262556478381,-3.33786012163273e-8,-0.00365112302824855],[1,0.00552177429199219,0.00538612343370914,0.00565002439543605]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4278190335]]]]]],0,0,[0],[1],[0]],[[[121,"Main",null],[122,"New Node",false,[-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12],[0,0,0],[0,0,0,0,0,0,1,1,1,1]],[72,"World",true,"0fWOOTn7lIxJwfRHs8XpxJ",1,[[123,-13]]],[15,"GameManager","4e3V2vyQtE66z46pz3FbFL",1,[[124,"JoinS","unity",true,["adwords"],-14],[125,false,4,1,[0],["adwords"],[0],-16,-15],[126,-17,[0]]]],[73,"Canvas","275mG/UnlF3IS8kdLn2uGa",1,[-19,-20],[[127,-18]],[5,960,640],[480,320,0,0,0,0,1,1,1,1]],[93,"Main Camera",true,4,[[-21,[128,-22,[[40,[1,0,0,600],[1,-45,0,0],[129,1.2,0.43],2],[40,[1,0,0,600],[1,-45,55,0],[61,2.1],2],[40,[1,0,0,600],[1,-45,55,0],[61,2.3],2]],[1,4,5,2]]],1,4],[0,0,390.5774571067819,0,0,0,1,1,1,1]],[130,-3,7,-1,260,false,5,[4,4294851188]],[74,"Ui Camera",1,4,[[131,2,-23,[4,4294967295]]],[0,0,368.9268220121709,0,0,0,1,1,1,1]],[15,"PoolManager","e2hWnWq/5BWoQ4zFWOgp8f",1,[[132,-24]]],[15,"PhysicManager","c8g1lREQFAhaMbgK/IkagO",1,[[133,false,false,false,false,true,true,-25]]],[15,"EffectManager","84hwf2LQ1BEYey1fLyrVll",1,[[134,[0,253,255,260,300,310],-26,[[null,[27],[27],[27],[27],[27]],0,4,4,4,4,4]]]],[15,"GameObjectManager","e8NI2u5CNDh4LLjP+EHDKf",1,[[135,[310,300,250,325,4,330,340,350,355,360,370,371,380,8,20,381,391],-27,[[1,2,3,4,null,5,6,null,null,7,8,9,10,null,null,11,null],6,6,6,6,0,6,6,0,0,6,6,6,6,0,0,6,0]]]],[15,"DataDictionary","afDpKrAsFPaK9k96Z8iNbq",1,[[136,153,[0,153,154],-28,[[null,12,null],0,6,0],13]]],[15,"DictionaryValue","65qs8QtSJM9YFjJ0QynjdH",1,[[137,[8771,8772,8773],-29,[[41,381],[41,383],[41,382]]]]],[15,"BaseController","19swwjZbVDQYxxSTDQUA3r",1,[[138,-30]]],[75,"UiManager",1,"02NrKjlbdL55lHE0aoXG0R",1,[[139,-31,[[28,true,4,14],[28,true,8,15],[28,true,4,16],[28,true,1,17],[62,3,18],[62,8,19],[28,true,2,20]]]]],[15,"LevelManager","58gxovbEVErLrTi6OxYEg+",1,[[140,0.2,0.8,1,[1,2],-32,[[141,153],[142,154,true]]]]]],0,[0,-1,3,0,-2,8,0,-3,9,0,-4,10,0,-5,11,0,-6,12,0,-7,13,0,-8,14,0,-9,2,0,-10,4,0,-11,15,0,-12,16,0,0,2,0,0,3,0,18,6,0,0,3,0,0,3,0,0,4,0,-1,5,0,-2,7,0,-1,6,0,0,5,0,0,7,0,0,8,0,0,9,0,0,10,0,0,11,0,0,12,0,0,13,0,0,14,0,0,15,0,0,16,0,19,1,32],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,-1,-2,-3,-4,-6,-7,-10,-11,-12,-13,-16,-2,20,9,9,9,9,9,9,9],[71,72,73,74,75,76,77,78,79,80,81,82,21,21,83,84,85,86,87,88,89]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4288373299]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4279571733]]]]]],0,0,[0],[1],[0]],[[[143,"music_loop",".mp3",3.552],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4284900966]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4281742902]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4293834505]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4285018888]]]]]],0,0,[0],[1],[0]],[[[144,"character_hit",2.5,1.5,[{},"comps",11,[{},"Hero",11,[{},"materialChange",12,[[[{"frame":0},"value",6,0],[{"frame":0.5},"value",6,1],[{"frame":1},"value",6,2],[{"frame":1.5},"value",6,3],[{"frame":2},"value",6,4],[{"frame":2.5},"value",6,5]],11,11,11,11,11,11]]]]]],0,0,[0,0,0,0,0,0],[10,10,10,10,10,10],[10,3,10,3,10,3]],[[[11,"Base1"],[35,"Base1",true,[-4,-5],[[98,1,1,"base_upgrade","base_1_idle",-2],[99,-3,[26,27]]],[10,-1],[-112.73,0.007,-132.235,0,-0.25881904510252074,0,0.9659258262890683,2500,2500,2500],[1,0,-30,0]],[29,"Render",true,[-7,-8,-9],[1,"3bTEs+/XRNTqmnO/ANTU9n",-6]],[46,"StandartBase",true,1,[-10],[1,"b9m2yS069EIotN71kF6xlz",1]],[8,"Render",true,3,[[9,1,-11,[0,1,2,3,4,5],6]],[1,"85tARH0Y9AJLuOXwDMgeHt",1]],[47,"UpgradeBase",false,true,1,[2],[1,"2ceFN3bJNPgow0gwMvQWkS",1],[0,0,0,0,0,0,1,0,0,0]],[19,"House_03_03",true,2,[[9,1,-12,[7,8,9,10],11]],[1,"House_03_03",2],[0.001,0,0,0,0,0,1,1,1,1]],[8,"House_03_01",true,2,[[9,1,-13,[12,13,14,15,16,17,18,19],20]],[1,"House_03_01",2]],[8,"House_03_02",true,2,[[9,1,-14,[21,22,23,24],25]],[1,"House_03_02",2]]],0,[0,2,1,0,0,1,0,0,1,0,-1,3,0,-2,5,0,2,2,0,-1,6,0,-2,7,0,-3,8,0,-1,4,0,0,4,0,0,6,0,0,7,0,0,8,0,5,1,2,4,5,14],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,-2,-3,-4,-5,-6,3,-1,-2,-3,-4,3,-1,-2,-3,-4,-5,-6,-7,-8,3,-1,-2,-3,-4,3,-1,-2],[90,91,92,93,94,95,96,11,12,22,23,97,11,12,22,23,98,99,24,25,100,11,12,24,25,101,102,18]],[[[42,"base_2_idle",0.8333333333333334,0.25,2,[{},"paths",11,[{},"UpgradeBase/RootNode/house_pushka_05",11,[{},"props",11,[{},"eulerAngles",12,[[[{"frame":0},"value",8,[1,0,0,0]],[{"frame":0.16666666666666666},"value",8,[1,0,40,0]],[{"frame":0.3333333333333333},"value",8,[1,0,0,0]],[{"frame":0.5},"value",8,[1,0,-40,0]],[{"frame":0.6666666666666666},"value",8,[1,0,0,0]]],11,11,11,11,11]]],"UpgradeBase/RootNode/loposti_01",11,[{},"props",11,[{},"eulerAngles",12,[[[{"frame":0},"value",8,[1,0,0,0]],[{"frame":0.16666666666666666},"value",8,[1,0,360,0]],[{"frame":0.3333333333333333},"value",8,[1,0,0,0]],[{"frame":0.5},"value",8,[1,0,360,0]],[{"frame":0.6666666666666666},"value",8,[1,0,0,0]],[{"frame":0.8333333333333334},"value",8,[1,0,360,0]]],11,11,11,11,11,11]]]]]]],0,0,[],[],[]],[[[145,"tutorial_move",2,2,[{"frame":2,"func":"onAnimationEvent","params":[]}],[{},"paths",11,[{"Holder/TutorialHand/Hand":{"props":{"position":[{"frame":0,"value":[-51,-83],"motionPath":[[-152,-74,-112,-94,-178,-61],[-192,9,-196,-12,-187,70]]},{"frame":0.5,"value":[-117,94],"motionPath":[[-21,61,-78,110,1,42],[26,-49,4,-21,59,-93]]},{"frame":1,"value":[108,-102],"motionPath":[[193,-16,180,-54,205,23],[160,71,187,53,120,96]]},{"frame":1.5,"value":[44,77],"motionPath":[]},{"frame":2,"value":[-51,-83,0]}]}}},"Text/Render",11,[{},"props",11,[{},"scale",12,[[[{"frame":0,"curve":"cubicOut"},"value",8,[0,1,1]],[{"frame":0.5,"curve":"cubicOut"},"value",8,[0,1.1,1.1]],[{"frame":1,"curve":"cubicOut"},"value",8,[0,1,1]],[{"frame":1.5,"curve":"cubicOut"},"value",8,[0,1.1,1.1]],[{"frame":2},"value",8,[0,1,1]]],11,11,11,11,11]]]]]]],0,0,[],[],[]],[[[6,".bin",[[3,40,[7,1280],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,4,[2,1448,128],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,1280,168]],[4,[1],[2,1576,12]]],[1,0.0236516613513231,0.000432989589171484,0.0329592861235142],[1,0.0373757258057594,0.0112500702962279,0.0409224070608616]],-1],0,0,[],[],[]],[[[34,"material_hero_red",[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4278190335]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,76,[7,2432],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,2432,360]]],[1,-0.00465351575985551,0,-0.0046535125002265],[1,0.00465351575985551,0.0141898225992918,0.0046535125002265]],-1],0,0,[],[],[]],[[[6,".bin",[[3,144,[7,4608],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,4608,504]]],[1,0.0141849499195814,0.0211872365325689,-0.00785123556852341],[1,0.0300269406288862,0.0303314086049795,0.00803192239254713]],-1],0,0,[],[],[]],[[{"name":"btn_base","rect":[2,2,331,98],"offset":[0,0],"originalSize":[335,102],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[103]],[[[6,".bin",[[3,1089,[7,34848],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,34848,12288]]],[1,-0.5,-0.5,-0.5],[1,0.5,0.5,0.5]],-1],0,0,[],[],[]],[[[6,".bin",[[3,14,[7,448],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,156,[2,496,4992],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,92,[2,6160,2944],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,144,[2,9536,4608],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,448,48]],[4,[1],[2,5488,672]],[4,[2],[2,9104,432]],[4,[3],[2,14144,672]]],[1,-0.00802553631365299,0.0624301098287106,-0.00705263111740351],[1,0.00770705193281174,0.0708762854337692,0.00508035626262426]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4291611852]]]]]],0,0,[0],[1],[0]],[[[63,"result_button_idle",1.5,2,[{},"paths",11,[{},"Holder",11,[{},"props",11,[{},"scale",12,[[[{"frame":0,"curve":"quadInOut"},"value",8,[0,1,1]],[{"frame":0.3333333333333333,"curve":"linear"},"value",8,[0,1.1,1.1]],[{"frame":0.6666666666666666,"curve":"linear"},"value",8,[0,1.15,1]],[{"frame":1.1666666666666667,"curve":"quadInOut"},"value",8,[0,1.2,1.2]],[{"frame":1.5},"value",8,[0,1,1]]],11,11,11,11,11]]]]]]],0,0,[],[],[]],[[{"name":"pixel","rect":[0,0,1,1],"offset":[0,0],"originalSize":[1,1],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[104]],[[{"name":"tutor_01","rect":[7,7,419,221],"offset":[0,0],"originalSize":[433,235],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[105]],[[[63,"turel_idle",4.5,22,[{},"paths",11,[{},"turel_03",11,[{},"props",11,[{},"eulerAngles",12,[[[{"frame":0},"value",8,[1,0,0,0]],[{"frame":0.6666666666666666},"value",8,[1,0,40,0]],[{"frame":2.5166666666666666},"value",8,[1,0,170,0]],[{"frame":4.5},"value",8,[1,0,0,0]]],11,11,11,11]]]]]]],0,0,[],[],[]],[[[6,".bin",[[3,76,[7,2432],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,2432,360]]],[1,-0.00465351575985551,0,-0.0046535125002265],[1,0.00465351575985551,0.0141898225992918,0.0046535125002265]],-1],0,0,[],[],[]],[[[64,"Walk Forward (1)",[{"name":"RootNode","path":"","scale":[1,1,1],"children":[1,23],"position":[0,0,0],"quat":[0,0,0,1]},{"name":"Root","parent":null,"path":"Root","scale":[1,1,1],"children":[2],"position":[7.14763359610515e-7,0.00000570556494494667,-1.59254526010955e-7],"quat":[0,0,0,1]},{"name":"Hips","parent":null,"path":"Root/Hips","scale":[1,1,1],"children":[3,15,19],"position":[-1.18994885056622e-8,0.921450316905975,-0.00415033800527453],"quat":[0,0,-8.74229968417239e-8,1],"uniqueBindPose":[1,1.7484599368344789e-7,0,0,-1.7484599368344789e-7,1,0,0,0,0,1,0,-5.417509783001151e-7,-0.9214560985565186,0.004150500055402517,1]},{"name":"Spine","parent":null,"path":"Root/Hips/Spine","scale":[1,1,1],"children":[4],"position":[-1.94840961142972e-8,0.14069028198719,1.35169655365695e-15],"quat":[-0.0281833335757256,-8.98519232350736e-8,8.49241956757396e-8,0.999602794647217],"uniqueBindPose":[1,9.851539140015575e-9,-1.745679867326544e-7,0,2.5859478810673006e-14,0.9984109997749329,0.05634429678320885,0,1.748458231531913e-7,-0.05634429678320885,0.9984109997749329,0,-7.072530365803686e-7,-1.0606926679611206,-0.05570197105407715,1]},{"name":"Spine1","parent":null,"path":"Root/Hips/Spine/Spine1","scale":[1,1,1],"children":[5,9,11],"position":[5.50148948619267e-9,0.257231324911118,0.00396719528362155],"quat":[-0.00933737773448229,1.84307379303047e-22,1.05950418810845e-22,0.999956429004669],"uniqueBindPose":[1.0000008344650269,1.3109699992241985e-8,-1.7435300492252281e-7,0,-3.4913444477060324e-14,0.9971849322319031,0.07497869431972504,0,1.7484536840584042e-7,-0.07497869431972504,0.9971849322319031,0,-7.127549110919063e-7,-1.3165802955627441,-0.08426959067583084,1]},{"name":"LeftShoulder","parent":null,"path":"Root/Hips/Spine/Spine1/LeftShoulder","scale":[1,1,1],"children":[6],"position":[0.0425640009343624,0.190589219331741,0.00268512265756726],"quat":[1.38777820175502e-17,1.72053289731991e-22,2.08166717855543e-17,1],"uniqueBindPose":[0.9999989867210388,1.3109699992241985e-8,-1.7435300492252281e-7,0,-3.4913373326292754e-14,0.9971849322319031,0.07497869431972504,0,1.7484499892361782e-7,-0.07497869431972504,0.9971849322319031,0,-0.04256463795900345,-1.5071688890457153,-0.08695469796657562,1]},{"name":"LeftArm","parent":null,"path":"Root/Hips/Spine/Spine1/LeftShoulder/LeftArm","scale":[0.999999940395355,0.999999940395355,0.999999940395355],"children":[7],"position":[0.203843995928764,1.52587887214395e-7,-2.8610228852699e-8],"quat":[1.38777894621757e-17,1.73474994575641e-18,2.63257856550249e-17,1],"uniqueBindPose":[0.9999989867210388,1.3109699992241985e-8,-1.7435300492252281e-7,0,-3.4913373326292754e-14,0.9971849322319031,0.07497869431972504,0,1.7484499892361782e-7,-0.07497869431972504,0.9971849322319031,0,-0.2464086413383484,-1.5071691274642944,-0.08695466816425323,1]},{"name":"LeftForeArm","parent":null,"path":"Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm","scale":[1,1,1],"children":[8],"position":[0.325247973203659,-2.84217077363381e-15,2.07744683677902e-8],"quat":[-6.17631621355305e-33,-1.11022328932295e-16,-5.56312975608699e-17,1],"uniqueBindPose":[0.9999989867210388,1.3109699992241985e-8,-1.7435300492252281e-7,0,-3.4913373326292754e-14,0.9971849322319031,0.07497869431972504,0,1.7484499892361782e-7,-0.07497869431972504,0.9971849322319031,0,-0.5716564655303955,-1.5071690082550049,-0.08695466816425323,1]},{"name":"LeftHand","parent":null,"path":"Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand","scale":[1,1,1],"position":[0.339323997497559,-1.56617602442566e-7,1.1444058145571e-7],"quat":[-2.77555739612677e-17,4.85722474011832e-17,-4.16333733496107e-17,1],"uniqueBindPose":[0.9999989867210388,1.3109699992241985e-8,-1.7435300492252281e-7,0,-3.4913373326292754e-14,0.9971849322319031,0.07497869431972504,0,1.7484499892361782e-7,-0.07497869431972504,0.9971849322319031,0,-0.910980761051178,-1.5071688890457153,-0.08695477992296219,1]},{"name":"Neck","parent":null,"path":"Root/Hips/Spine/Spine1/Neck","scale":[1,1,1],"children":[10],"position":[-1.12900423232531e-7,0.242686912417412,0.00137423747219145],"quat":[0.125852674245834,2.37424231386285e-8,-3.01199598595758e-9,0.992048919200897],"uniqueBindPose":[0.9999989867210388,-1.8890100150770195e-8,-1.257549939737146e-7,0,-3.5890419525230755e-9,0.9843189716339111,-0.17639799416065216,0,1.2711507224594243e-7,0.17639799416065216,0.9843189716339111,0,-5.957539883638674e-7,-1.531258225440979,0.30642446875572205,1]},{"name":"Head","parent":null,"path":"Root/Hips/Spine/Spine1/Neck/Head","scale":[1,1,1],"position":[-5.42677068646885e-15,0.103930063545704,-3.1974421732776e-16],"quat":[-0.0892419889569283,2.19666485346882e-22,6.95117219083361e-23,0.996009945869446],"uniqueBindPose":[1,3.766360112678058e-9,-1.271099989708091e-7,0,-3.588877639515431e-9,0.9999989867210388,0.001396259875036776,0,1.27115143300216e-7,-0.001396259875036776,0.9999989867210388,0,-5.957550115454069e-7,-1.663616418838501,0.010853249579668045,1]},{"name":"RightShoulder","parent":null,"path":"Root/Hips/Spine/Spine1/RightShoulder","scale":[1,1,1],"children":[12],"position":[-0.0425640009343624,0.190594062209129,0.00268549285829067],"quat":[1,-1.23634020859646e-17,-1.99352925762432e-22,6.71251143558038e-8],"uniqueBindPose":[0.9999989867210388,-1.3109699992241985e-8,1.7435300492252281e-7,0,-1.7478087797591704e-14,-0.9971849322319031,-0.0749787986278534,0,1.7484499892361782e-7,0.0749787986278534,-0.9971849322319031,0,0.042563218623399734,1.507173776626587,0.0869552418589592,1]},{"name":"RightArm","parent":null,"path":"Root/Hips/Spine/Spine1/RightShoulder/RightArm","scale":[0.999999940395355,0.999999940395355,0.999999940395355],"children":[13],"position":[-0.203843995928764,0.00000796424774307525,6.67703716317192e-7],"quat":[-2.08166830352107e-16,3.46946018684342e-18,-1.51856066783751e-17,1],"uniqueBindPose":[0.9999989867210388,-1.3109699992241985e-8,1.7435300492252281e-7,0,-1.7478087797591704e-14,-0.9971849322319031,-0.0749787986278534,0,1.7484499892361782e-7,0.0749787986278534,-0.9971849322319031,0,0.24640721082687378,1.5071659088134766,0.08695457875728607,1]},{"name":"RightForeArm","parent":null,"path":"Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm","scale":[1,1,1],"children":[14],"position":[-0.325247973203659,-0.00000525014866070705,-4.83078679280879e-7],"quat":[-2.80875889529141e-33,1.11022315697405e-16,2.52990477196934e-17,1],"uniqueBindPose":[0.9999989867210388,-1.3109699992241985e-8,1.7435300492252281e-7,0,-1.7478087797591704e-14,-0.9971849322319031,-0.0749787986278534,0,1.7484499892361782e-7,0.0749787986278534,-0.9971849322319031,0,0.5716550946235657,1.5071710348129272,0.08695504069328308,1]},{"name":"RightHand","parent":null,"path":"Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand","scale":[1,1,1],"position":[-0.339323997497559,0.00000373947023035726,7.81030735197419e-7],"quat":[-2.08166800573605e-17,-8.32667136119969e-17,1.21430676405601e-17,1],"uniqueBindPose":[0.9999989867210388,-1.3109699992241985e-8,1.7435300492252281e-7,0,-1.7478087797591704e-14,-0.9971849322319031,-0.0749787986278534,0,1.7484499892361782e-7,0.0749787986278534,-0.9971849322319031,0,0.9109793901443481,1.5071672201156616,0.0869542583823204,1]},{"name":"LeftUpLeg","parent":null,"path":"Root/Hips/LeftUpLeg","scale":[1,1,1],"children":[16],"position":[0.119939744472504,-4.26325631926939e-16,0],"quat":[-0.492217570543289,0.507663130760193,-0.492217570543289,0.507663130760193],"uniqueBindPose":[-1.7476260438797908e-7,5.400537350652712e-9,1,0,-0.9995229840278625,0.03088740073144436,-1.7484599368344789e-7,0,-0.03088740073144436,-0.9995229840278625,-1.048490204638079e-15,0,0.9208881258964539,-0.03260992094874382,-0.11994028836488724,1]},{"name":"LeftLeg","parent":null,"path":"Root/Hips/LeftUpLeg/LeftLeg","scale":[1,1,1],"children":[17],"position":[0.401315838098526,7.15255543681792e-9,1.90734770200152e-8],"quat":[-4.62651179589102e-8,6.26992289198824e-8,0.0282705724239349,0.999600291252136],"uniqueBindPose":[-3.0214181379051297e-7,-7.367901133648047e-8,1,0,-0.9961799383163452,0.08732959628105164,-2.9455298999891966e-7,0,-0.08732959628105164,-0.9961799383163452,-9.97833708993312e-8,0,0.5168988108634949,-0.06192325800657272,-0.11994022876024246,1]},{"name":"LeftFoot","parent":null,"path":"Root/Hips/LeftUpLeg/LeftLeg/LeftFoot","scale":[1,1,1],"children":[18],"position":[0.374624311923981,1.06973798708054e-8,-1.05342516931728e-8],"quat":[-3.26017449214243e-16,1.72427797155039e-16,-0.532728552818298,0.846286177635193],"uniqueBindPose":[-6.421144860269123e-8,-3.042942466890963e-7,1,0,-0.5094919800758362,-0.8604750037193298,-2.9455298999891966e-7,0,0.8604750037193298,-0.5094919800758362,-9.978320747450198e-8,0,0.11735463887453079,0.10151063650846481,-0.11994021385908127,1]},{"name":"LeftToeBase","parent":null,"path":"Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase","scale":[1.00000011920929,0.99999988079071,1.00000011920929],"position":[0.17912557721138,1.06581407981735e-16,-8.88178366760566e-17],"quat":[1.69204069167127e-16,1.2960324070996e-16,-0.237007707357407,0.971507787704468],"uniqueBindPose":[8.313315902341856e-8,-2.9967287673571263e-7,1,0,-0.055995695292949677,-0.9984309673309326,-2.945475898741279e-7,0,0.9984309673309326,-0.055995695292949677,-9.978311510394633e-8,0,-0.10157789289951324,0.0616602897644043,-0.11994019895792007,1]},{"name":"RightUpLeg","parent":null,"path":"Root/Hips/RightUpLeg","scale":[1,1,1],"children":[20],"position":[-0.119940012693405,2.54012945788418e-7,-2.09709902776467e-8],"quat":[0.507663130760193,0.492217570543289,0.507663130760193,0.492217570543289],"uniqueBindPose":[1.7476260438797908e-7,-5.400537350652712e-9,1,0,0.9995229840278625,-0.03088740073144436,-1.7484599368344789e-7,0,0.03088740073144436,0.9995229840278625,-1.048490204638079e-15,0,-0.920888364315033,0.03260994702577591,0.11993946880102158,1]},{"name":"RightLeg","parent":null,"path":"Root/Hips/RightUpLeg/RightLeg","scale":[1,1,1],"children":[21],"position":[-0.401315689086914,6.7612715426435e-9,-3.46462591949148e-8],"quat":[4.82659778811012e-8,6.40921626882118e-8,0.0282705780118704,0.999600291252136],"uniqueBindPose":[4.877350434639993e-8,8.48479970727567e-8,1,0,0.9961799383163452,-0.08732959628105164,-4.1177404597192435e-8,0,0.08732959628105164,0.9961799383163452,-8.878316037908007e-8,0,-0.5168992280960083,0.06192333251237869,0.1199394166469574,1]},{"name":"RightFoot","parent":null,"path":"Root/Hips/RightUpLeg/RightLeg/RightFoot","scale":[1,1,1],"children":[22],"position":[-0.37462443113327,-2.97352720224353e-8,2.93553711117056e-7],"quat":[0.132388293743134,-0.083337090909481,-0.526169836521149,0.835866987705231],"uniqueBindPose":[-3.101642107594671e-7,0.30901697278022766,0.9510558843612671,0,0.5094925165176392,0.8183600306510925,-0.26590120792388916,0,-0.860474705696106,0.4845559895038605,-0.1574421226978302,0,-0.11735497415065765,-0.05947938188910484,0.14543744921684265,1]},{"name":"RightToeBase","parent":null,"path":"Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase","scale":[1.00000011920929,0.99999988079071,1.00000011920929],"position":[-0.179126158356667,-1.01349947101426e-7,-3.72959760852609e-7],"quat":[0.151207655668259,-0.107090830802917,-0.211433693766594,0.959668457508087],"uniqueBindPose":[-0.0007387618534266949,0.5863401889801025,0.8100641369819641,0,0.0559961199760437,0.8088178634643555,-0.5853866934776306,0,-0.9984309673309326,0.044927991926670074,-0.03343028202652931,0,0.10148969292640686,0.02042056806385517,0.1333734691143036,1]},{"name":"Character_1","mesh":0,"skin":0,"parent":null,"path":"Character_1","scale":[1,1,1],"position":[0,0,0],"quat":[0,0,0,1]}]]],0,0,[],[],[]],[[[11,"Result"],[76,"Result",1,[-5],[[148,2,-3,[149,-2]],[58,null,false,-4,[59,11,[43]]]],[10,-1]],[50,"Button",[-8],[[25,true,-6,[20,true,[21,[0,0.5,0.1],[0,0.85,0.12],[0,0.5,0.1],[0,0.85,0.12]]],[26,true,[32,[5,0.25,0.25],[5,0.14,0.14],[5,0.4,0.4],[5,0.15,0.15]]]],[31,-7,[3],2]],[1,"e9XQCDIDJAppsQPlpIfuWO",1],[5,700,200]],[77,"IngameLogo",[-11],[[65,true,true,-9],[25,true,-10,[20,true,[21,[0,0.5,0.73],[0,0.5,0.8],[0,0.5,0.8],[0,0.85,0.84]]],[26,true,[32,[5,0.42,0.42],[5,0.25,0.25],[5,0.55,0.55],[5,0.26,0.26]]]]],[1,"dcVXH5C1BH2ZPKiJe5iUQZ",1],[5,240,80],[-652,85,0,0,0,0,1,1,1,1]],[30,"Holder",1,[2,3],[1,"04wxW50flKKKNJjrFfiWy3",1]],[78,"Button",[[16,-12,[0],1],[44,1,-13]],[1,"acL3ffAGdLibkI5qaM5wAb",1],[5,876,317]],[30,"Holder",2,[5],[1,"7dqJWm6IdGLbRRHBnZeLNK",1]],[23,"Render",3,[[16,-14,[4],5]],[1,"d3JAcNPAxFXJ6bv7XSmFOE",1],[5,221,85]]],0,[0,2,1,0,21,2,0,0,1,0,0,1,0,-1,4,0,0,2,0,0,2,0,-1,6,0,0,3,0,0,3,0,-1,7,0,0,5,0,0,5,0,0,7,0,5,1,2,4,4,3,4,4,5,4,6,14],[0,0,0,0,0,0],[-1,6,7,-1,-1,6],[1,26,27,27,1,28]],[[[33,"mixamo.com",".bin",1,30,2,{"Root":{"position":{"offset":0,"frameCount":25},"quat":{"offset":100,"frameCount":25},"scale":{"offset":225,"frameCount":1}},"Root/Hips/Spine":{"quat":{"offset":229,"frameCount":25},"scale":{"offset":354,"frameCount":1},"position":{"offset":358,"frameCount":1}},"Root/Hips/Spine/Spine1":{"quat":{"offset":362,"frameCount":25},"scale":{"offset":487,"frameCount":1},"position":{"offset":491,"frameCount":1}},"Root/Hips/Spine/Spine1/LeftShoulder":{"quat":{"offset":495,"frameCount":24},"scale":{"offset":615,"frameCount":1},"position":{"offset":619,"frameCount":1}},"Root/Hips/Spine/Spine1/LeftShoulder/LeftArm":{"quat":{"offset":623,"frameCount":25},"scale":{"offset":748,"frameCount":1},"position":{"offset":752,"frameCount":1}},"Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm":{"quat":{"offset":756,"frameCount":25},"scale":{"offset":881,"frameCount":1},"position":{"offset":885,"frameCount":1}},"Root/Hips/Spine/Spine1/Neck":{"quat":{"offset":889,"frameCount":24},"scale":{"offset":1009,"frameCount":1},"position":{"offset":1013,"frameCount":1}},"Root/Hips/Spine/Spine1/RightShoulder":{"quat":{"offset":1017,"frameCount":24},"scale":{"offset":1137,"frameCount":1},"position":{"offset":1141,"frameCount":1}},"Root/Hips/Spine/Spine1/RightShoulder/RightArm":{"quat":{"offset":1145,"frameCount":25},"scale":{"offset":1270,"frameCount":1},"position":{"offset":1274,"frameCount":1}},"Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm":{"quat":{"offset":1278,"frameCount":25},"scale":{"offset":1403,"frameCount":1},"position":{"offset":1407,"frameCount":1}},"Root/Hips/LeftUpLeg":{"quat":{"offset":1411,"frameCount":25},"scale":{"offset":1536,"frameCount":1},"position":{"offset":1540,"frameCount":1}},"Root/Hips/LeftUpLeg/LeftLeg":{"quat":{"offset":1544,"frameCount":25},"scale":{"offset":1669,"frameCount":1},"position":{"offset":1673,"frameCount":1}},"Root/Hips/LeftUpLeg/LeftLeg/LeftFoot":{"quat":{"offset":1677,"frameCount":25},"scale":{"offset":1802,"frameCount":1},"position":{"offset":1806,"frameCount":1}},"Root/Hips/RightUpLeg":{"quat":{"offset":1810,"frameCount":25},"scale":{"offset":1935,"frameCount":1},"position":{"offset":1939,"frameCount":1}},"Root/Hips/RightUpLeg/RightLeg":{"quat":{"offset":1943,"frameCount":25},"scale":{"offset":2068,"frameCount":1},"position":{"offset":2072,"frameCount":1}},"Root/Hips/RightUpLeg/RightLeg/RightFoot":{"quat":{"offset":2076,"frameCount":25},"scale":{"offset":2201,"frameCount":1},"position":{"offset":2205,"frameCount":1}},"Root/Hips":{"quat":{"offset":2209,"frameCount":1},"scale":{"offset":2214,"frameCount":1},"position":{"offset":2218,"frameCount":1}},"Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand":{"quat":{"offset":2222,"frameCount":1},"scale":{"offset":2227,"frameCount":1},"position":{"offset":2231,"frameCount":1}},"Root/Hips/Spine/Spine1/Neck/Head":{"quat":{"offset":2235,"frameCount":1},"scale":{"offset":2240,"frameCount":1},"position":{"offset":2244,"frameCount":1}},"Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand":{"quat":{"offset":2248,"frameCount":1},"scale":{"offset":2253,"frameCount":1},"position":{"offset":2257,"frameCount":1}},"Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase":{"quat":{"offset":2261,"frameCount":1},"scale":{"offset":2266,"frameCount":1},"position":{"offset":2270,"frameCount":1}},"Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase":{"quat":{"offset":2274,"frameCount":1},"scale":{"offset":2279,"frameCount":1},"position":{"offset":2283,"frameCount":1}},"Character_1":{"quat":{"offset":2287,"frameCount":1},"scale":{"offset":2292,"frameCount":1},"position":{"offset":2296,"frameCount":1}}}],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4282079948]]]]]],0,0,[0],[1],[0]],[[[11,"Base3"],[36,"Base3",true,[-2,-3],[10,-1],[190.813,0,-196.025,0,0.42261826174069944,0,0.9063077870366499,1500,1500,1500],[1,0,50,0]],[8,"House_02_04",true,1,[[9,1,-4,[0,1],2]],[1,"House_02_04",1]],[8,"House_02_03",true,1,[[9,1,-5,[3,4,5,6,7],8]],[1,"House_02_03",1]]],0,[0,2,1,0,-1,2,0,-2,3,0,0,2,0,0,3,0,5,1,5],[0,0,0,0,0,0,0,0,0],[-1,-2,3,-1,-2,-3,-4,-5,3],[106,29,107,29,108,109,110,111,112]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4290679303]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4281742902]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4283640070]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{"USE_ALPHA_TEST":false}},"props",11,[{},"diffuseColor",8,[4,4281001452]]]]]],0,0,[0],[1],[0]],[[[34,"mat_bullet",[{},"0",11,[{"defines":{"USE_ALPHA_TEST":false,"USE_NORMAL_TEXTURE":false,"OUTPUT_TO_GAMMA":false}},"props",11,[{"glossiness":10},"diffuseColor",8,[4,4294901964]]]]]],0,0,[0],[1],[0]],[[[11,"Box"],[79,"Box",true,2,[[100,true,1,-2,[0],1]],[10,-1],[0,0,0,0,0,0,1,2500,0.01,2500]]],0,[0,2,1,0,0,1,0,5,1,2],[0,0],[-1,3],[113,114]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4279404350]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4287638314]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,288,[7,9216],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,9216,864]]],[1,-0.0118379686027765,-0.0103361885994673,-0.0120338331907988],[1,0.0120312022045255,-0.00900073256343603,0.0118353376165032]],-1],0,0,[],[],[]],[[[11,"ButtonUpgrade"],[80,"ButtonUpgrade",0,[-6],[[151,-3,-2],[115,true,-5,[20,true,[21,[0,0.5,0.25],[0,0.5,0.25],[0,0.5,0.25],[0,0.5,0.15]]],[26,true,[119,[5,0.4,0.4],[5,0.3,0.3],[5,0.28,0.29]]],-4]],[10,-1]],[30,"Holder",1,[-7,-8],[1,"f6cbqeKwxFwrpouIhLuJ+/",1]],[23,"Render",2,[[16,-9,[0],1],[44,9,-10]],[1,"f4cfEvffFHSYOdcrM6QmQR",1],[5,331,98]],[23,"Text",2,[[152,"UPGRADE",1,-11,[2]]],[1,"9fKPQ5eOZAu4JwjLmlZ7it",1],[5,200.02,50.4]]],0,[0,2,1,0,22,2,0,0,1,0,23,3,0,0,1,0,-1,2,0,-1,3,0,-2,4,0,0,3,0,0,3,0,0,4,0,5,1,11],[0,0,0],[-1,6,-1],[1,115,1]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4278255873]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4284900966]]]]]],0,0,[0],[1],[0]],[[[33,"Armature|Armature.001|mixamo.com|Layer0.001",".bin",3.8333332538604736,30,2,{"Armature/Root":{"position":{"offset":0,"frameCount":93},"quat":{"offset":372,"frameCount":93},"scale":{"offset":837,"frameCount":1}},"Armature/Root/Hips":{"position":{"offset":841,"frameCount":2},"quat":{"offset":849,"frameCount":1},"scale":{"offset":854,"frameCount":1}},"Armature/Root/Hips/Spine":{"position":{"offset":858,"frameCount":2},"quat":{"offset":866,"frameCount":91},"scale":{"offset":1321,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1":{"quat":{"offset":1325,"frameCount":92},"scale":{"offset":1785,"frameCount":1},"position":{"offset":1789,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder":{"position":{"offset":1793,"frameCount":2},"quat":{"offset":1801,"frameCount":85},"scale":{"offset":2226,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm":{"quat":{"offset":2230,"frameCount":93},"scale":{"offset":2695,"frameCount":1},"position":{"offset":2699,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm":{"quat":{"offset":2703,"frameCount":89},"scale":{"offset":3148,"frameCount":1},"position":{"offset":3152,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand":{"position":{"offset":3156,"frameCount":2},"quat":{"offset":3164,"frameCount":1},"scale":{"offset":3169,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck":{"quat":{"offset":3173,"frameCount":92},"scale":{"offset":3633,"frameCount":1},"position":{"offset":3637,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck/Head":{"position":{"offset":3641,"frameCount":2},"quat":{"offset":3649,"frameCount":1},"scale":{"offset":3654,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder":{"quat":{"offset":3658,"frameCount":92},"scale":{"offset":4118,"frameCount":1},"position":{"offset":4122,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm":{"position":{"offset":4126,"frameCount":2},"quat":{"offset":4134,"frameCount":93},"scale":{"offset":4599,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm":{"quat":{"offset":4603,"frameCount":92},"scale":{"offset":5063,"frameCount":1},"position":{"offset":5067,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg":{"position":{"offset":5071,"frameCount":2},"quat":{"offset":5079,"frameCount":93},"scale":{"offset":5544,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg":{"quat":{"offset":5548,"frameCount":93},"scale":{"offset":6013,"frameCount":1},"position":{"offset":6017,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot":{"quat":{"offset":6021,"frameCount":92},"scale":{"offset":6481,"frameCount":1},"position":{"offset":6485,"frameCount":1}},"Armature/Root/Hips/RightUpLeg":{"position":{"offset":6489,"frameCount":2},"quat":{"offset":6497,"frameCount":93},"scale":{"offset":6962,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg":{"quat":{"offset":6966,"frameCount":93},"scale":{"offset":7431,"frameCount":1},"position":{"offset":7435,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot":{"quat":{"offset":7439,"frameCount":93},"scale":{"offset":7904,"frameCount":1},"position":{"offset":7908,"frameCount":1}},"Armature":{"quat":{"offset":7912,"frameCount":1},"scale":{"offset":7917,"frameCount":1},"position":{"offset":7921,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand/LeftHand_end":{"quat":{"offset":7925,"frameCount":1},"scale":{"offset":7930,"frameCount":1},"position":{"offset":7934,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck/Head/Head_end":{"quat":{"offset":7938,"frameCount":1},"scale":{"offset":7943,"frameCount":1},"position":{"offset":7947,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand":{"quat":{"offset":7951,"frameCount":1},"scale":{"offset":7956,"frameCount":1},"position":{"offset":7960,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand/RightHand_end":{"quat":{"offset":7964,"frameCount":1},"scale":{"offset":7969,"frameCount":1},"position":{"offset":7973,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase":{"quat":{"offset":7977,"frameCount":1},"scale":{"offset":7982,"frameCount":1},"position":{"offset":7986,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase/LeftToeBase_end":{"quat":{"offset":7990,"frameCount":1},"scale":{"offset":7995,"frameCount":1},"position":{"offset":7999,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase":{"quat":{"offset":8003,"frameCount":1},"scale":{"offset":8008,"frameCount":1},"position":{"offset":8012,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase/RightToeBase_end":{"quat":{"offset":8016,"frameCount":1},"scale":{"offset":8021,"frameCount":1},"position":{"offset":8025,"frameCount":1}},"Character_1":{"quat":{"offset":8029,"frameCount":1},"scale":{"offset":8034,"frameCount":1},"position":{"offset":8038,"frameCount":1}}}],-1],0,0,[],[],[]],[[[6,".bin",[[3,20,[7,640],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,640,84]]],[1,-0.00470743421465158,0,-0.00220932718366385],[1,0.00470743421465158,0.00745240412652493,0.00220932718366385]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4291611852]]]]]],0,0,[0],[1],[0]],[[[11,"Walls"],[81,"Holder",true,[-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13],[1,"b8YoyMr2tJpL/kfCnprVjN",-1],[0,-0.04,0,0,0,0,1,1,1,1]],[13,"WallPoint",true,1,[-15,-16,-17],[1,"9cWvmOAUJNaq37T/fvuqvI",-14],[-0.079,0,0,0,0.7071067811865475,0,0.7071067811865477,1,1,1],[1,0,89.99999999999999,0]],[13,"WallPoint",true,1,[-19,-20,-21],[1,"18Qti8xYlLVKLmQsQjbyne",-18],[0.08,0,0,0,0.7071067811865475,0,0.7071067811865477,1,1,1],[1,0,89.99999999999999,0]],[82,"Turel",true,1,[-24,-25],[[39,true,-23,[11],10]],[1,"6bLbgUtJBDPpzZlIt3XETT",-22],[0.08,0.011,0,0,0,0,1,1,1,1]],[83,"Turel",true,1,[-28,-29],[[39,true,-27,[23],22]],[1,"7dfz198h1M858vp1UjFoq5",-26],[-0.079,0.011,0,0,1,0,6.123233995736766e-17,1,1,1],[1,0,180,0]],[84,"Walls",true,[1],[[31,-31,[57],56],[153,-32]],[10,-30],[0,0,0,0,0,0,1,3000,3000,3000]],[13,"WallLong",true,1,[-34],[1,"5b4Sy2p6xEWa37njlyF0kp",-33],[-0.079,0,0.002,0,0.7071067811865475,0,0.7071067811865477,18,1.5,1.5],[1,0,89.99999999999999,0]],[13,"WallLong",true,1,[-36],[1,"44IKnoKlVCer8Q22drHwEd",-35],[0.08,0,0,0,0.7071067811865475,0,0.7071067811865477,18,1.5,1.5],[1,0,89.99999999999999,0]],[17,"WallCorner",true,1,[-38],[1,"afezNAVkROQ6q08WEcKH89",-37],[0.08,0,-0.083,0,0,0,1,1,1,1]],[17,"WallCorner",true,1,[-40],[1,"2fkLCYnW5GzLqgpxRPEp8q",-39],[-0.08,0,-0.083,0,0,0,1,1,1,1]],[17,"WallCorner",true,1,[-42],[1,"bbeWN9+v1A37Je4FjFqmEJ",-41],[-0.08,0,0.087,0,0,0,1,1,1,1]],[17,"WallCorner",true,1,[-44],[1,"8aS3Iozp5P4YM2eoqFeyqg",-43],[0.08,0,0.087,0,0,0,1,1,1,1]],[17,"WallLong",true,1,[-46],[1,"2dDM9A6KpG4ZxTprm+RGBo",-45],[0,0,0.087,0,0,0,1,17,1.5,1.5]],[17,"WallLong",true,1,[-48],[1,"19GbsvRh5In4z3EoGKF57D",-47],[0,0,-0.083,0,0,0,1,17,1.5,1.5]],[8,"turel_04",true,4,[[9,1,-49,[0,1],2]],[1,"turel_04",4]],[8,"turel_03",true,4,[[9,1,-50,[3,4,5,6,7,8],9]],[1,"turel_03",4]],[8,"turel_04",true,5,[[9,1,-51,[12,13],14]],[1,"turel_04",5]],[8,"turel_03",true,5,[[9,1,-52,[15,16,17,18,19,20],21]],[1,"turel_03",5]],[8,"Woll_02_03",true,2,[[14,-53,[24,25],26]],[1,"Woll_02_03",2]],[19,"Woll_02_02",true,2,[[14,-54,[27,28],29]],[1,"Woll_02_02",2],[-0.0369142293930054,-0.000523813243489712,-0.0446895360946655,0,0,0,1,1.20975935459137,1.20975935459137,1.20975935459137]],[8,"Woll_02_01",true,2,[[14,-55,[30],31]],[1,"Woll_02_01",2]],[8,"Woll_01_03",true,7,[[9,1,-56,[32],33]],[1,"Woll_01_03",7]],[8,"Woll_01_03",true,8,[[9,1,-57,[34],35]],[1,"Woll_01_03",8]],[8,"Woll_02_03",true,3,[[14,-58,[36,37],38]],[1,"Woll_02_03",3]],[19,"Woll_02_02",true,3,[[14,-59,[39,40],41]],[1,"Woll_02_02",3],[-0.0369142293930054,-0.000523813243489712,-0.0446895360946655,0,0,0,1,1.20975935459137,1.20975935459137,1.20975935459137]],[8,"Woll_02_01",true,3,[[14,-60,[42],43]],[1,"Woll_02_01",3]],[18,"Woll_02_01",true,9,[[14,-61,[44],45]],[1,"Woll_02_01",9],[0,0,0,8.146033536604618e-8,0,0,0.9999999999999967,1,1,1],[1,0.000009334666828389458,0,0]],[18,"Woll_02_01",true,10,[[14,-62,[46],47]],[1,"Woll_02_01",10],[0,0,0,8.146033536604618e-8,0,0,0.9999999999999967,1,1,1],[1,0.000009334666828389458,0,0]],[18,"Woll_02_01",true,11,[[14,-63,[48],49]],[1,"Woll_02_01",11],[0.002,0,-0.001,8.146033536604618e-8,0,0,0.9999999999999967,1,1,1],[1,0.000009334666828389458,0,0]],[18,"Woll_02_01",true,12,[[14,-64,[50],51]],[1,"Woll_02_01",12],[-0.001,0,-0.001,8.146033536604618e-8,0,0,0.9999999999999967,1,1,1],[1,0.000009334666828389458,0,0]],[8,"Woll_01_03",true,13,[[9,1,-65,[52],53]],[1,"Woll_01_03",13]],[8,"Woll_01_03",true,14,[[9,1,-66,[54],55]],[1,"Woll_01_03",14]]],0,[0,2,6,0,-1,4,0,-2,5,0,-3,2,0,-4,7,0,-5,8,0,-6,3,0,-7,9,0,-8,10,0,-9,11,0,-10,12,0,-11,13,0,-12,14,0,2,2,0,-1,19,0,-2,20,0,-3,21,0,2,3,0,-1,24,0,-2,25,0,-3,26,0,2,4,0,0,4,0,-1,15,0,-2,16,0,2,5,0,0,5,0,-1,17,0,-2,18,0,2,6,0,0,6,0,0,6,0,2,7,0,-1,22,0,2,8,0,-1,23,0,2,9,0,-1,27,0,2,10,0,-1,28,0,2,11,0,-1,29,0,2,12,0,-1,30,0,2,13,0,-1,31,0,2,14,0,-1,32,0,0,15,0,0,16,0,0,17,0,0,18,0,0,19,0,0,20,0,0,21,0,0,22,0,0,23,0,0,24,0,0,25,0,0,26,0,0,27,0,0,28,0,0,29,0,0,30,0,0,31,0,0,32,0,5,6,1,4,6,66],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[-1,-2,3,-1,-2,-3,-4,-5,-6,3,7,-1,-1,-2,3,-1,-2,-3,-4,-5,-6,3,7,-1,-1,-2,3,-1,-2,3,-1,3,-1,3,-1,3,-1,-2,3,-1,-2,3,-1,3,-1,3,-1,3,-1,3,-1,3,-1,3,-1,3,7,-1],[4,30,31,32,4,33,34,35,36,37,5,5,4,30,31,32,4,33,34,35,36,37,5,5,38,2,39,2,40,41,2,42,6,7,6,7,38,2,39,2,40,41,2,42,8,9,8,9,8,9,8,9,6,7,6,7,43,43]],[[[6,".bin",[[3,166,[7,5312],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,60,[2,6176,1920],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,72,[2,8408,2304],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,48,[2,10940,1536],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,69,[2,12764,2208],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,18,[2,15332,576],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,5312,864]],[4,[1],[2,8096,312]],[4,[2],[2,10712,228]],[4,[3],[2,12476,288]],[4,[4],[2,14972,360]],[4,[5],[2,15908,72]]],[1,-0.00234579085372388,0.00509910564869642,-0.00462707504630089],[1,0.00234550470486283,0.0101808924227953,0.00945129338651896]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4283640070]]]]]],0,0,[0],[1],[0]],[[[42,"base_1_idle",0.5,0.35,2,[{},"paths",11,[{},"UpgradeBase/Render/House_03_02",11,[{},"props",11,[{},"eulerAngles",12,[[[{"frame":0},"value",8,[1,0,0,0]],[{"frame":0.5},"value",8,[1,0,360,0]]],11,11]]],"UpgradeBase/Render/House_03_03",11,[{},"props",11,[{},"eulerAngles",12,[[[{"frame":0},"value",8,[1,0,0,0]],[{"frame":0.5},"value",8,[1,0,360,0]]],11,11]]]]]]],0,0,[],[],[]],[[[11,"Hero"],[96,"Rifle Idle (1)",true,5,[-13,-14,-15,-16],[[[154,90,250,-8,[53,false,3,true,-7,[54,[103,340,[1,0,0,-0.2],[1,0,40,180],-6],[55,350,[1,0,-1.53,0],-5]]],[56],[57],[0,250,0],-4,-3,-2],[31,-9,[3],2],-10,[155,1,0,0,true,false,-11,[1,1,0,1],[1,1,0,1]],[157,-12,[1,0,1.2,0],[1,0.4,2.5,0.2]]],4,4,1,4,4],[10,-1],[-3.308,8,71.903,0,0,0,1,20,20,20]],[36,"Hips",true,[-17,-18,-19],[1,"8d5NYbaXdN/JGQ9inj69Jd",1],[-1.18994885056622e-8,0.921450316905975,-0.00415033800527453,0,0,-8.742299684172425e-8,0.9999999999999962,1,1,1],[1,0,0,-0.000010017937502832661]],[36,"Spine1",true,[-20,-21,-22],[1,"cdy9WY9rVP0KEIoST/uoQ+",1],[5.50148948619267e-9,0.257231324911118,0.00396719528362155,-0.00933737795168189,1.8430738354499419e-22,1.0595042135589338e-22,0.9999564057362638,1,1,1],[1,-1.070000245369251,2.1232515035993832e-20,1.1943288603768297e-20]],[49,"HitZone",5,1,[[158,true,-23,[1,0,1.2,0],[1,1,2.5,1]]],[1,"d1jFHVGddAPoGGo7ic596e",1]],[17,"Root",true,1,[2],[1,"e3PHXdaTpHMpjd/Y2O8N9y",1],[0,0.00001,0,0,0,0,1,1,1,1]],[13,"Spine",true,2,[3],[1,"dfZnGT/xdD4qg0xWm5M/2x",1],[-1.94840961142972e-8,0.14069028198719,1.35169655365695e-15,-0.02818333424201835,-8.985192547598027e-8,8.492419756678061e-8,0.9996027709400307,1,1,1],[1,-3.2299999039496488,-0.000010017913414896807,0.000010017913806887304]],[13,"LeftShoulder",true,3,[-24],[1,"69fQt3df5GLrA4wB9I0l72",1],[0.0425640009343624,0.190589219331741,0.00268512265756726,1.38777820175502e-17,1.7205328973199102e-22,2.08166717855543e-17,1,1,1,1],[1,1.59027667721635e-15,1.971585470593615e-20,2.385414873642642e-15]],[13,"LeftArm",true,7,[-25],[1,"5a1X13n61GxqmPWvyqnfHZ",1],[0.203843995928764,1.52587887214395e-7,-2.8610228852699e-8,1.38777894621757e-17,1.73474994575641e-18,2.63257856550249e-17,1,0.999999940395355,0.999999940395355,0.999999940395355],[1,1.5902775303075926e-15,1.9878770080478152e-16,3.0167128207979446e-15]],[13,"LeftForeArm",true,8,[-26],[1,"20I9IS7iVI9YSdMW56g3Lc",1],[0.325247973203659,-2.84217077363381e-15,2.07744683677902e-8,-6.176316213553049e-33,-1.11022328932295e-16,-5.56312975608699e-17,1,1,1,1],[1,-1.4155074082636715e-30,-1.2722221759067351e-14,-6.374877118148553e-15]],[24,"LeftHand",true,9,[1,"6cpkK8q7VBG6ZHcpdWPu3U",1],[0.339323997497559,-1.56617602442566e-7,1.1444058145571e-7,-2.77555739612677e-17,4.8572247401183205e-17,-4.16333733496107e-17,1,1,1,1],[1,-3.1805544918876857e-15,5.565969555106157e-15,-4.7708331596502645e-15]],[13,"Neck",true,3,[-27],[1,"5ezGZqgJVCYIke5qpZ9q/k",1],[-1.12900423232531e-7,0.242686912417412,0.00137423747219145,0.12585267142478954,2.374242260643138e-8,-3.011995778994436e-9,0.9920489428930628,1,1,1],[1,14.459998269864679,0.0000027424868902174356,9.461355977842269e-15]],[24,"Head",true,11,[1,"255+GJ7hVKrpB8jIHuFbYw",1],[-5.42677068646885e-15,0.103930063545704,-3.1974421732776e-16,-0.08924198653588539,2.1966647963176417e-22,6.951171891548402e-23,0.996009973764886,1,1,1],[1,-10.240001285198769,2.578234086680296e-20,5.68728132631348e-21]],[13,"RightShoulder",true,3,[-28],[1,"7fS/pEOD9FX4+6eCWejn/h",1],[-0.0425640009343624,0.190594062209129,0.00268549285829067,0.9999999999999978,-1.2363402085964628e-17,-1.993529257631895e-22,6.71251144170361e-8,1,1,1],[1,179.99999230802848,2.2749063623008577e-20,-1.416741519899553e-15]],[13,"RightArm",true,13,[-29],[1,"7fITnfGMdMc7shJGWUHtNx",1],[-0.203843995928764,0.00000796424774307525,6.67703716317192e-7,-2.08166830352107e-16,3.46946018684342e-18,-1.51856066783751e-17,1,0.999999940395355,0.999999940395355,0.999999940395355],[1,-2.385416162758307e-14,3.975708517895956e-16,-1.7401423440331402e-15]],[38,"RightForeArm",true,14,[[24,"RightHand",true,-30,[1,"11lTcgbWdGz49XRCyiQoPD",1],[-0.339323997497559,0.00000373947023035726,7.81030735197419e-7,-2.08166800573605e-17,-8.326671361199692e-17,1.21430676405601e-17,1,1,1,1],[1,-2.38541582152181e-15,-9.541662527783891e-15,1.3914930522919526e-15]]],[1,"2chIio1KZI5pAkT27AauTd",1],[-0.325247973203659,-0.00000525014866070705,-4.83078679280879e-7,-2.80875889529141e-33,1.11022315697405e-16,2.52990477196934e-17,1,1,1,1],[1,-6.437201177545125e-31,1.2722220242460673e-14,2.8990573200770022e-15]],[13,"LeftUpLeg",true,2,[-31],[1,"3cPsb4qelPwJOkCbR/OmG3",1],[0.119939744472504,-4.26325631926939e-16,0,-0.49221728640137125,0.5076631307587812,-0.49221757054457577,0.5076634238184375,1,1,1],[1,0,89.99996692476647,-88.22996571821014]],[13,"LeftLeg",true,16,[-32],[1,"8fgcYU1GlDX6oOxirwAkfu",1],[0.401315838098526,7.15255543681792e-9,1.90734770200152e-8,-4.626511726565339e-8,6.269922794474736e-8,0.028270571964319903,0.9996003075033563,1,1,1],[1,-0.000005511401081089114,0.000007343547901807698,3.2400005954315496]],[38,"LeftFoot",true,17,[[24,"LeftToeBase",true,-33,[1,"be36yiGBdDA5n0UrJ/1qJj",1],[0.17912557721138,1.06581407981735e-16,-8.88178366760566e-17,1.692040707514356e-16,1.296032412098899e-16,-0.2370077120189358,0.9715077685966023,1.00000011920929,0.99999988079071,1.00000011920929],[1,2.5186390239730936e-14,2.1431435612601293e-14,-27.420000265574416]]],[1,"11uh++BH1E0a9eQN/t5Tkn",1],[0.374624311923981,1.06973798708054e-8,-1.05342516931728e-8,-3.260174508361023e-16,1.7242780109550603e-16,-0.532728556172034,0.8462861723074885,1,1,1],[1,-4.877471621910319e-14,-7.355565771733204e-15,-64.37999685660749]],[13,"RightUpLeg",true,2,[-34],[1,"7fl8iK7A1ChaNHq6QVO2Bt",1],[-0.119940012693405,2.54012945788418e-7,-2.09709902776467e-8,0.5076634238184375,0.4922175705445757,0.5076631307587812,0.4922172864013713,1,1,1],[1,180,-89.99996692476647,88.22996571821014]],[13,"RightLeg",true,19,[-35],[1,"a9TLaWW3ZMdaP+2DYfOMdu",1],[-0.401315689086914,6.7612715426435e-9,-3.46462591949148e-8,4.82659770468755e-8,6.409216161402411e-8,0.028270577556728484,0.999600307345192,1,1,1],[1,0.000005329550919179573,0.000007196627677326717,3.2400012365312985]],[38,"RightFoot",true,20,[[24,"RightToeBase",true,-36,[1,"93ssJcEhhExppNsnHIq5T1",1],[-0.179126158356667,-1.01349947101426e-7,-3.72959760852609e-7,0.1512076513291424,-0.10709082683819135,-0.21143368940759585,0.9596684823261256,1.00000011920929,0.99999988079071,1.00000011920929],[1,15.812349448061903,-9.063706269214219,-25.988988387664772]]],[1,"bb1X9ISxFAzqtPnszYQ1HT",1],[-0.37462443113327,-2.97352720224353e-8,2.93553711117056e-7,0.13238830088323192,-0.08333710485594933,-0.5261698648990739,0.8358669379844914,1,1,1],[1,17.999998446216377,9.894280895102318e-7,-64.38000768597041]],[52,"Character_1",true,5,1,[-37],[1,"Character_1",1]],[111,1,22,[0],1],[52,"Zone",true,7,1,[-38],[1,"21ILbrhWxKdLYQglANfa6s",1]],[107,true,10,24,[1,0,1.5,0]],[113,true,1,[1]]],0,[0,2,1,0,13,23,0,24,4,0,25,25,0,12,12,0,12,10,0,14,26,0,0,1,0,0,1,0,-3,26,0,0,1,0,0,1,0,-1,5,0,-2,22,0,-3,24,0,-4,4,0,-1,6,0,-2,16,0,-3,19,0,-1,7,0,-2,11,0,-3,13,0,0,4,0,-1,8,0,-1,9,0,-1,10,0,-1,12,0,-1,14,0,-1,15,0,4,15,0,-1,17,0,-1,18,0,4,18,0,-1,20,0,-1,21,0,4,21,0,-1,23,0,-1,25,0,5,1,2,4,5,3,4,6,38],[0,0,0,0,23,23,26,26],[-1,-1,7,-1,3,15,7,11],[3,44,45,45,116,117,44,13]],[[[6,".bin",[[3,307,[7,9824],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,86,[2,11360,2752],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,127,[2,14424,4064],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,9824,1536]],[4,[1],[2,14112,312]],[4,[2],[2,18488,840]]],[1,-0.0362904332578182,0,-0.0316550955176353],[1,0.0362904332578182,0.0246268752962351,0.031655091792345]],-1],0,0,[],[],[]],[[[11,"IngameLogo"],[85,"IngameLogo",1,[-4],[[65,true,true,-2],[25,true,-3,[20,true,[21,[0,0.15,0.07],[0,0.15,0.1],[0,0.25,0.07],[0,0.13,0.1]]],[26,true,[32,[5,0.27,0.27],[5,0.2,0.2],[5,0.4,0.4],[5,0.15,0.15]]]]],[10,-1],[5,240,80],[-652,85,0,0,0,0,1,1,1,1]],[86,"Render",1,1,[[16,-5,[0],1]],[1,"bb5Q6zfrVAq4z+743EDGrM",1],[5,221,85]]],0,[0,2,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,5],[0,0],[-1,6],[1,28]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4287861651]]]]]],0,0,[0],[1],[0]],[[[11,"Bullet"],[94,"Bullet",true,3,[[[9,1,-2,[0],1],-3,-4,[159,10,15,2,["enemy","construction"],-7,-6,-5]],4,1,1,4],[10,-1]],[108,true,1],[156,false,1]],0,[0,2,1,0,0,1,0,-2,2,0,-3,3,0,26,2,0,27,3,0,0,1,0,5,1,7],[0,0],[-1,3],[118,119]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4290507513]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,314,[7,10048],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,145,[2,11344,4640],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,105,[2,16764,3360],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,18,[2,20628,576],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,42,[2,21288,1344],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,18,[2,22764,576],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,10048,1296]],[4,[1],[2,15984,780]],[4,[2],[2,20124,504]],[4,[3],[2,21204,84]],[4,[4],[2,22632,132]],[4,[5],[2,23340,60]]],[1,-0.0321294106543064,0,-0.0313987135887146],[1,0.0321294218301773,0.0460615009069443,0.0313987135887146]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4294967295]]]]]],0,0,[0],[1],[0]],[[{"name":"img_logo_join_s","rect":[21,7,221,85],"offset":[6.5,0.5],"originalSize":[250,100],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[120]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4279571733]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4285162283]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,13,[7,416],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,85,[2,488,2720],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,151,[2,3856,4832],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,36,[2,10356,1152],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,61,[2,11844,1952],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,51,[2,14444,1632],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,416,72]],[4,[1],[2,3208,648]],[4,[2],[2,8688,1668]],[4,[3],[2,11508,336]],[4,[4],[2,13796,648]],[4,[5],[2,16076,564]]],[1,-0.0686107203364372,-0.112567640841007,-0.115123592317104],[1,0.0869779959321022,0.398111134767532,1.20353317260742]],-1],0,0,[],[],[]],[[[160,"level_custom_base",{"cameraBox":{"type":"CameraBoxLevel1"},"value":[],"world":{"objects":[{"type":"Light","settings":[{"position":{"x":0,"y":0,"z":0}}]},{"type":"Box","settings":[{"position":{"x":0,"y":0,"z":0},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":-1000,"y":0,"z":0},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":0,"y":0,"z":1000},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":1000,"y":0,"z":0},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":1000,"y":0,"z":-1000},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":0,"y":0,"z":-1000},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":-1000,"y":0,"z":1000},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":0,"y":0,"z":0},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}},{"position":{"x":1000,"y":0,"z":1000},"scale":{"x":1000,"y":0.01,"z":1000},"eulerAngles":{"x":0,"y":0,"z":0}}]},{"type":"Base1","settings":[{"position":{"x":-112.73,"y":0.007,"z":-132.235},"scale":{"x":2500,"y":2500,"z":2500},"eulerAngles":{"x":0,"y":-30,"z":0},"specify":{"index":1}}]},{"type":"Base2","settings":[{"position":{"x":-131.465,"y":0.007,"z":172.838},"scale":{"x":2500,"y":2500,"z":2500},"eulerAngles":{"x":0,"y":30,"z":0},"specify":{"index":0}}]},{"type":"Base3","settings":[{"position":{"x":190.813,"y":0,"z":-196.025},"scale":{"x":1500,"y":1500,"z":1500},"eulerAngles":{"x":0,"y":50,"z":0}}]},{"type":"Wall","settings":[{"position":{"x":0,"y":0,"z":0},"eulerAngles":{"x":0,"y":0,"z":0},"scale":{"x":3000,"y":3000,"z":3000}}]},{"type":"Hero","settings":[{"position":{"x":83.105,"y":8,"z":36.014},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":145,"z":0},"specify":{"useHat":true,"useWeapon":true}},{"position":{"x":52.223,"y":8,"z":65.661},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":145,"z":0},"specify":{"useHat":true,"useWeapon":true}},{"position":{"x":48.589,"y":8,"z":-6.222},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":145,"z":0},"specify":{"useHat":true,"useWeapon":true}}]},{"type":"Enemy","settings":[{"position":{"x":-32.312,"y":-0.08,"z":-477.089},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":0,"z":0},"specify":{"useHat":true}},{"position":{"x":464.651,"y":-0.08,"z":173.633},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":-55,"z":0},"specify":{"useHat":true}},{"position":{"x":12.565,"y":-0.08,"z":366.73},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":180,"z":0},"specify":{"useHat":true}},{"position":{"x":368.307,"y":-0.08,"z":-252.535},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":-55,"z":0},"specify":{"useHat":true}},{"position":{"x":-405.347,"y":-0.08,"z":-39.478},"scale":{"x":20,"y":20,"z":20},"eulerAngles":{"x":0,"y":90,"z":0},"specify":{"useHat":true}}]}]},"effect":[]}]],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4284900966]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4293059298]]]]]],0,0,[0],[1],[0]],[[{"name":"heand_01","rect":[0,68,270,409],"offset":[-6.5,-34],"originalSize":[283,477],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[121]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4293059298]]]]]],0,0,[0],[1],[0]],[[[45,0,[2,3,4,5,6,7,8,9,11,12,14,15,16,17,19,20,21,22,24,25,26,27]]],0,0,[0],[11],[19]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4291578202]]]]]],0,0,[0],[1],[0]],[[[64,"Enemy2",[{"name":"RootNode","path":"","scale":[1,1,1],"children":[1,29],"position":[0,0,0],"quat":[0,0,0,1]},{"name":"Armature","parent":null,"path":"Armature","scale":[1,1,1],"children":[2],"position":[0,0,0],"quat":[8.14603353660459e-8,0,0,1]},{"name":"Root","parent":null,"path":"Armature/Root","scale":[0.999999821186066,1,1],"children":[3],"position":[-0.00891487300395966,0.000395220384234563,-0.184758961200714],"quat":[0.0794185400009155,-0.0563126392662525,-0.00882129184901714,0.995210409164429],"uniqueBindPose":[1,2.764863893389702e-8,4.0745365414984747e-10,0,-2.764863893389702e-8,1,1.8626593600856722e-9,0,-4.074535708831206e-10,-1.8626593600856722e-9,1,0,-7.099856702552643e-7,-0.0000057079491853073705,1.5761538918468432e-7,1]},{"name":"Hips","parent":null,"path":"Armature/Root/Hips","scale":[1,1,1],"children":[4,19,24],"position":[-1.3448297586649e-8,0.92145037651062,-0.00415032543241978],"quat":[-4.86033968627453e-9,9.31322519104327e-10,-8.70786607265472e-8,1],"uniqueBindPose":[1,2.0249470367161848e-7,4.0745365414984747e-10,0,-2.0249470367161848e-7,1,1.8626593600856722e-9,0,-4.0745326557178885e-10,-1.8626593600856722e-9,1,0,-5.369732321014453e-7,-0.9214560389518738,0.004150498658418655,1]},{"name":"Spine","parent":null,"path":"Armature/Root/Hips/Spine","scale":[1.00000035762787,0.999999821186066,0.999999701976776],"children":[5],"position":[-2.35438335494109e-8,0.140690356492996,-1.11758702292519e-9],"quat":[-0.0348962880671024,-0.0104310028254986,0.00290488637983799,0.999332308769226],"uniqueBindPose":[1,3.743331689065599e-8,-1.726034071225513e-7,0,-2.764863005211282e-8,0.9984115362167358,0.05634431540966034,0,1.7443838373765175e-7,-0.056344326585531235,0.9984113574028015,0,-7.0247523353828e-7,-1.0606931447982788,-0.05570198595523834,1]},{"name":"Spine1","parent":null,"path":"Armature/Root/Hips/Spine/Spine1","scale":[1.00000035762787,1.00000011920929,1.00000023841858],"children":[6,11,14],"position":[8.12113309933693e-9,0.257231444120407,0.00396719528362155],"quat":[-0.0227668099105358,-0.0210574027150869,0.00517186475917697,0.999505639076233],"uniqueBindPose":[1,4.0650110832984865e-8,-1.7187365131121624e-7,0,-2.7648818345937798e-8,0.9971851706504822,0.07497868686914444,0,1.7443774424918956e-7,-0.07497869431972504,0.9971850514411926,0,-7.079761985551158e-7,-1.3165805339813232,-0.08426956087350845,1]},{"name":"LeftShoulder","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/LeftShoulder","scale":[0.999998986721039,1.00000047683716,1.00000035762787],"children":[7],"position":[0.0425640009343624,0.190589442849159,0.00268511520698667],"quat":[0.020495155826211,-0.0412903875112534,-0.0774152725934982,0.995932698249817],"uniqueBindPose":[1,6.404236785328976e-8,-1.7148759923202306e-7,0,-5.100416089476312e-8,0.9971852898597717,0.07497869431972504,0,1.7580671851646912e-7,-0.07497871667146683,0.9971851110458374,0,-0.042564697563648224,-1.5071691274642944,-0.08695469051599503,1]},{"name":"LeftArm","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm","scale":[0.99999988079071,1,0.999999940395355],"children":[8],"position":[0.203844010829926,1.69873231925521e-7,-4.76837129781416e-8],"quat":[0.35690701007843,-0.228456974029541,-0.460021585226059,0.780259549617767],"uniqueBindPose":[1,6.404237495871712e-8,-1.7236584426427726e-7,0,-5.093831845215391e-8,0.9971852898597717,0.07497870922088623,0,1.7668249086000287e-7,-0.07497872412204742,0.9971851110458374,0,-0.24640873074531555,-1.5071697235107422,-0.08695466816425323,1]},{"name":"LeftForeArm","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm","scale":[1.00000011920929,1.00000011920929,1.00000011920929],"children":[9],"position":[0.325248062610626,1.43051144263495e-8,5.72204577053981e-8],"quat":[1.12838421273409e-7,-0.265643060207367,-0.0199736040085554,0.963864505290985],"uniqueBindPose":[1,6.404236785328976e-8,-1.7236584426427726e-7,0,-5.093831134672655e-8,0.9971852898597717,0.07497871667146683,0,1.7668249086000287e-7,-0.07497873157262802,0.9971851110458374,0,-0.5716565251350403,-1.5071696043014526,-0.08695470541715622,1]},{"name":"LeftHand","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand","scale":[0.999999940395355,0.999999940395355,1.00000023841858],"children":[10],"position":[0.339323848485947,-2.00271600192536e-7,1.08480449512172e-7],"quat":[-1.86264470514175e-9,-5.58793633587129e-9,-1.49011629702045e-8,1],"uniqueBindPose":[1,6.404237495871712e-8,-1.7236584426427726e-7,0,-5.093831845215391e-8,0.9971852898597717,0.07497872412204742,0,1.7668249086000287e-7,-0.07497873902320862,0.9971851110458374,0,-0.9109808206558228,-1.507169485092163,-0.08695481717586517,1]},{"name":"LeftHand_end","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand/LeftHand_end","scale":[1,1,1],"position":[1.42108543975646e-16,0.339324295520782,-2.66453519954337e-17],"quat":[-2.77555756156289e-17,6.93889390390723e-18,-1.38777878078145e-17,1]},{"name":"Neck","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/Neck","scale":[0.999999344348907,1.00000047683716,1.00000035762787],"children":[12],"position":[-1.12652777772837e-7,0.242687031626701,0.00137423165142536],"quat":[0.10747492313385,0.0169636867940426,-0.0137817757204175,0.993967533111572],"uniqueBindPose":[1,8.397069706234106e-9,-1.302311005701995e-7,0,-3.1237917141879734e-8,0.9843189120292664,-0.17639808356761932,0,1.2670771809553116e-7,0.17639809846878052,0.9843186736106873,0,-5.909766400691296e-7,-1.531258225440979,0.3064245879650116,1]},{"name":"Head","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/Neck/Head","scale":[1.00000095367432,0.99999988079071,0.999999761581421],"children":[13],"position":[2.68220889942938e-9,0.103930033743382,-5.90085953433572e-8],"quat":[-0.0892420411109924,2.68828048710645e-9,1.19803589271328e-9,0.996009945869446],"uniqueBindPose":[1,3.141448345900244e-8,-1.2666393445215363e-7,0,-3.123759739764864e-8,0.9999988079071045,0.0013962981756776571,0,1.2670770388467645e-7,-0.0013962981756776571,0.9999988079071045,0,-5.90976924286224e-7,-1.663616418838501,0.010853215120732784,1]},{"name":"Head_end","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/Neck/Head/Head_end","scale":[1,1,1],"position":[-1.77635679969558e-17,0.103930309414864,0],"quat":[6.93889390390723e-18,-1.38777878078145e-17,-3.46944695195361e-18,1]},{"name":"RightShoulder","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/RightShoulder","scale":[0.999999105930328,1.00000035762787,1.00000035762787],"children":[15],"position":[-0.042564008384943,0.190594151616096,0.00268549146130681],"quat":[0.996586203575134,0.0803246349096298,-0.010011718608439,-0.0162372253835201],"uniqueBindPose":[1,-4.0650196098113156e-8,5.61288004519156e-7,0,1.5489912685850982e-9,-0.9971852898597717,-0.07497890293598175,0,5.627559858112363e-7,0.07497891783714294,-0.9971851110458374,0,0.04256327077746391,1.5071741342544556,0.08695542812347412,1]},{"name":"RightArm","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm","scale":[0.999999940395355,1,0.99999988079071],"children":[16],"position":[-0.203843966126442,0.00000820256718725432,5.57899454634025e-7],"quat":[0.295427650213242,-0.236085131764412,-0.482412964105606,0.790103852748871],"uniqueBindPose":[1,-4.065013214926694e-8,-1.7734851098794024e-7,0,-5.383308732120895e-8,-0.9971851706504822,-0.07497881352901459,0,-1.7380141059675225e-7,0.07497883588075638,-0.9971850514411926,0,0.24640734493732452,1.5071663856506348,0.08695455640554428,1]},{"name":"RightForeArm","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm","scale":[1.00000023841858,1,1.00000023841858],"children":[17],"position":[-0.325247973203659,-0.00000519871719006915,-3.57627868652344e-7],"quat":[3.41331514164267e-7,-0.217013791203499,-0.0163037031888962,0.976032376289368],"uniqueBindPose":[1,-4.065013214926694e-8,-1.7732514834278845e-7,0,-5.383133938607898e-8,-0.9971851706504822,-0.07497881352901459,0,-1.7377811900587403e-7,0.07497883588075638,-0.9971850514411926,0,0.5716552734375,1.507171630859375,0.08695489913225174,1]},{"name":"RightHand","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand","scale":[0.999999821186066,1,1.00000023841858],"children":[18],"position":[-0.339323937892914,0.00000372409817828157,9.05990589217254e-7],"quat":[-1.02445465444134e-8,4.67941710584303e-16,-2.32830554836028e-9,1],"uniqueBindPose":[1,-4.065013214926694e-8,-1.7732511992107902e-7,0,-5.383133938607898e-8,-0.9971851706504822,-0.07497881352901459,0,-1.737780905841646e-7,0.07497883588075638,-0.9971850514411926,0,0.9109795689582825,1.5071675777435303,0.08695399016141891,1]},{"name":"RightHand_end","parent":null,"path":"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand/RightHand_end","scale":[1,1,1],"position":[-1.42108543975646e-16,0.33932438492775,2.66453519954337e-17],"quat":[0,1.38777878078145e-17,0,1]},{"name":"LeftUpLeg","parent":null,"path":"Armature/Root/Hips/LeftUpLeg","scale":[1.00000035762787,1.00000011920929,1.00000023841858],"children":[20],"position":[0.119939766824245,4.95463581273725e-8,0],"quat":[0.679581105709076,-0.445746630430222,0.452959835529327,-0.366478979587555],"uniqueBindPose":[-2.4612205606899806e-7,-9.529628641757881e-8,0.9999998211860657,0,-0.9995227456092834,0.030887460336089134,-2.4306112322847184e-7,0,-0.030887462198734283,-0.9995227456092834,-1.0285290130696012e-7,0,0.92088782787323,-0.032609958201646805,-0.11994021385908127,1]},{"name":"LeftLeg","parent":null,"path":"Armature/Root/Hips/LeftUpLeg/LeftLeg","scale":[1.00000011920929,1,1.00000011920929],"children":[21],"position":[0.401315838098526,9.53674295089968e-9,3.51667388542865e-8],"quat":[-0.0517904572188854,-0.0279082041233778,0.146289557218552,0.987490892410278],"uniqueBindPose":[-2.3320139064253453e-7,-1.7584484623967e-7,0.9999998211860657,0,-0.9961794018745422,0.0873294249176979,-2.1695399254895165e-7,0,-0.0873294323682785,-0.9961792826652527,-1.955384050233988e-7,0,0.5168985724449158,-0.06192316859960556,-0.11994026601314545,1]},{"name":"LeftFoot","parent":null,"path":"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot","scale":[0.999999284744263,0.999999225139618,1.00000023841858],"children":[22],"position":[0.374624371528625,7.74860353658369e-8,-5.42402247560858e-8],"quat":[-0.0535109378397465,0.0758771300315857,-0.532978117465973,0.841019332408905],"uniqueBindPose":[-2.032053600942163e-7,-5.418654609457008e-7,0.9999997615814209,0,-0.5094920992851257,-0.8604751229286194,-5.697933715964609e-7,0,0.8604750037193298,-0.5094921588897705,-1.0122303706339153e-7,0,0.11735457926988602,0.10151039808988571,-0.11994015425443649,1]},{"name":"LeftToeBase","parent":null,"path":"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase","scale":[1.00000047683716,1.00000023841858,1.00000011920929],"children":[23],"position":[0.179125547409058,-1.43051144263495e-8,2.95042976716786e-8],"quat":[-5.41629461281445e-8,-3.34009797597901e-7,-0.237007737159729,0.971507787704468],"uniqueBindPose":[6.451298872889311e-7,-0.00000215248360291298,1,0,-0.0559956431388855,-0.9984309077262878,-0.000002112982201651903,0,0.9984309077262878,-0.0559956431388855,-7.646474387001945e-7,0,-0.10157784819602966,0.061660345643758774,-0.11994002014398575,1]},{"name":"LeftToeBase_end","parent":null,"path":"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase/LeftToeBase_end","scale":[1,1,1],"position":[0,0.179125517606735,-3.55271359939116e-17],"quat":[1.73472347597681e-18,-2.77555756156289e-17,4.81482486096809e-35,1]},{"name":"RightUpLeg","parent":null,"path":"Armature/Root/Hips/RightUpLeg","scale":[1.00000023841858,0.99999988079071,0.999999940395355],"children":[25],"position":[-0.119940020143986,3.05697312796838e-7,-2.50339500240671e-8],"quat":[0.379574239253998,0.502092063426971,0.46465128660202,0.62283718585968],"uniqueBindPose":[3.024179591193388e-7,3.9514155503184156e-8,1,0,0.999522864818573,-0.030887460336089134,-3.010531486324908e-7,0,0.030887460336089134,0.999522864818573,-4.8836227506399155e-8,0,-0.9208881855010986,0.032610006630420685,0.11993957310914993,1]},{"name":"RightLeg","parent":null,"path":"Armature/Root/Hips/RightUpLeg/RightLeg","scale":[1.00000023841858,1.00000011920929,1],"children":[26],"position":[-0.401315629482269,1.66893006081636e-8,-5.9604643443123e-10],"quat":[-0.0794040858745575,-0.0441558994352818,0.114060707390308,0.989310562610626],"uniqueBindPose":[6.542646246998629e-8,9.557987112884803e-8,1,0,0.9961794018745422,-0.08732955902814865,-5.6829556172033335e-8,0,0.08732954412698746,0.996179461479187,-1.009283607800171e-7,0,-0.5168986916542053,0.0619233064353466,0.11993943154811859,1]},{"name":"RightFoot","parent":null,"path":"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot","scale":[0.999999225139618,0.999999344348907,0.999999701976776],"children":[27],"position":[-0.374624520540237,-3.81469718035987e-8,2.98023223876953e-7],"quat":[0.0638326928019524,-0.0348216779530048,-0.523522675037384,0.848903357982635],"uniqueBindPose":[-1.8641915744410653e-7,0.3090169131755829,0.9510564208030701,0,0.5094927549362183,0.8183600306510925,-0.26590123772621155,0,-0.8604748249053955,0.48455625772476196,-0.15744206309318542,0,-0.1173548474907875,-0.05947907269001007,0.14543740451335907,1]},{"name":"RightToeBase","parent":null,"path":"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase","scale":[1.00000083446503,1,1.00000035762787],"children":[28],"position":[-0.17912620306015,-6.44475193212202e-8,-3.70740877997378e-7],"quat":[0.15120767056942,-0.107090771198273,-0.211433887481689,0.959668457508087],"uniqueBindPose":[-0.0007387746591120958,0.586340606212616,0.8100643157958984,0,0.055996015667915344,0.8088176250457764,-0.5853872895240784,0,-0.9984309077262878,0.044927895069122314,-0.03343027085065842,0,0.10148964822292328,0.020420830696821213,0.13337337970733643,1]},{"name":"RightToeBase_end","parent":null,"path":"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase/RightToeBase_end","scale":[1,1,1],"position":[3.55271359939116e-17,0.179126128554344,-3.55271359939116e-17],"quat":[6.93889390390723e-17,-2.77555756156289e-17,2.77555756156289e-17,1]},{"name":"Character_1","mesh":0,"skin":0,"parent":null,"path":"Character_1","scale":[1,1,1],"position":[4.77768491435882e-9,-2.38418551568031e-9,-1.63912783346376e-9],"quat":[8.28573263333965e-8,4.8021203680193e-10,-6.04104997356626e-25,1]}]]],0,0,[],[],[]],[[[161,"builtin-phong",[{"hash":3560892936,"record":null,"name":"builtin-phong|phong-vs|phong-fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n#if CC_USE_SKINNING\n  in vec4 a_weights;\n  in vec4 a_joints;\n  #if CC_USE_JOINTS_TEXTRUE\n    uniform SKINNING {\n      vec2 jointsTextureSize;\n    };\n    uniform sampler2D jointsTexture;\n    #if CC_JOINTS_TEXTURE_FLOAT32\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 4.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = texture(jointsTexture, vec2(dx * (x + 0.5), y));\n        vec4 v2 = texture(jointsTexture, vec2(dx * (x + 1.5), y));\n        vec4 v3 = texture(jointsTexture, vec2(dx * (x + 2.5), y));\n        vec4 v4 = texture(jointsTexture, vec2(dx * (x + 3.5), y));\n        return mat4(v1, v2, v3, v4);\n      }\n    #else\n      float decode32(vec4 rgba) {\n        float Sign = 1.0 - step(128.0, rgba[0]) * 2.0;\n        float Exponent = 2.0 * mod(rgba[0], 128.0) + step(128.0, rgba[1]) - 127.0;\n        float Mantissa = mod(rgba[1], 128.0) * 65536.0 + rgba[2] * 256.0 + rgba[3] + 8388608.0;\n        return Sign * exp2(Exponent - 23.0) * Mantissa;\n      }\n      vec4 decodevec4 (vec4 x, vec4 y, vec4 z, vec4 w) {\n        return vec4(\n          decode32(x.wzyx * 255.0),\n          decode32(y.wzyx * 255.0),\n          decode32(z.wzyx * 255.0),\n          decode32(w.wzyx * 255.0)\n        );\n      }\n      vec4 decodevec4 (float dx, float x, float y) {\n        return decodevec4(\n          texture(jointsTexture, vec2(dx * (x + 0.5), y)),\n          texture(jointsTexture, vec2(dx * (x + 1.5), y)),\n          texture(jointsTexture, vec2(dx * (x + 2.5), y)),\n          texture(jointsTexture, vec2(dx * (x + 3.5), y))\n        );\n      }\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 16.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = decodevec4(dx, x,       y);\n        vec4 v2 = decodevec4(dx, x+4.0,   y);\n        vec4 v3 = decodevec4(dx, x+8.0,   y);\n        vec4 v4 = decodevec4(dx, x+12.0,  y);\n        return mat4(v1, v2, v3, v4);\n      }\n    #endif\n  #else\n    uniform JOINT_MATRIX {\n      mat4 jointMatrices[50];\n    };\n    mat4 getBoneMatrix(const in float i) {\n      return jointMatrices[int(i)];\n    }\n  #endif\n    mat4 skinMatrix() {\n      return\n        getBoneMatrix(a_joints.x) * a_weights.x +\n        getBoneMatrix(a_joints.y) * a_weights.y +\n        getBoneMatrix(a_joints.z) * a_weights.z +\n        getBoneMatrix(a_joints.w) * a_weights.w\n        ;\n    }\n#endif\nstruct StandardVertInput {\n  vec2 uv;\n  vec4 position;\n  vec3 normal;\n  vec4 tangent;\n  vec4 color;\n};\nin vec3 a_position;\n#if CC_USE_ATTRIBUTE_UV0\nin vec2 a_uv0;\n#endif\n#if CC_USE_ATTRIBUTE_COLOR\nin vec4 a_color;\n#endif\n#if CC_USE_ATTRIBUTE_NORMAL\nin vec3 a_normal;\n#endif\n#if CC_USE_ATTRIBUTE_TANGENT\nin vec4 a_tangent;\n#endif\nvoid CCAttribute (out StandardVertInput In) {\n  In.position = vec4(a_position, 1.0);\n  #if CC_USE_ATTRIBUTE_UV0\n    In.uv = a_uv0;\n  #else\n    In.uv = vec2(0.0);\n  #endif\n  #if CC_USE_ATTRIBUTE_COLOR\n    In.color = a_color;\n  #else\n    In.color = vec4(1.0);\n  #endif\n  #if CC_USE_ATTRIBUTE_NORMAL\n    In.normal = a_normal;\n  #else\n    In.normal = vec3(0.0, 1.0, 0.0);\n  #endif\n  #if CC_USE_ATTRIBUTE_TANGENT\n    In.tangent = a_tangent;\n  #else\n    In.tangent = vec4(1.0, 0.0, 0.0, 0.0);\n  #endif\n}\nvoid CCVertInput(out StandardVertInput In) {\n  CCAttribute(In);\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    In.position = m * In.position;\n    #if CC_USE_ATTRIBUTE_NORMAL\n      In.normal = (m * vec4(In.normal, 0)).xyz;\n    #endif\n    #if CC_USE_ATTRIBUTE_TANGENT\n      In.tangent = m * In.tangent;\n    #endif\n  #endif\n}\n#if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n  uniform CC_SHADOW {\n    mat4 cc_shadow_lightViewProjMatrix[2];\n    vec4 cc_shadow_info[2];\n  };\n  #if CC_NUM_SHADOW_LIGHTS > 0\n    uniform sampler2D cc_shadow_map_0;\n  #endif\n  #if CC_NUM_SHADOW_LIGHTS > 1\n    uniform sampler2D cc_shadow_map_1;\n  #endif\n  varying vec4 v_posLightSpace[2];\n  varying float v_depth[2];\n#endif\nvoid CCShadowInput (vec3 worldPos) {\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n  for (int i = 0; i < CC_NUM_SHADOW_LIGHTS; i++) {\n    v_posLightSpace[i] = cc_shadow_lightViewProjMatrix[i] * vec4(worldPos, 1.0);\n    v_depth[i] = (v_posLightSpace[i].z + cc_shadow_info[i].x) / (cc_shadow_info[i].x + cc_shadow_info[i].y);\n  }\n  #endif\n}\nuniform MAIN_TILING {\n  vec2 mainTiling;\n  vec2 mainOffset;\n};\n#if CC_USE_ATTRIBUTE_UV0 && (USE_DIFFUSE_TEXTURE || USE_EMISSIVE_TEXTURE || USE_SPECULAR_TEXTURE || USE_NORMAL_TEXTURE)\n  out mediump vec2 v_uv0;\n#endif\n#if CC_USE_ATTRIBUTE_COLOR\n  out lowp vec4 v_color;\n#endif\n#if USE_NORMAL_TEXTURE\n  out vec3 v_tangent;\n  out vec3 v_bitangent;\n#endif\nout vec3 v_worldNormal;\nout vec3 v_worldPos;\nout vec3 v_viewDirection;\nvoid main () {\n  StandardVertInput In;\n  CCVertInput(In);\n  vec4 position = In.position;\n  v_worldNormal = normalize((cc_matWorldIT * vec4(In.normal, 0)).xyz);\n  v_worldPos = (cc_matWorld * position).xyz;\n  v_viewDirection = normalize(cc_cameraPos.xyz - v_worldPos);\n  #if CC_USE_ATTRIBUTE_UV0 && (USE_DIFFUSE_TEXTURE || USE_EMISSIVE_TEXTURE || USE_SPECULAR_TEXTURE || USE_NORMAL_TEXTURE)\n    v_uv0 = In.uv * mainTiling + mainOffset;\n  #endif\n  #if CC_USE_ATTRIBUTE_COLOR\n    v_color = In.color;\n  #endif\n  #if USE_NORMAL_TEXTURE\n    v_tangent = normalize((cc_matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_worldNormal, v_tangent) * In.tangent.w;\n  #endif\n  CCShadowInput(v_worldPos);\n  gl_Position = cc_matViewProj * cc_matWorld * position;\n}","frag":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform PhongFrag {\n  lowp vec4 diffuseColor;\n  lowp vec4 specularColor;\n  lowp vec4 emissiveColor;\n  float glossiness;\n};\n#if USE_DIFFUSE_TEXTURE\n  uniform sampler2D diffuseTexture;\n#endif\n#if USE_SPECULAR && USE_SPECULAR_TEXTURE\n  uniform sampler2D specularTexture;\n#endif\n#if USE_EMISSIVE && USE_EMISSIVE_TEXTURE\n  uniform sampler2D emissiveTexture;\n#endif\n#if USE_NORMAL_TEXTURE\n  in vec3 v_tangent;\n  in vec3 v_bitangent;\n  uniform sampler2D normalTexture;\n#endif\nin vec3 v_worldNormal;\nin vec3 v_worldPos;\nin vec3 v_viewDirection;\n#if CC_USE_ATTRIBUTE_UV0 && (USE_DIFFUSE_TEXTURE || (USE_EMISSIVE && USE_EMISSIVE_TEXTURE) || (USE_SPECULAR && USE_SPECULAR_TEXTURE) || USE_NORMAL_TEXTURE)\n  in mediump vec2 v_uv0;\n#endif\n#if CC_USE_ATTRIBUTE_COLOR\n  in lowp vec4 v_color;\n#endif\n#if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n  uniform CC_SHADOW {\n    mat4 cc_shadow_lightViewProjMatrix[2];\n    vec4 cc_shadow_info[2];\n  };\n  #if CC_NUM_SHADOW_LIGHTS > 0\n    uniform sampler2D cc_shadow_map_0;\n  #endif\n  #if CC_NUM_SHADOW_LIGHTS > 1\n    uniform sampler2D cc_shadow_map_1;\n  #endif\n  varying vec4 v_posLightSpace[2];\n  varying float v_depth[2];\n#endif\nfloat unpackRGBAToDepth(vec4 color) {\n  return dot(color, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n}\nfloat getDepth(sampler2D shadowMap, vec2 shadowUV) {\n    return unpackRGBAToDepth(texture(shadowMap, shadowUV));\n}\nfloat computeFallOff(float shadow, vec2 coords, float frustumEdgeFalloff) {\n  return shadow;\n}\nfloat shadowSimple(sampler2D shadowMap, vec2 shadowUV, float currentDepth, float darkness) {\n  float closestDepth = getDepth(shadowMap, shadowUV);\n  return currentDepth > closestDepth  ? 1.0 - darkness : 1.0;\n}\nfloat shadowPCF3X3(sampler2D shadowMap, vec2 shadowUV, float currentDepth, float darkness, float shadowSize) {\n  float shadow = 0.0;\n  for (int x = -1; x <= 1; ++x) {\n    for (int y = -1; y <= 1; ++y) {\n      float closestDepth = getDepth(shadowMap, shadowUV + vec2(x, y) * 1.0/shadowSize);\n      shadow += currentDepth > closestDepth  ? 1.0 - darkness : 1.0;\n    }\n  }\n  shadow /= 9.0;\n  return shadow;\n}\nfloat shadowPCF5X5(sampler2D shadowMap, vec2 shadowUV, float currentDepth, float darkness, float shadowSize) {\n  float shadow = 0.0;\n  for (int x = -2; x <= 2; ++x) {\n    for (int y = -2; y <= 2; ++y) {\n      float closestDepth = getDepth(shadowMap, shadowUV + vec2(x, y) * 1.0/shadowSize);\n      shadow += currentDepth > closestDepth  ? 1.0 - darkness : 1.0;\n    }\n  }\n  shadow /= 25.0;\n  return shadow;\n}\n#if CC_NUM_LIGHTS > 0\nuniform CCLIGHTS {\n  vec4 cc_lightPositionAndRange[4];\n  vec4 cc_lightDirection[4];\n  vec4 cc_lightColor[4];\n};\n#endif\nstruct LightInfo {\n  vec3 lightDir;\n  vec3 radiance;\n  vec4 lightColor;\n};\nLightInfo computeDirectionalLighting(\n  vec4 lightDirection,\n  vec4 lightColor\n) {\n  LightInfo ret;\n  ret.lightDir = -normalize(lightDirection.xyz);\n  ret.radiance = lightColor.rgb;\n  ret.lightColor = lightColor;\n  return ret;\n}\nLightInfo computePointLighting(\n  vec3 worldPosition,\n  vec4 lightPositionAndRange,\n  vec4 lightColor\n) {\n  LightInfo ret;\n  vec3 lightDir = lightPositionAndRange.xyz - worldPosition;\n  float attenuation = max(0., 1.0 - length(lightDir) / lightPositionAndRange.w);\n  ret.lightDir = normalize(lightDir);\n  ret.radiance = lightColor.rgb * attenuation;\n  ret.lightColor = lightColor;\n  return ret;\n}\nLightInfo computeSpotLighting(\n  vec3 worldPosition,\n  vec4 lightPositionAndRange,\n  vec4 lightDirection,\n  vec4 lightColor\n) {\n  LightInfo ret;\n  vec3 lightDir = lightPositionAndRange.xyz - worldPosition;\n  float attenuation = max(0., 1.0 - length(lightDir) / lightPositionAndRange.w);\n  lightDir = normalize(lightDir);\n  float cosConeAngle = max(0., dot(lightDirection.xyz, -lightDir));\n  cosConeAngle = cosConeAngle < lightDirection.w ? 0. : cosConeAngle;\n  cosConeAngle = pow(cosConeAngle, lightColor.w);\n  ret.lightDir = lightDir;\n  ret.radiance = lightColor.rgb * attenuation * cosConeAngle;\n  ret.lightColor = lightColor;\n  return ret;\n}\nstruct Lighting {\n  vec3 diffuse;\n  vec3 specular;\n};\nstruct PhongSurface {\n  vec3 diffuse;\n  vec3 emissive;\n  vec3 specular;\n  float opacity;\n  float glossiness;\n  vec3 position;\n  vec3 normal;\n  vec3 viewDirection;\n};\nLighting brdf (PhongSurface s, LightInfo info) {\n  Lighting result;\n  float ndh = 0.0;\n  vec3 halfDir = normalize(s.viewDirection + info.lightDir);\n  float NdotH = max(0.0, dot(s.normal, halfDir));\n  NdotH = pow(NdotH, max(1.0, s.glossiness * 128.0));\n  result.diffuse = info.radiance * max(0.0, dot(s.normal, info.lightDir));\n  result.specular = info.radiance * NdotH;\n  return result;\n}\nvec4 composePhongShading (Lighting lighting, PhongSurface s) {\n  vec4 o = vec4(0.0, 0.0, 0.0, 1.0);\n  o.rgb = lighting.diffuse * s.diffuse;\n  #if USE_EMISSIVE\n    o.rgb += s.emissive;\n  #endif\n  #if USE_SPECULAR\n    o.rgb += lighting.specular * s.specular;\n  #endif\n  o.a = s.opacity;\n  return o;\n}\nvec3 ambient(PhongSurface s, vec4 ambientColor) {\n  return s.diffuse * ambientColor.rgb;\n}\nvec4 CCPhongShading (in PhongSurface s) {\n  Lighting result;\n  result.diffuse = vec3(0, 0, 0);\n  result.specular = vec3(0, 0, 0);\n  #if CC_NUM_LIGHTS > 0\n    #if CC_LIGHT_0_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[0]);\n    #else\n      LightInfo info0;\n      #if CC_LIGHT_0_TYPE == 0\n        info0 = computeDirectionalLighting(cc_lightDirection[0], cc_lightColor[0]);\n      #elif CC_LIGHT_0_TYPE == 1\n        info0 = computePointLighting(s.position, cc_lightPositionAndRange[0], cc_lightColor[0]);\n      #elif CC_LIGHT_0_TYPE == 2\n        info0 = computeSpotLighting(s.position, cc_lightPositionAndRange[0], cc_lightDirection[0], cc_lightColor[0]);\n      #endif\n      Lighting result0 = brdf(s, info0);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n    float shadow_0 = 1.0;\n    vec2 projCoords0 = v_posLightSpace[0].xy / v_posLightSpace[0].w;\n    vec2 shadowUV0 = projCoords0 * 0.5 + vec2(0.5);\n    if (shadowUV0.x >= 0.0 && shadowUV0.x <= 1.0 && shadowUV0.y >= 0.0 && shadowUV0.y <= 1.0) {\n      float currentDepth0 = clamp(v_depth[0], 0.0, 1.0);\n      #if CC_SHADOW_0_TYPE == 3\n        shadow_0 = shadowPCF3X3(cc_shadow_map_0, shadowUV0, currentDepth0, cc_shadow_info[0].w, cc_shadow_info[0].z);\n      #elif CC_SHADOW_0_TYPE == 4\n        shadow_0 = shadowPCF5X5(cc_shadow_map_0, shadowUV0, currentDepth0, cc_shadow_info[0].w, cc_shadow_info[0].z);\n      #else\n        shadow_0 = shadowSimple(cc_shadow_map_0, shadowUV0, currentDepth0, cc_shadow_info[0].w);\n      #endif\n      shadow_0 = computeFallOff(shadow_0, projCoords0, 0.0);\n    }\n    result0.diffuse *= shadow_0;\n    result0.specular *= shadow_0;\n  #endif\n      result.diffuse += result0.diffuse;\n      result.specular += result0.specular;\n    #endif\n  #endif\n  #if CC_NUM_LIGHTS > 1\n    #if CC_LIGHT_1_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[1]);\n    #else\n      LightInfo info1;\n      #if CC_LIGHT_1_TYPE == 0\n        info1 = computeDirectionalLighting(cc_lightDirection[1], cc_lightColor[1]);\n      #elif CC_LIGHT_1_TYPE == 1\n        info1 = computePointLighting(s.position, cc_lightPositionAndRange[1], cc_lightColor[1]);\n      #elif CC_LIGHT_1_TYPE == 2\n        info1 = computeSpotLighting(s.position, cc_lightPositionAndRange[1], cc_lightDirection[1], cc_lightColor[1]);\n      #endif\n      Lighting result1 = brdf(s, info1);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 1\n    float shadow_1 = 1.0;\n    vec2 projCoords1 = v_posLightSpace[1].xy / v_posLightSpace[1].w;\n    vec2 shadowUV1 = projCoords1 * 0.5 + vec2(0.5);\n    if (shadowUV1.x >= 0.0 && shadowUV1.x <= 1.0 && shadowUV1.y >= 0.0 && shadowUV1.y <= 1.0) {\n      float currentDepth1 = clamp(v_depth[1], 0.0, 1.0);\n      #if CC_SHADOW_1_TYPE == 3\n        shadow_1 = shadowPCF3X3(cc_shadow_map_1, shadowUV1, currentDepth1, cc_shadow_info[1].w, cc_shadow_info[1].z);\n      #elif CC_SHADOW_1_TYPE == 4\n        shadow_1 = shadowPCF5X5(cc_shadow_map_1, shadowUV1, currentDepth1, cc_shadow_info[1].w, cc_shadow_info[1].z);\n      #else\n        shadow_1 = shadowSimple(cc_shadow_map_1, shadowUV1, currentDepth1, cc_shadow_info[1].w);\n      #endif\n      shadow_1 = computeFallOff(shadow_1, projCoords1, 0.0);\n    }\n    result1.diffuse *= shadow_1;\n    result1.specular *= shadow_1;\n  #endif\n      result.diffuse += result1.diffuse;\n      result.specular += result1.specular;\n    #endif\n  #endif\n  #if CC_NUM_LIGHTS > 2\n    #if CC_LIGHT_2_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[2]);\n    #else\n      LightInfo info2;\n      #if CC_LIGHT_2_TYPE == 0\n        info2 = computeDirectionalLighting(cc_lightDirection[2], cc_lightColor[2]);\n      #elif CC_LIGHT_2_TYPE == 1\n        info2 = computePointLighting(s.position, cc_lightPositionAndRange[2], cc_lightColor[2]);\n      #elif CC_LIGHT_2_TYPE == 2\n        info2 = computeSpotLighting(s.position, cc_lightPositionAndRange[2], cc_lightDirection[2], cc_lightColor[2]);\n      #endif\n      Lighting result2 = brdf(s, info2);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 2\n    float shadow_2 = 1.0;\n    vec2 projCoords2 = v_posLightSpace[2].xy / v_posLightSpace[2].w;\n    vec2 shadowUV2 = projCoords2 * 0.5 + vec2(0.5);\n    if (shadowUV2.x >= 0.0 && shadowUV2.x <= 1.0 && shadowUV2.y >= 0.0 && shadowUV2.y <= 1.0) {\n      float currentDepth2 = clamp(v_depth[2], 0.0, 1.0);\n      #if CC_SHADOW_2_TYPE == 3\n        shadow_2 = shadowPCF3X3(cc_shadow_map_2, shadowUV2, currentDepth2, cc_shadow_info[2].w, cc_shadow_info[2].z);\n      #elif CC_SHADOW_2_TYPE == 4\n        shadow_2 = shadowPCF5X5(cc_shadow_map_2, shadowUV2, currentDepth2, cc_shadow_info[2].w, cc_shadow_info[2].z);\n      #else\n        shadow_2 = shadowSimple(cc_shadow_map_2, shadowUV2, currentDepth2, cc_shadow_info[2].w);\n      #endif\n      shadow_2 = computeFallOff(shadow_2, projCoords2, 0.0);\n    }\n    result2.diffuse *= shadow_2;\n    result2.specular *= shadow_2;\n  #endif\n      result.diffuse += result2.diffuse;\n      result.specular += result2.specular;\n    #endif\n  #endif\n  #if CC_NUM_LIGHTS > 3\n    #if CC_LIGHT_3_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[3]);\n    #else\n      LightInfo info3;\n      #if CC_LIGHT_3_TYPE == 0\n        info3 = computeDirectionalLighting(cc_lightDirection[3], cc_lightColor[3]);\n      #elif CC_LIGHT_3_TYPE == 1\n        info3 = computePointLighting(s.position, cc_lightPositionAndRange[3], cc_lightColor[3]);\n      #elif CC_LIGHT_3_TYPE == 2\n        info3 = computeSpotLighting(s.position, cc_lightPositionAndRange[3], cc_lightDirection[3], cc_lightColor[3]);\n      #endif\n      Lighting result3 = brdf(s, info3);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 3\n    float shadow_3 = 1.0;\n    vec2 projCoords3 = v_posLightSpace[3].xy / v_posLightSpace[3].w;\n    vec2 shadowUV3 = projCoords3 * 0.5 + vec2(0.5);\n    if (shadowUV3.x >= 0.0 && shadowUV3.x <= 1.0 && shadowUV3.y >= 0.0 && shadowUV3.y <= 1.0) {\n      float currentDepth3 = clamp(v_depth[3], 0.0, 1.0);\n      #if CC_SHADOW_3_TYPE == 3\n        shadow_3 = shadowPCF3X3(cc_shadow_map_3, shadowUV3, currentDepth3, cc_shadow_info[3].w, cc_shadow_info[3].z);\n      #elif CC_SHADOW_3_TYPE == 4\n        shadow_3 = shadowPCF5X5(cc_shadow_map_3, shadowUV3, currentDepth3, cc_shadow_info[3].w, cc_shadow_info[3].z);\n      #else\n        shadow_3 = shadowSimple(cc_shadow_map_3, shadowUV3, currentDepth3, cc_shadow_info[3].w);\n      #endif\n      shadow_3 = computeFallOff(shadow_3, projCoords3, 0.0);\n    }\n    result3.diffuse *= shadow_3;\n    result3.specular *= shadow_3;\n  #endif\n      result.diffuse += result3.diffuse;\n      result.specular += result3.specular;\n    #endif\n  #endif\n  return composePhongShading(result, s);\n}\nvoid surf (out PhongSurface s) {\n  vec4 diffuse = vec4(1, 1, 1, 1);\n  #if CC_USE_ATTRIBUTE_COLOR\n    diffuse *= v_color;\n  #endif\n  diffuse *= diffuseColor;\n  #if USE_DIFFUSE_TEXTURE\n  vec4 diffuseTexture_tmp = texture(diffuseTexture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_diffuseTexture\n      diffuseTexture_tmp.a *= texture(diffuseTexture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    diffuse.rgb *= (diffuseTexture_tmp.rgb * diffuseTexture_tmp.rgb);\n    diffuse.a *= diffuseTexture_tmp.a;\n  #else\n    diffuse *= diffuseTexture_tmp;\n  #endif\n  #endif\n  ALPHA_TEST(diffuse);\n  s.diffuse = diffuse.rgb;\n  s.opacity = diffuse.a;\n  #if USE_EMISSIVE\n    s.emissive = emissiveColor.rgb;\n    #if USE_EMISSIVE_TEXTURE\n  vec4 emissiveTexture_tmp = texture(emissiveTexture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_emissiveTexture\n      emissiveTexture_tmp.a *= texture(emissiveTexture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    s.emissive.rgb *= (emissiveTexture_tmp.rgb * emissiveTexture_tmp.rgb);\n  #else\n    s.emissive.rgb *= emissiveTexture_tmp.rgb;\n  #endif\n    #endif\n  #endif\n  #if USE_SPECULAR\n    s.specular = specularColor.rgb;\n    #if USE_SPECULAR_TEXTURE\n  vec4 specularTexture_tmp = texture(specularTexture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_specularTexture\n      specularTexture_tmp.a *= texture(specularTexture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    s.specular.rgb *= (specularTexture_tmp.rgb * specularTexture_tmp.rgb);\n  #else\n    s.specular.rgb *= specularTexture_tmp.rgb;\n  #endif\n    #endif\n  #endif\n  s.normal = v_worldNormal;\n  #if USE_NORMAL_TEXTURE\n    vec3 nmmp = texture(normalTexture, v_uv0).xyz - vec3(0.5);\n    s.normal =\n      nmmp.x * normalize(v_tangent) +\n      nmmp.y * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n    s.normal = normalize(s.normal);\n  #endif\n  s.position = v_worldPos;\n  s.viewDirection = v_viewDirection;\n  s.glossiness = glossiness;\n}\nvoid main () {\n  PhongSurface s;\n  surf(s);\n  vec4 color = CCPhongShading(s);\n  gl_FragColor = CCFragOutput(color);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matWorld;\nuniform mat4 cc_matWorldIT;\nuniform mat4 cc_matViewProj;\nuniform vec4 cc_cameraPos;\n#if CC_USE_SKINNING\n  attribute vec4 a_weights;\n  attribute vec4 a_joints;\n  #if CC_USE_JOINTS_TEXTRUE\n    uniform vec2 jointsTextureSize;\n    uniform sampler2D jointsTexture;\n    #if CC_JOINTS_TEXTURE_FLOAT32\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 4.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = texture2D(jointsTexture, vec2(dx * (x + 0.5), y));\n        vec4 v2 = texture2D(jointsTexture, vec2(dx * (x + 1.5), y));\n        vec4 v3 = texture2D(jointsTexture, vec2(dx * (x + 2.5), y));\n        vec4 v4 = texture2D(jointsTexture, vec2(dx * (x + 3.5), y));\n        return mat4(v1, v2, v3, v4);\n      }\n    #else\n      float decode32(vec4 rgba) {\n        float Sign = 1.0 - step(128.0, rgba[0]) * 2.0;\n        float Exponent = 2.0 * mod(rgba[0], 128.0) + step(128.0, rgba[1]) - 127.0;\n        float Mantissa = mod(rgba[1], 128.0) * 65536.0 + rgba[2] * 256.0 + rgba[3] + 8388608.0;\n        return Sign * exp2(Exponent - 23.0) * Mantissa;\n      }\n      vec4 decodevec4 (vec4 x, vec4 y, vec4 z, vec4 w) {\n        return vec4(\n          decode32(x.wzyx * 255.0),\n          decode32(y.wzyx * 255.0),\n          decode32(z.wzyx * 255.0),\n          decode32(w.wzyx * 255.0)\n        );\n      }\n      vec4 decodevec4 (float dx, float x, float y) {\n        return decodevec4(\n          texture2D(jointsTexture, vec2(dx * (x + 0.5), y)),\n          texture2D(jointsTexture, vec2(dx * (x + 1.5), y)),\n          texture2D(jointsTexture, vec2(dx * (x + 2.5), y)),\n          texture2D(jointsTexture, vec2(dx * (x + 3.5), y))\n        );\n      }\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 16.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = decodevec4(dx, x,       y);\n        vec4 v2 = decodevec4(dx, x+4.0,   y);\n        vec4 v3 = decodevec4(dx, x+8.0,   y);\n        vec4 v4 = decodevec4(dx, x+12.0,  y);\n        return mat4(v1, v2, v3, v4);\n      }\n    #endif\n  #else\n    uniform mat4 jointMatrices[50];\n    mat4 getBoneMatrix(const in float i) {\n      return jointMatrices[int(i)];\n    }\n  #endif\n    mat4 skinMatrix() {\n      return\n        getBoneMatrix(a_joints.x) * a_weights.x +\n        getBoneMatrix(a_joints.y) * a_weights.y +\n        getBoneMatrix(a_joints.z) * a_weights.z +\n        getBoneMatrix(a_joints.w) * a_weights.w\n        ;\n    }\n#endif\nstruct StandardVertInput {\n  vec2 uv;\n  vec4 position;\n  vec3 normal;\n  vec4 tangent;\n  vec4 color;\n};\nattribute vec3 a_position;\n#if CC_USE_ATTRIBUTE_UV0\nattribute vec2 a_uv0;\n#endif\n#if CC_USE_ATTRIBUTE_COLOR\nattribute vec4 a_color;\n#endif\n#if CC_USE_ATTRIBUTE_NORMAL\nattribute vec3 a_normal;\n#endif\n#if CC_USE_ATTRIBUTE_TANGENT\nattribute vec4 a_tangent;\n#endif\nvoid CCAttribute (out StandardVertInput In) {\n  In.position = vec4(a_position, 1.0);\n  #if CC_USE_ATTRIBUTE_UV0\n    In.uv = a_uv0;\n  #else\n    In.uv = vec2(0.0);\n  #endif\n  #if CC_USE_ATTRIBUTE_COLOR\n    In.color = a_color;\n  #else\n    In.color = vec4(1.0);\n  #endif\n  #if CC_USE_ATTRIBUTE_NORMAL\n    In.normal = a_normal;\n  #else\n    In.normal = vec3(0.0, 1.0, 0.0);\n  #endif\n  #if CC_USE_ATTRIBUTE_TANGENT\n    In.tangent = a_tangent;\n  #else\n    In.tangent = vec4(1.0, 0.0, 0.0, 0.0);\n  #endif\n}\nvoid CCVertInput(out StandardVertInput In) {\n  CCAttribute(In);\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    In.position = m * In.position;\n    #if CC_USE_ATTRIBUTE_NORMAL\n      In.normal = (m * vec4(In.normal, 0)).xyz;\n    #endif\n    #if CC_USE_ATTRIBUTE_TANGENT\n      In.tangent = m * In.tangent;\n    #endif\n  #endif\n}\n#if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n  uniform mat4 cc_shadow_lightViewProjMatrix[2];\nuniform vec4 cc_shadow_info[2];\n  #if CC_NUM_SHADOW_LIGHTS > 0\n    uniform sampler2D cc_shadow_map_0;\n  #endif\n  #if CC_NUM_SHADOW_LIGHTS > 1\n    uniform sampler2D cc_shadow_map_1;\n  #endif\n  varying vec4 v_posLightSpace[2];\n  varying float v_depth[2];\n#endif\nvoid CCShadowInput (vec3 worldPos) {\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n  for (int i = 0; i < CC_NUM_SHADOW_LIGHTS; i++) {\n    v_posLightSpace[i] = cc_shadow_lightViewProjMatrix[i] * vec4(worldPos, 1.0);\n    v_depth[i] = (v_posLightSpace[i].z + cc_shadow_info[i].x) / (cc_shadow_info[i].x + cc_shadow_info[i].y);\n  }\n  #endif\n}\nuniform vec2 mainTiling;\nuniform vec2 mainOffset;\n#if CC_USE_ATTRIBUTE_UV0 && (USE_DIFFUSE_TEXTURE || USE_EMISSIVE_TEXTURE || USE_SPECULAR_TEXTURE || USE_NORMAL_TEXTURE)\n  varying mediump vec2 v_uv0;\n#endif\n#if CC_USE_ATTRIBUTE_COLOR\n  varying lowp vec4 v_color;\n#endif\n#if USE_NORMAL_TEXTURE\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n#endif\nvarying vec3 v_worldNormal;\nvarying vec3 v_worldPos;\nvarying vec3 v_viewDirection;\nvoid main () {\n  StandardVertInput In;\n  CCVertInput(In);\n  vec4 position = In.position;\n  v_worldNormal = normalize((cc_matWorldIT * vec4(In.normal, 0)).xyz);\n  v_worldPos = (cc_matWorld * position).xyz;\n  v_viewDirection = normalize(cc_cameraPos.xyz - v_worldPos);\n  #if CC_USE_ATTRIBUTE_UV0 && (USE_DIFFUSE_TEXTURE || USE_EMISSIVE_TEXTURE || USE_SPECULAR_TEXTURE || USE_NORMAL_TEXTURE)\n    v_uv0 = In.uv * mainTiling + mainOffset;\n  #endif\n  #if CC_USE_ATTRIBUTE_COLOR\n    v_color = In.color;\n  #endif\n  #if USE_NORMAL_TEXTURE\n    v_tangent = normalize((cc_matWorld * vec4(In.tangent.xyz, 0.0)).xyz);\n    v_bitangent = cross(v_worldNormal, v_tangent) * In.tangent.w;\n  #endif\n  CCShadowInput(v_worldPos);\n  gl_Position = cc_matViewProj * cc_matWorld * position;\n}","frag":"\nprecision highp float;\nvec4 CCFragOutput (vec4 color) {\n  #if OUTPUT_TO_GAMMA\n    color.rgb = sqrt(color.rgb);\n  #endif\n\treturn color;\n}\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform lowp vec4 diffuseColor;\nuniform lowp vec4 specularColor;\nuniform lowp vec4 emissiveColor;\nuniform float glossiness;\n#if USE_DIFFUSE_TEXTURE\n  uniform sampler2D diffuseTexture;\n#endif\n#if USE_SPECULAR && USE_SPECULAR_TEXTURE\n  uniform sampler2D specularTexture;\n#endif\n#if USE_EMISSIVE && USE_EMISSIVE_TEXTURE\n  uniform sampler2D emissiveTexture;\n#endif\n#if USE_NORMAL_TEXTURE\n  varying vec3 v_tangent;\n  varying vec3 v_bitangent;\n  uniform sampler2D normalTexture;\n#endif\nvarying vec3 v_worldNormal;\nvarying vec3 v_worldPos;\nvarying vec3 v_viewDirection;\n#if CC_USE_ATTRIBUTE_UV0 && (USE_DIFFUSE_TEXTURE || (USE_EMISSIVE && USE_EMISSIVE_TEXTURE) || (USE_SPECULAR && USE_SPECULAR_TEXTURE) || USE_NORMAL_TEXTURE)\n  varying mediump vec2 v_uv0;\n#endif\n#if CC_USE_ATTRIBUTE_COLOR\n  varying lowp vec4 v_color;\n#endif\n#if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n  uniform vec4 cc_shadow_info[2];\n  #if CC_NUM_SHADOW_LIGHTS > 0\n    uniform sampler2D cc_shadow_map_0;\n  #endif\n  #if CC_NUM_SHADOW_LIGHTS > 1\n    uniform sampler2D cc_shadow_map_1;\n  #endif\n  varying vec4 v_posLightSpace[2];\n  varying float v_depth[2];\n#endif\nfloat unpackRGBAToDepth(vec4 color) {\n  return dot(color, vec4(1.0, 1.0 / 255.0, 1.0 / 65025.0, 1.0 / 160581375.0));\n}\nfloat getDepth(sampler2D shadowMap, vec2 shadowUV) {\n    return unpackRGBAToDepth(texture2D(shadowMap, shadowUV));\n}\nfloat computeFallOff(float shadow, vec2 coords, float frustumEdgeFalloff) {\n  return shadow;\n}\nfloat shadowSimple(sampler2D shadowMap, vec2 shadowUV, float currentDepth, float darkness) {\n  float closestDepth = getDepth(shadowMap, shadowUV);\n  return currentDepth > closestDepth  ? 1.0 - darkness : 1.0;\n}\nfloat shadowPCF3X3(sampler2D shadowMap, vec2 shadowUV, float currentDepth, float darkness, float shadowSize) {\n  float shadow = 0.0;\n  for (int x = -1; x <= 1; ++x) {\n    for (int y = -1; y <= 1; ++y) {\n      float closestDepth = getDepth(shadowMap, shadowUV + vec2(x, y) * 1.0/shadowSize);\n      shadow += currentDepth > closestDepth  ? 1.0 - darkness : 1.0;\n    }\n  }\n  shadow /= 9.0;\n  return shadow;\n}\nfloat shadowPCF5X5(sampler2D shadowMap, vec2 shadowUV, float currentDepth, float darkness, float shadowSize) {\n  float shadow = 0.0;\n  for (int x = -2; x <= 2; ++x) {\n    for (int y = -2; y <= 2; ++y) {\n      float closestDepth = getDepth(shadowMap, shadowUV + vec2(x, y) * 1.0/shadowSize);\n      shadow += currentDepth > closestDepth  ? 1.0 - darkness : 1.0;\n    }\n  }\n  shadow /= 25.0;\n  return shadow;\n}\n#if CC_NUM_LIGHTS > 0\nuniform vec4 cc_lightPositionAndRange[4];\nuniform vec4 cc_lightDirection[4];\nuniform vec4 cc_lightColor[4];\n#endif\nstruct LightInfo {\n  vec3 lightDir;\n  vec3 radiance;\n  vec4 lightColor;\n};\nLightInfo computeDirectionalLighting(\n  vec4 lightDirection,\n  vec4 lightColor\n) {\n  LightInfo ret;\n  ret.lightDir = -normalize(lightDirection.xyz);\n  ret.radiance = lightColor.rgb;\n  ret.lightColor = lightColor;\n  return ret;\n}\nLightInfo computePointLighting(\n  vec3 worldPosition,\n  vec4 lightPositionAndRange,\n  vec4 lightColor\n) {\n  LightInfo ret;\n  vec3 lightDir = lightPositionAndRange.xyz - worldPosition;\n  float attenuation = max(0., 1.0 - length(lightDir) / lightPositionAndRange.w);\n  ret.lightDir = normalize(lightDir);\n  ret.radiance = lightColor.rgb * attenuation;\n  ret.lightColor = lightColor;\n  return ret;\n}\nLightInfo computeSpotLighting(\n  vec3 worldPosition,\n  vec4 lightPositionAndRange,\n  vec4 lightDirection,\n  vec4 lightColor\n) {\n  LightInfo ret;\n  vec3 lightDir = lightPositionAndRange.xyz - worldPosition;\n  float attenuation = max(0., 1.0 - length(lightDir) / lightPositionAndRange.w);\n  lightDir = normalize(lightDir);\n  float cosConeAngle = max(0., dot(lightDirection.xyz, -lightDir));\n  cosConeAngle = cosConeAngle < lightDirection.w ? 0. : cosConeAngle;\n  cosConeAngle = pow(cosConeAngle, lightColor.w);\n  ret.lightDir = lightDir;\n  ret.radiance = lightColor.rgb * attenuation * cosConeAngle;\n  ret.lightColor = lightColor;\n  return ret;\n}\nstruct Lighting {\n  vec3 diffuse;\n  vec3 specular;\n};\nstruct PhongSurface {\n  vec3 diffuse;\n  vec3 emissive;\n  vec3 specular;\n  float opacity;\n  float glossiness;\n  vec3 position;\n  vec3 normal;\n  vec3 viewDirection;\n};\nLighting brdf (PhongSurface s, LightInfo info) {\n  Lighting result;\n  float ndh = 0.0;\n  vec3 halfDir = normalize(s.viewDirection + info.lightDir);\n  float NdotH = max(0.0, dot(s.normal, halfDir));\n  NdotH = pow(NdotH, max(1.0, s.glossiness * 128.0));\n  result.diffuse = info.radiance * max(0.0, dot(s.normal, info.lightDir));\n  result.specular = info.radiance * NdotH;\n  return result;\n}\nvec4 composePhongShading (Lighting lighting, PhongSurface s) {\n  vec4 o = vec4(0.0, 0.0, 0.0, 1.0);\n  o.rgb = lighting.diffuse * s.diffuse;\n  #if USE_EMISSIVE\n    o.rgb += s.emissive;\n  #endif\n  #if USE_SPECULAR\n    o.rgb += lighting.specular * s.specular;\n  #endif\n  o.a = s.opacity;\n  return o;\n}\nvec3 ambient(PhongSurface s, vec4 ambientColor) {\n  return s.diffuse * ambientColor.rgb;\n}\nvec4 CCPhongShading (in PhongSurface s) {\n  Lighting result;\n  result.diffuse = vec3(0, 0, 0);\n  result.specular = vec3(0, 0, 0);\n  #if CC_NUM_LIGHTS > 0\n    #if CC_LIGHT_0_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[0]);\n    #else\n      LightInfo info0;\n      #if CC_LIGHT_0_TYPE == 0\n        info0 = computeDirectionalLighting(cc_lightDirection[0], cc_lightColor[0]);\n      #elif CC_LIGHT_0_TYPE == 1\n        info0 = computePointLighting(s.position, cc_lightPositionAndRange[0], cc_lightColor[0]);\n      #elif CC_LIGHT_0_TYPE == 2\n        info0 = computeSpotLighting(s.position, cc_lightPositionAndRange[0], cc_lightDirection[0], cc_lightColor[0]);\n      #endif\n      Lighting result0 = brdf(s, info0);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 0\n    float shadow_0 = 1.0;\n    vec2 projCoords0 = v_posLightSpace[0].xy / v_posLightSpace[0].w;\n    vec2 shadowUV0 = projCoords0 * 0.5 + vec2(0.5);\n    if (shadowUV0.x >= 0.0 && shadowUV0.x <= 1.0 && shadowUV0.y >= 0.0 && shadowUV0.y <= 1.0) {\n      float currentDepth0 = clamp(v_depth[0], 0.0, 1.0);\n      #if CC_SHADOW_0_TYPE == 3\n        shadow_0 = shadowPCF3X3(cc_shadow_map_0, shadowUV0, currentDepth0, cc_shadow_info[0].w, cc_shadow_info[0].z);\n      #elif CC_SHADOW_0_TYPE == 4\n        shadow_0 = shadowPCF5X5(cc_shadow_map_0, shadowUV0, currentDepth0, cc_shadow_info[0].w, cc_shadow_info[0].z);\n      #else\n        shadow_0 = shadowSimple(cc_shadow_map_0, shadowUV0, currentDepth0, cc_shadow_info[0].w);\n      #endif\n      shadow_0 = computeFallOff(shadow_0, projCoords0, 0.0);\n    }\n    result0.diffuse *= shadow_0;\n    result0.specular *= shadow_0;\n  #endif\n      result.diffuse += result0.diffuse;\n      result.specular += result0.specular;\n    #endif\n  #endif\n  #if CC_NUM_LIGHTS > 1\n    #if CC_LIGHT_1_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[1]);\n    #else\n      LightInfo info1;\n      #if CC_LIGHT_1_TYPE == 0\n        info1 = computeDirectionalLighting(cc_lightDirection[1], cc_lightColor[1]);\n      #elif CC_LIGHT_1_TYPE == 1\n        info1 = computePointLighting(s.position, cc_lightPositionAndRange[1], cc_lightColor[1]);\n      #elif CC_LIGHT_1_TYPE == 2\n        info1 = computeSpotLighting(s.position, cc_lightPositionAndRange[1], cc_lightDirection[1], cc_lightColor[1]);\n      #endif\n      Lighting result1 = brdf(s, info1);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 1\n    float shadow_1 = 1.0;\n    vec2 projCoords1 = v_posLightSpace[1].xy / v_posLightSpace[1].w;\n    vec2 shadowUV1 = projCoords1 * 0.5 + vec2(0.5);\n    if (shadowUV1.x >= 0.0 && shadowUV1.x <= 1.0 && shadowUV1.y >= 0.0 && shadowUV1.y <= 1.0) {\n      float currentDepth1 = clamp(v_depth[1], 0.0, 1.0);\n      #if CC_SHADOW_1_TYPE == 3\n        shadow_1 = shadowPCF3X3(cc_shadow_map_1, shadowUV1, currentDepth1, cc_shadow_info[1].w, cc_shadow_info[1].z);\n      #elif CC_SHADOW_1_TYPE == 4\n        shadow_1 = shadowPCF5X5(cc_shadow_map_1, shadowUV1, currentDepth1, cc_shadow_info[1].w, cc_shadow_info[1].z);\n      #else\n        shadow_1 = shadowSimple(cc_shadow_map_1, shadowUV1, currentDepth1, cc_shadow_info[1].w);\n      #endif\n      shadow_1 = computeFallOff(shadow_1, projCoords1, 0.0);\n    }\n    result1.diffuse *= shadow_1;\n    result1.specular *= shadow_1;\n  #endif\n      result.diffuse += result1.diffuse;\n      result.specular += result1.specular;\n    #endif\n  #endif\n  #if CC_NUM_LIGHTS > 2\n    #if CC_LIGHT_2_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[2]);\n    #else\n      LightInfo info2;\n      #if CC_LIGHT_2_TYPE == 0\n        info2 = computeDirectionalLighting(cc_lightDirection[2], cc_lightColor[2]);\n      #elif CC_LIGHT_2_TYPE == 1\n        info2 = computePointLighting(s.position, cc_lightPositionAndRange[2], cc_lightColor[2]);\n      #elif CC_LIGHT_2_TYPE == 2\n        info2 = computeSpotLighting(s.position, cc_lightPositionAndRange[2], cc_lightDirection[2], cc_lightColor[2]);\n      #endif\n      Lighting result2 = brdf(s, info2);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 2\n    float shadow_2 = 1.0;\n    vec2 projCoords2 = v_posLightSpace[2].xy / v_posLightSpace[2].w;\n    vec2 shadowUV2 = projCoords2 * 0.5 + vec2(0.5);\n    if (shadowUV2.x >= 0.0 && shadowUV2.x <= 1.0 && shadowUV2.y >= 0.0 && shadowUV2.y <= 1.0) {\n      float currentDepth2 = clamp(v_depth[2], 0.0, 1.0);\n      #if CC_SHADOW_2_TYPE == 3\n        shadow_2 = shadowPCF3X3(cc_shadow_map_2, shadowUV2, currentDepth2, cc_shadow_info[2].w, cc_shadow_info[2].z);\n      #elif CC_SHADOW_2_TYPE == 4\n        shadow_2 = shadowPCF5X5(cc_shadow_map_2, shadowUV2, currentDepth2, cc_shadow_info[2].w, cc_shadow_info[2].z);\n      #else\n        shadow_2 = shadowSimple(cc_shadow_map_2, shadowUV2, currentDepth2, cc_shadow_info[2].w);\n      #endif\n      shadow_2 = computeFallOff(shadow_2, projCoords2, 0.0);\n    }\n    result2.diffuse *= shadow_2;\n    result2.specular *= shadow_2;\n  #endif\n      result.diffuse += result2.diffuse;\n      result.specular += result2.specular;\n    #endif\n  #endif\n  #if CC_NUM_LIGHTS > 3\n    #if CC_LIGHT_3_TYPE == 3\n      result.diffuse += ambient(s, cc_lightColor[3]);\n    #else\n      LightInfo info3;\n      #if CC_LIGHT_3_TYPE == 0\n        info3 = computeDirectionalLighting(cc_lightDirection[3], cc_lightColor[3]);\n      #elif CC_LIGHT_3_TYPE == 1\n        info3 = computePointLighting(s.position, cc_lightPositionAndRange[3], cc_lightColor[3]);\n      #elif CC_LIGHT_3_TYPE == 2\n        info3 = computeSpotLighting(s.position, cc_lightPositionAndRange[3], cc_lightDirection[3], cc_lightColor[3]);\n      #endif\n      Lighting result3 = brdf(s, info3);\n  #if CC_USE_SHADOW_MAP && CC_NUM_SHADOW_LIGHTS > 3\n    float shadow_3 = 1.0;\n    vec2 projCoords3 = v_posLightSpace[3].xy / v_posLightSpace[3].w;\n    vec2 shadowUV3 = projCoords3 * 0.5 + vec2(0.5);\n    if (shadowUV3.x >= 0.0 && shadowUV3.x <= 1.0 && shadowUV3.y >= 0.0 && shadowUV3.y <= 1.0) {\n      float currentDepth3 = clamp(v_depth[3], 0.0, 1.0);\n      #if CC_SHADOW_3_TYPE == 3\n        shadow_3 = shadowPCF3X3(cc_shadow_map_3, shadowUV3, currentDepth3, cc_shadow_info[3].w, cc_shadow_info[3].z);\n      #elif CC_SHADOW_3_TYPE == 4\n        shadow_3 = shadowPCF5X5(cc_shadow_map_3, shadowUV3, currentDepth3, cc_shadow_info[3].w, cc_shadow_info[3].z);\n      #else\n        shadow_3 = shadowSimple(cc_shadow_map_3, shadowUV3, currentDepth3, cc_shadow_info[3].w);\n      #endif\n      shadow_3 = computeFallOff(shadow_3, projCoords3, 0.0);\n    }\n    result3.diffuse *= shadow_3;\n    result3.specular *= shadow_3;\n  #endif\n      result.diffuse += result3.diffuse;\n      result.specular += result3.specular;\n    #endif\n  #endif\n  return composePhongShading(result, s);\n}\nvoid surf (out PhongSurface s) {\n  vec4 diffuse = vec4(1, 1, 1, 1);\n  #if CC_USE_ATTRIBUTE_COLOR\n    diffuse *= v_color;\n  #endif\n  diffuse *= diffuseColor;\n  #if USE_DIFFUSE_TEXTURE\n  vec4 diffuseTexture_tmp = texture2D(diffuseTexture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_diffuseTexture\n      diffuseTexture_tmp.a *= texture2D(diffuseTexture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    diffuse.rgb *= (diffuseTexture_tmp.rgb * diffuseTexture_tmp.rgb);\n    diffuse.a *= diffuseTexture_tmp.a;\n  #else\n    diffuse *= diffuseTexture_tmp;\n  #endif\n  #endif\n  ALPHA_TEST(diffuse);\n  s.diffuse = diffuse.rgb;\n  s.opacity = diffuse.a;\n  #if USE_EMISSIVE\n    s.emissive = emissiveColor.rgb;\n    #if USE_EMISSIVE_TEXTURE\n  vec4 emissiveTexture_tmp = texture2D(emissiveTexture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_emissiveTexture\n      emissiveTexture_tmp.a *= texture2D(emissiveTexture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    s.emissive.rgb *= (emissiveTexture_tmp.rgb * emissiveTexture_tmp.rgb);\n  #else\n    s.emissive.rgb *= emissiveTexture_tmp.rgb;\n  #endif\n    #endif\n  #endif\n  #if USE_SPECULAR\n    s.specular = specularColor.rgb;\n    #if USE_SPECULAR_TEXTURE\n  vec4 specularTexture_tmp = texture2D(specularTexture, v_uv0);\n  #if CC_USE_ALPHA_ATLAS_specularTexture\n      specularTexture_tmp.a *= texture2D(specularTexture, v_uv0 + vec2(0, 0.5)).r;\n  #endif\n  #if INPUT_IS_GAMMA\n    s.specular.rgb *= (specularTexture_tmp.rgb * specularTexture_tmp.rgb);\n  #else\n    s.specular.rgb *= specularTexture_tmp.rgb;\n  #endif\n    #endif\n  #endif\n  s.normal = v_worldNormal;\n  #if USE_NORMAL_TEXTURE\n    vec3 nmmp = texture2D(normalTexture, v_uv0).xyz - vec3(0.5);\n    s.normal =\n      nmmp.x * normalize(v_tangent) +\n      nmmp.y * normalize(v_bitangent) +\n      nmmp.z * normalize(s.normal);\n    s.normal = normalize(s.normal);\n  #endif\n  s.position = v_worldPos;\n  s.viewDirection = v_viewDirection;\n  s.glossiness = glossiness;\n}\nvoid main () {\n  PhongSurface s;\n  surf(s);\n  vec4 color = CCPhongShading(s);\n  gl_FragColor = CCFragOutput(color);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CC_SHADOW","defines":["CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"]},{"name":"CCLIGHTS","defines":["CC_NUM_LIGHTS"]}],"samplers":[{"name":"cc_shadow_map_0","defines":["CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"]},{"name":"cc_shadow_map_1","defines":["CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"]}]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_JOINTS_TEXTRUE","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"CC_JOINTS_TEXTURE_FLOAT32","type":"boolean","defines":["CC_USE_SKINNING","CC_USE_JOINTS_TEXTRUE"]},{"name":"CC_USE_ATTRIBUTE_UV0","type":"boolean","defines":[]},{"name":"CC_USE_ATTRIBUTE_COLOR","type":"boolean","defines":[]},{"name":"CC_USE_ATTRIBUTE_NORMAL","type":"boolean","defines":[]},{"name":"CC_USE_ATTRIBUTE_TANGENT","type":"boolean","defines":[]},{"name":"CC_USE_SHADOW_MAP","type":"boolean","defines":[]},{"name":"CC_NUM_SHADOW_LIGHTS","type":"number","defines":["CC_USE_SHADOW_MAP"],"range":[0,3]},{"name":"USE_DIFFUSE_TEXTURE","type":"boolean","defines":[]},{"name":"USE_NORMAL_TEXTURE","type":"boolean","defines":[]},{"name":"OUTPUT_TO_GAMMA","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"USE_SPECULAR","type":"boolean","defines":[]},{"name":"USE_SPECULAR_TEXTURE","type":"boolean","defines":["USE_SPECULAR"]},{"name":"USE_EMISSIVE","type":"boolean","defines":[]},{"name":"USE_EMISSIVE_TEXTURE","type":"boolean","defines":["USE_EMISSIVE"]},{"name":"CC_NUM_LIGHTS","type":"number","defines":[],"range":[0,3]},{"name":"CC_LIGHT_0_TYPE","type":"number","defines":["CC_NUM_LIGHTS"],"range":[0,3]},{"name":"CC_SHADOW_0_TYPE","type":"number","defines":["CC_NUM_LIGHTS","CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"],"range":[0,3]},{"name":"CC_LIGHT_1_TYPE","type":"number","defines":["CC_NUM_LIGHTS"],"range":[0,3]},{"name":"CC_SHADOW_1_TYPE","type":"number","defines":["CC_NUM_LIGHTS","CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"],"range":[0,3]},{"name":"CC_LIGHT_2_TYPE","type":"number","defines":["CC_NUM_LIGHTS"],"range":[0,3]},{"name":"CC_SHADOW_2_TYPE","type":"number","defines":["CC_NUM_LIGHTS","CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"],"range":[0,3]},{"name":"CC_LIGHT_3_TYPE","type":"number","defines":["CC_NUM_LIGHTS"],"range":[0,3]},{"name":"CC_SHADOW_3_TYPE","type":"number","defines":["CC_NUM_LIGHTS","CC_USE_SHADOW_MAP","CC_NUM_SHADOW_LIGHTS"],"range":[0,3]},{"name":"CC_USE_ALPHA_ATLAS_diffuseTexture","type":"boolean","defines":["USE_DIFFUSE_TEXTURE"]},{"name":"INPUT_IS_GAMMA","type":"boolean","defines":["USE_DIFFUSE_TEXTURE"]},{"name":"CC_USE_ALPHA_ATLAS_emissiveTexture","type":"boolean","defines":["USE_EMISSIVE","USE_EMISSIVE_TEXTURE"]},{"name":"CC_USE_ALPHA_ATLAS_specularTexture","type":"boolean","defines":["USE_SPECULAR","USE_SPECULAR_TEXTURE"]}],"blocks":[{"name":"SKINNING","binding":0,"members":[{"name":"jointsTextureSize","type":14,"count":1}],"defines":["CC_USE_SKINNING","CC_USE_JOINTS_TEXTRUE"]},{"name":"JOINT_MATRIX","binding":1,"members":[{"name":"jointMatrices","type":26,"count":50}],"defines":["CC_USE_SKINNING"]},{"name":"MAIN_TILING","binding":2,"members":[{"name":"mainTiling","type":14,"count":1},{"name":"mainOffset","type":14,"count":1}],"defines":[]},{"name":"ALPHA_TEST","binding":3,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"PhongFrag","binding":4,"members":[{"name":"diffuseColor","type":16,"count":1},{"name":"specularColor","type":16,"count":1},{"name":"emissiveColor","type":16,"count":1},{"name":"glossiness","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"jointsTexture","type":29,"count":1,"binding":30,"defines":["CC_USE_SKINNING","CC_USE_JOINTS_TEXTRUE"]},{"name":"diffuseTexture","type":29,"count":1,"binding":31,"defines":["USE_DIFFUSE_TEXTURE"]},{"name":"specularTexture","type":29,"count":1,"binding":32,"defines":["USE_SPECULAR","USE_SPECULAR_TEXTURE"]},{"name":"emissiveTexture","type":29,"count":1,"binding":33,"defines":["USE_EMISSIVE","USE_EMISSIVE_TEXTURE"]},{"name":"normalTexture","type":29,"count":1,"binding":34,"defines":["USE_NORMAL_TEXTURE"]}]},{"hash":1165371292,"record":null,"name":"builtin-phong|shadow-map-vs|shadow-map-fs","glsl3":{"vert":"\nprecision highp float;\nin vec3 a_position;\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nuniform CC_SHADOW_MAP {\n  mat4  cc_shadow_map_lightViewProjMatrix;\n  vec4  cc_shadow_map_info;\n  float cc_shadow_map_bias;\n};\nout float v_depth;\n#if CC_USE_SKINNING\n  in vec4 a_weights;\n  in vec4 a_joints;\n  #if CC_USE_JOINTS_TEXTRUE\n    uniform SKINNING {\n      vec2 jointsTextureSize;\n    };\n    uniform sampler2D jointsTexture;\n    #if CC_JOINTS_TEXTURE_FLOAT32\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 4.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = texture(jointsTexture, vec2(dx * (x + 0.5), y));\n        vec4 v2 = texture(jointsTexture, vec2(dx * (x + 1.5), y));\n        vec4 v3 = texture(jointsTexture, vec2(dx * (x + 2.5), y));\n        vec4 v4 = texture(jointsTexture, vec2(dx * (x + 3.5), y));\n        return mat4(v1, v2, v3, v4);\n      }\n    #else\n      float decode32(vec4 rgba) {\n        float Sign = 1.0 - step(128.0, rgba[0]) * 2.0;\n        float Exponent = 2.0 * mod(rgba[0], 128.0) + step(128.0, rgba[1]) - 127.0;\n        float Mantissa = mod(rgba[1], 128.0) * 65536.0 + rgba[2] * 256.0 + rgba[3] + 8388608.0;\n        return Sign * exp2(Exponent - 23.0) * Mantissa;\n      }\n      vec4 decodevec4 (vec4 x, vec4 y, vec4 z, vec4 w) {\n        return vec4(\n          decode32(x.wzyx * 255.0),\n          decode32(y.wzyx * 255.0),\n          decode32(z.wzyx * 255.0),\n          decode32(w.wzyx * 255.0)\n        );\n      }\n      vec4 decodevec4 (float dx, float x, float y) {\n        return decodevec4(\n          texture(jointsTexture, vec2(dx * (x + 0.5), y)),\n          texture(jointsTexture, vec2(dx * (x + 1.5), y)),\n          texture(jointsTexture, vec2(dx * (x + 2.5), y)),\n          texture(jointsTexture, vec2(dx * (x + 3.5), y))\n        );\n      }\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 16.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = decodevec4(dx, x,       y);\n        vec4 v2 = decodevec4(dx, x+4.0,   y);\n        vec4 v3 = decodevec4(dx, x+8.0,   y);\n        vec4 v4 = decodevec4(dx, x+12.0,  y);\n        return mat4(v1, v2, v3, v4);\n      }\n    #endif\n  #else\n    uniform JOINT_MATRIX {\n      mat4 jointMatrices[50];\n    };\n    mat4 getBoneMatrix(const in float i) {\n      return jointMatrices[int(i)];\n    }\n  #endif\n    mat4 skinMatrix() {\n      return\n        getBoneMatrix(a_joints.x) * a_weights.x +\n        getBoneMatrix(a_joints.y) * a_weights.y +\n        getBoneMatrix(a_joints.z) * a_weights.z +\n        getBoneMatrix(a_joints.w) * a_weights.w\n        ;\n    }\n#endif\nvoid SKIN_VERTEX(inout vec4 a1) {\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    a1 = m * a1;\n  #endif\n}\nvoid SKIN_VERTEX(inout vec4 a1, inout vec4 a2) {\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    a1 = m * a1;\n    a2 = m * a2;\n  #endif\n}\nvoid SKIN_VERTEX(inout vec4 a1, inout vec4 a2, inout vec4 a3) {\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    a1 = m * a1;\n    a2 = m * a2;\n    a3 = m * a3;\n  #endif\n}\nvoid main () {\n  vec4 position = vec4(a_position, 1);\n  SKIN_VERTEX(position);\n  gl_Position = cc_shadow_map_lightViewProjMatrix * cc_matWorld * position;\n  v_depth = ((gl_Position.z + cc_shadow_map_info.x) / (cc_shadow_map_info.x + cc_shadow_map_info.y)) + cc_shadow_map_bias;\n}","frag":"\nprecision highp float;\nin float v_depth;\nvec4 packDepthToRGBA(float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nvoid main () {\n    gl_FragColor = packDepthToRGBA(v_depth);\n}"},"glsl1":{"vert":"\nprecision highp float;\nattribute vec3 a_position;\nuniform mat4 cc_matWorld;\nuniform mat4 cc_shadow_map_lightViewProjMatrix;\nuniform vec4 cc_shadow_map_info;\nuniform float cc_shadow_map_bias;\nvarying float v_depth;\n#if CC_USE_SKINNING\n  attribute vec4 a_weights;\n  attribute vec4 a_joints;\n  #if CC_USE_JOINTS_TEXTRUE\n    uniform vec2 jointsTextureSize;\n    uniform sampler2D jointsTexture;\n    #if CC_JOINTS_TEXTURE_FLOAT32\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 4.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = texture2D(jointsTexture, vec2(dx * (x + 0.5), y));\n        vec4 v2 = texture2D(jointsTexture, vec2(dx * (x + 1.5), y));\n        vec4 v3 = texture2D(jointsTexture, vec2(dx * (x + 2.5), y));\n        vec4 v4 = texture2D(jointsTexture, vec2(dx * (x + 3.5), y));\n        return mat4(v1, v2, v3, v4);\n      }\n    #else\n      float decode32(vec4 rgba) {\n        float Sign = 1.0 - step(128.0, rgba[0]) * 2.0;\n        float Exponent = 2.0 * mod(rgba[0], 128.0) + step(128.0, rgba[1]) - 127.0;\n        float Mantissa = mod(rgba[1], 128.0) * 65536.0 + rgba[2] * 256.0 + rgba[3] + 8388608.0;\n        return Sign * exp2(Exponent - 23.0) * Mantissa;\n      }\n      vec4 decodevec4 (vec4 x, vec4 y, vec4 z, vec4 w) {\n        return vec4(\n          decode32(x.wzyx * 255.0),\n          decode32(y.wzyx * 255.0),\n          decode32(z.wzyx * 255.0),\n          decode32(w.wzyx * 255.0)\n        );\n      }\n      vec4 decodevec4 (float dx, float x, float y) {\n        return decodevec4(\n          texture2D(jointsTexture, vec2(dx * (x + 0.5), y)),\n          texture2D(jointsTexture, vec2(dx * (x + 1.5), y)),\n          texture2D(jointsTexture, vec2(dx * (x + 2.5), y)),\n          texture2D(jointsTexture, vec2(dx * (x + 3.5), y))\n        );\n      }\n      mat4 getBoneMatrix(const in float i) {\n        float width = jointsTextureSize.x;\n        float height = jointsTextureSize.y;\n        float j = i * 16.0;\n        float x = mod(j, width);\n        float y = floor(j / width);\n        float dx = 1.0 / width;\n        float dy = 1.0 / height;\n        y = dy * (y + 0.5);\n        vec4 v1 = decodevec4(dx, x,       y);\n        vec4 v2 = decodevec4(dx, x+4.0,   y);\n        vec4 v3 = decodevec4(dx, x+8.0,   y);\n        vec4 v4 = decodevec4(dx, x+12.0,  y);\n        return mat4(v1, v2, v3, v4);\n      }\n    #endif\n  #else\n    uniform mat4 jointMatrices[50];\n    mat4 getBoneMatrix(const in float i) {\n      return jointMatrices[int(i)];\n    }\n  #endif\n    mat4 skinMatrix() {\n      return\n        getBoneMatrix(a_joints.x) * a_weights.x +\n        getBoneMatrix(a_joints.y) * a_weights.y +\n        getBoneMatrix(a_joints.z) * a_weights.z +\n        getBoneMatrix(a_joints.w) * a_weights.w\n        ;\n    }\n#endif\nvoid SKIN_VERTEX(inout vec4 a1) {\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    a1 = m * a1;\n  #endif\n}\nvoid SKIN_VERTEX(inout vec4 a1, inout vec4 a2) {\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    a1 = m * a1;\n    a2 = m * a2;\n  #endif\n}\nvoid SKIN_VERTEX(inout vec4 a1, inout vec4 a2, inout vec4 a3) {\n  #if CC_USE_SKINNING\n    mat4 m = skinMatrix();\n    a1 = m * a1;\n    a2 = m * a2;\n    a3 = m * a3;\n  #endif\n}\nvoid main () {\n  vec4 position = vec4(a_position, 1);\n  SKIN_VERTEX(position);\n  gl_Position = cc_shadow_map_lightViewProjMatrix * cc_matWorld * position;\n  v_depth = ((gl_Position.z + cc_shadow_map_info.x) / (cc_shadow_map_info.x + cc_shadow_map_info.y)) + cc_shadow_map_bias;\n}","frag":"\nprecision highp float;\nvarying float v_depth;\nvec4 packDepthToRGBA(float depth) {\n  vec4 ret = vec4(1.0, 255.0, 65025.0, 160581375.0) * depth;\n  ret = fract(ret);\n  ret -= ret.yzww * vec4(1.0 / 255.0, 1.0 / 255.0, 1.0 / 255.0, 0.0);\n  return ret;\n}\nvoid main () {\n    gl_FragColor = packDepthToRGBA(v_depth);\n}"},"builtins":{"globals":{"blocks":[{"name":"CC_SHADOW_MAP","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"CC_USE_SKINNING","type":"boolean","defines":[]},{"name":"CC_USE_JOINTS_TEXTRUE","type":"boolean","defines":["CC_USE_SKINNING"]},{"name":"CC_JOINTS_TEXTURE_FLOAT32","type":"boolean","defines":["CC_USE_SKINNING","CC_USE_JOINTS_TEXTRUE"]}],"blocks":[{"name":"SKINNING","binding":0,"members":[{"name":"jointsTextureSize","type":14,"count":1}],"defines":["CC_USE_SKINNING","CC_USE_JOINTS_TEXTRUE"]},{"name":"JOINT_MATRIX","binding":1,"members":[{"name":"jointMatrices","type":26,"count":50}],"defines":["CC_USE_SKINNING"]}],"samplers":[{"name":"jointsTexture","type":29,"count":1,"binding":30,"defines":["CC_USE_SKINNING","CC_USE_JOINTS_TEXTRUE"]}]}],[{"passes":[{"name":"phong","program":"builtin-phong|phong-vs|phong-fs","rasterizerState":{"cullMode":1029},"depthStencilState":{"depthTest":true,"depthWrite":true},"properties":{"alphaThreshold":{"type":13,"value":[0.5]},"mainTiling":{"type":14,"value":[1,1]},"mainOffset":{"type":14,"value":[0,0]},"diffuseColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}},"diffuseTexture":{"value":"white","type":29},"specularColor":{"type":16,"value":[1,1,1,1],"editor":{"type":"color"}},"specularTexture":{"value":"white","type":29},"emissiveColor":{"type":16,"value":[0,0,0,1],"editor":{"type":"color"}},"emissiveTexture":{"value":"white","type":29},"glossiness":{"type":13,"value":[10]},"normalTexture":{"value":"white","type":29}}},{"name":"shadowcast","stage":"shadowcast","program":"builtin-phong|shadow-map-vs|shadow-map-fs","rasterizerState":{"cullMode":1029},"depthStencilState":{"depthTest":true,"depthWrite":true}}]}]]],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4282079948]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4291578202]]]]]],0,0,[0],[1],[0]],[[{"name":"fx_dots","rect":[2,1,81,84],"offset":[0,-0.5],"originalSize":[85,85],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[122]],[[[11,"EnemyWeapon"],[87,"EnemyWeapon",true,9,[[109,true,0.65,-2]],[10,-1]]],0,[0,2,1,0,0,1,0,5,1,2],[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4293059298]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4287861651]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4279571733]]]]]],0,0,[0],[1],[0]],[[[42,"base_2_ide_pre_upgrade",0.5,0.5,2,[{},"paths",11,[{},"StandartBase/RootNode/loposti_01",11,[{},"props",11,[{},"eulerAngles",12,[[[{"frame":0},"value",8,[1,0,0,0]],[{"frame":0.5},"value",8,[1,0,360,0]]],11,11]]]]]]],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4286808963]]]]]],0,0,[0],[1],[0]],[[[11,"IngameButton"],[88,"IngameButton",1,[-5],[[25,true,-2,[20,true,[21,[0,0.82,0.07],[0,0.9,0.1],[0,0.78,0.08],[0,0.88,0.1]]],[118,4,true,[120,[5,0.3,0.3],[5,0.34,0.34],[5,0.28,0.28]]]],[162,-3],[44,1,-4]],[10,-1],[5,400,150]],[23,"Render",1,[[60,0,-6,[0],1]],[1,"c9h+s7YGRF2KUvBRzm1Mei",1],[5,440,150]]],0,[0,2,1,0,0,1,0,0,1,0,0,1,0,-1,2,0,0,2,0,5,1,6],[0,0],[-1,6],[1,26]],[[[11,"Light"],[29,"Light",true,[-2,-3,-4,-5],[10,-1]],[8,"AmbientLight",true,1,[[163,3,0.3,-6]],[1,"9atBYqxQBJaolR+3ip28kt",1]],[18,"DirectionalLightTop",true,1,[[164,0.75,2048,-7]],[1,"e5WlCt55hHmZ6+LwwYKxaf",1],[227.369,240,0,-0.7071067811865475,0,0,0.7071067811865476,1,1,1],[1,-90,0,0]],[18,"DirectionalLightFrontRight",true,1,[[165,0.2,2,100,2048,-8]],[1,"b8pqqCMIxM5pLKSntvjc8U",1],[440.707,307.76,252.221,-0.3558601742492257,0.08090236309004772,0.030939727584455966,0.9305165647567787,1,1,1],[1,-41.857,9.938,0]],[18,"DirectionalLightFrontLeft",true,1,[[166,0.35,2000,120,3,2024,2.3,2048,-9]],[1,"0aofZdbk5LK6EfFU+5NULF",1],[127.554,300,437.613,-0.37686961114246337,0.16042999720436046,0.06645228065352382,0.9098437264664094,1,1,1],[1,-45,20,0]]],0,[0,2,1,0,-1,2,0,-2,3,0,-3,4,0,-4,5,0,0,2,0,0,3,0,0,4,0,0,5,0,5,1,9],[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4288373299]]]]]],0,0,[0],[1],[0]],[[[11,"InputCharacterAny"],[89,"InputCharacterAny",[[150,-2],[116,null,false,true,-3,[59,11,[43]],[167,1.35,[168,[5,5000,5000],[5,5000,5000]]]]],[10,-1],[5,1,1],[-670,0,0,0,0,0,1,1,1,1]]],0,[0,2,1,0,0,1,0,0,1,0,5,1,3],[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4294967295]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4279571733]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,140,[7,4480],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,98,[2,4972,3136],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,39,[2,8456,1248],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,88,[2,9920,2816],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,4480,492]],[4,[1],[2,8108,348]],[4,[2],[2,9704,216]],[4,[3],[2,12736,336]]],[1,-0.020652711391449,0.0534549094736576,-0.0120579143986106],[1,0.020652711391449,0.0696073696017265,0.0120579143986106]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4281556684]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,714,[7,45696],[[0,"a_joints",5123,4],[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2],[0,"a_uv1",5126,2],[0,"a_weights",5126,4]]]],[[4,[0],[2,45696,6936]]],[1,-1.08570122718811,4.2729766391858e-8,-0.36885541677475],[1,1.08398342132568,2.39969420433044,0.311735779047012]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4291611852]]]]]],0,0,[0],[1],[0]],[[[33,"Armature|Armature|mixamo.com|Layer0",".bin",8.458333015441895,30,2,{"Armature/Root":{"position":{"offset":0,"frameCount":135},"quat":{"offset":540,"frameCount":97},"scale":{"offset":1025,"frameCount":1}},"Armature/Root/Hips":{"position":{"offset":1029,"frameCount":2},"quat":{"offset":1037,"frameCount":1},"scale":{"offset":1042,"frameCount":1}},"Armature/Root/Hips/Spine":{"quat":{"offset":1046,"frameCount":56},"scale":{"offset":1326,"frameCount":1},"position":{"offset":1330,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1":{"quat":{"offset":1334,"frameCount":114},"scale":{"offset":1904,"frameCount":1},"position":{"offset":1908,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder":{"quat":{"offset":1912,"frameCount":101},"scale":{"offset":2417,"frameCount":1},"position":{"offset":2421,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm":{"quat":{"offset":2425,"frameCount":137},"scale":{"offset":3110,"frameCount":1},"position":{"offset":3114,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm":{"position":{"offset":3118,"frameCount":2},"quat":{"offset":3126,"frameCount":122},"scale":{"offset":3736,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand":{"position":{"offset":3740,"frameCount":2},"quat":{"offset":3748,"frameCount":1},"scale":{"offset":3753,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck":{"quat":{"offset":3757,"frameCount":124},"scale":{"offset":4377,"frameCount":1},"position":{"offset":4381,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck/Head":{"position":{"offset":4385,"frameCount":2},"quat":{"offset":4393,"frameCount":1},"scale":{"offset":4398,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder":{"quat":{"offset":4402,"frameCount":131},"scale":{"offset":5057,"frameCount":1},"position":{"offset":5061,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm":{"position":{"offset":5065,"frameCount":2},"quat":{"offset":5073,"frameCount":176},"scale":{"offset":5953,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm":{"position":{"offset":5957,"frameCount":2},"quat":{"offset":5965,"frameCount":147},"scale":{"offset":6700,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand":{"position":{"offset":6704,"frameCount":2},"quat":{"offset":6712,"frameCount":1},"scale":{"offset":6717,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg":{"quat":{"offset":6721,"frameCount":101},"scale":{"offset":7226,"frameCount":1},"position":{"offset":7230,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg":{"position":{"offset":7234,"frameCount":2},"quat":{"offset":7242,"frameCount":160},"scale":{"offset":8042,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot":{"quat":{"offset":8046,"frameCount":90},"scale":{"offset":8496,"frameCount":1},"position":{"offset":8500,"frameCount":1}},"Armature/Root/Hips/RightUpLeg":{"quat":{"offset":8504,"frameCount":105},"scale":{"offset":9029,"frameCount":1},"position":{"offset":9033,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg":{"quat":{"offset":9037,"frameCount":142},"scale":{"offset":9747,"frameCount":1},"position":{"offset":9751,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot":{"quat":{"offset":9755,"frameCount":138},"scale":{"offset":10445,"frameCount":1},"position":{"offset":10449,"frameCount":1}},"Armature":{"quat":{"offset":10453,"frameCount":1},"scale":{"offset":10458,"frameCount":1},"position":{"offset":10462,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand/LeftHand_end":{"quat":{"offset":10466,"frameCount":1},"scale":{"offset":10471,"frameCount":1},"position":{"offset":10475,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck/Head/Head_end":{"quat":{"offset":10479,"frameCount":1},"scale":{"offset":10484,"frameCount":1},"position":{"offset":10488,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand/RightHand_end":{"quat":{"offset":10492,"frameCount":1},"scale":{"offset":10497,"frameCount":1},"position":{"offset":10501,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase":{"quat":{"offset":10505,"frameCount":1},"scale":{"offset":10510,"frameCount":1},"position":{"offset":10514,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase/LeftToeBase_end":{"quat":{"offset":10518,"frameCount":1},"scale":{"offset":10523,"frameCount":1},"position":{"offset":10527,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase":{"quat":{"offset":10531,"frameCount":1},"scale":{"offset":10536,"frameCount":1},"position":{"offset":10540,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase/RightToeBase_end":{"quat":{"offset":10544,"frameCount":1},"scale":{"offset":10549,"frameCount":1},"position":{"offset":10553,"frameCount":1}},"Character_1":{"quat":{"offset":10557,"frameCount":1},"scale":{"offset":10562,"frameCount":1},"position":{"offset":10566,"frameCount":1}}}],-1],0,0,[],[],[]],[[[6,".bin",[[3,714,[7,45696],[[0,"a_joints",5123,4],[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2],[0,"a_uv1",5126,2],[0,"a_weights",5126,4]]]],[[4,[0],[2,45696,6936]]],[1,-1.08570122718811,4.2729766391858e-8,-0.36885541677475],[1,1.08398342132568,2.39969420433044,0.311735779047012]],-1],0,0,[],[],[]],[[[147,"wall_show",2.5166666666666666,2.3,{"paths":{"Holder":{"props":{"position":[{"frame":0,"value":[0,-0.04,0]},{"frame":2.5166666666666666,"value":[0,0,0]}]}}}}]],0,0,[],[],[]],[[[6,".bin",[[3,272,[7,8704],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,88,[2,9520,2816],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,188,[2,12624,6016],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,40,[2,19624,1280],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,10,[2,21120,320],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,8704,816]],[4,[1],[2,12336,288]],[4,[2],[2,18640,984]],[4,[3],[2,20904,216]],[4,[4],[2,21440,48]]],[1,-0.0201208107173443,0,-0.0196396708488464],[1,0.0201207920908928,0.0537523366510868,0.0196396708488464]],-1],0,0,[],[],[]],[[[11,"Shotgun"],[35,"Shotgun",true,[-3],[[169,0.35,-2,[1,0,0.2,1.5]]],[10,-1],[0,0,0,-0.5963678105290181,-0.3265055756219768,0.3799281965909152,0.62721137512625,1,1,1],[1,-90,5,60]],[8,"weapon_3",true,1,[[9,1,-4,[0,1,2,3,4,5],6]],[1,"weapon_3",1]]],0,[0,2,1,0,0,1,0,-1,2,0,0,2,0,5,1,4],[0,0,0,0,0,0,0],[-1,-2,-3,-4,-5,-6,3],[123,124,125,126,127,128,129]],[[[146,"base_upgrade",0.75,[{"frame":0.75,"func":"onAnimationEvent","params":[]}],[{},"paths",11,[{},"StandartBase",11,[{},"props",11,[{"active":[{"frame":0,"value":true},{"frame":0.5,"value":false}]},"scale",12,[[[{"frame":0},"value",8,[1,1,1,1]],[{"frame":0.5},"value",8,[1,0,0,0]]],11,11]]],"UpgradeBase",11,[{},"props",11,[{"active":[{"frame":0.5,"value":true}]},"scale",12,[[[{"frame":0.5},"value",8,[1,0,0,0]],[{"frame":0.6666666666666666},"value",8,[1,1.1,1.1,1.1]],[{"frame":0.75},"value",8,[1,1,1,1]]],11,11,11]]]]]]],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4280553480]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4279404350]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4284900966]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4287282142]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,42,[7,1344],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,88,[2,1524,2816],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,42,[2,4760,1344],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,10,[2,6236,320],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,64,[2,6604,2048],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,40,[2,8892,1280],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,322,[2,10556,10304],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,191,[2,22204,6112],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,1344,180]],[4,[1],[2,4340,420]],[4,[2],[2,6104,132]],[4,[3],[2,6556,48]],[4,[4],[2,8652,240]],[4,[5],[2,10172,384]],[4,[6],[2,20860,1344]],[4,[7],[2,28316,924]]],[1,-0.0351981967687607,0,-0.0313987135887146],[1,0.0351981967687607,0.0541815161705017,0.0313987135887146]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4294967295]]]]]],0,0,[0],[1],[0]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4280667164]]]]]],0,0,[0],[1],[0]],[[[6,".bin",[[3,13,[7,416],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,219,[2,488,7008],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]],[3,85,[2,8720,2720],[[0,"a_normal",5126,3],[0,"a_position",5126,3],[0,"a_uv0",5126,2]]]],[[4,[0],[2,416,72]],[4,[1],[2,7496,1224]],[4,[2],[2,11440,504]]],[1,-0.0066439020447433,-0.00975427869707346,-0.00461038202047348],[1,0.0196983329951763,0.00034671783214435,0.00490995589643717]],-1],0,0,[],[],[]],[[[5,[{},"0",11,[{"defines":{}},"props",11,[{},"diffuseColor",8,[4,4293834505]]]]]],0,0,[0],[1],[0]],[[{"name":"elips","rect":[17,20,164,164],"offset":[-1,-2],"originalSize":[200,200],"capInsets":[0,0,0,0]}],[1],0,[0],[8],[130]],[[[33,"Armature|Armature.001|mixamo.com|Layer0",".bin",1.5833333730697632,30,2,{"Armature/Root":{"position":{"offset":0,"frameCount":39},"quat":{"offset":156,"frameCount":39},"scale":{"offset":351,"frameCount":1}},"Armature/Root/Hips/Spine":{"quat":{"offset":355,"frameCount":39},"scale":{"offset":550,"frameCount":1},"position":{"offset":554,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1":{"quat":{"offset":558,"frameCount":39},"scale":{"offset":753,"frameCount":1},"position":{"offset":757,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder":{"position":{"offset":761,"frameCount":2},"quat":{"offset":769,"frameCount":39},"scale":{"offset":964,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm":{"position":{"offset":968,"frameCount":2},"quat":{"offset":976,"frameCount":39},"scale":{"offset":1171,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm":{"position":{"offset":1175,"frameCount":2},"quat":{"offset":1183,"frameCount":37},"scale":{"offset":1368,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand":{"position":{"offset":1372,"frameCount":2},"quat":{"offset":1380,"frameCount":1},"scale":{"offset":1385,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck":{"position":{"offset":1389,"frameCount":2},"quat":{"offset":1397,"frameCount":39},"scale":{"offset":1592,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck/Head":{"position":{"offset":1596,"frameCount":2},"quat":{"offset":1604,"frameCount":1},"scale":{"offset":1609,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder":{"position":{"offset":1613,"frameCount":2},"quat":{"offset":1621,"frameCount":38},"scale":{"offset":1811,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm":{"position":{"offset":1815,"frameCount":2},"quat":{"offset":1823,"frameCount":39},"scale":{"offset":2018,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm":{"position":{"offset":2022,"frameCount":2},"quat":{"offset":2030,"frameCount":37},"scale":{"offset":2215,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg":{"position":{"offset":2219,"frameCount":2},"quat":{"offset":2227,"frameCount":39},"scale":{"offset":2422,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg":{"quat":{"offset":2426,"frameCount":39},"scale":{"offset":2621,"frameCount":1},"position":{"offset":2625,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot":{"quat":{"offset":2629,"frameCount":39},"scale":{"offset":2824,"frameCount":1},"position":{"offset":2828,"frameCount":1}},"Armature/Root/Hips/RightUpLeg":{"quat":{"offset":2832,"frameCount":39},"scale":{"offset":3027,"frameCount":1},"position":{"offset":3031,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg":{"quat":{"offset":3035,"frameCount":39},"scale":{"offset":3230,"frameCount":1},"position":{"offset":3234,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot":{"quat":{"offset":3238,"frameCount":39},"scale":{"offset":3433,"frameCount":1},"position":{"offset":3437,"frameCount":1}},"Armature":{"quat":{"offset":3441,"frameCount":1},"scale":{"offset":3446,"frameCount":1},"position":{"offset":3450,"frameCount":1}},"Armature/Root/Hips":{"quat":{"offset":3454,"frameCount":1},"scale":{"offset":3459,"frameCount":1},"position":{"offset":3463,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/LeftShoulder/LeftArm/LeftForeArm/LeftHand/LeftHand_end":{"quat":{"offset":3467,"frameCount":1},"scale":{"offset":3472,"frameCount":1},"position":{"offset":3476,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/Neck/Head/Head_end":{"quat":{"offset":3480,"frameCount":1},"scale":{"offset":3485,"frameCount":1},"position":{"offset":3489,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand":{"quat":{"offset":3493,"frameCount":1},"scale":{"offset":3498,"frameCount":1},"position":{"offset":3502,"frameCount":1}},"Armature/Root/Hips/Spine/Spine1/RightShoulder/RightArm/RightForeArm/RightHand/RightHand_end":{"quat":{"offset":3506,"frameCount":1},"scale":{"offset":3511,"frameCount":1},"position":{"offset":3515,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase":{"quat":{"offset":3519,"frameCount":1},"scale":{"offset":3524,"frameCount":1},"position":{"offset":3528,"frameCount":1}},"Armature/Root/Hips/LeftUpLeg/LeftLeg/LeftFoot/LeftToeBase/LeftToeBase_end":{"quat":{"offset":3532,"frameCount":1},"scale":{"offset":3537,"frameCount":1},"position":{"offset":3541,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase":{"quat":{"offset":3545,"frameCount":1},"scale":{"offset":3550,"frameCount":1},"position":{"offset":3554,"frameCount":1}},"Armature/Root/Hips/RightUpLeg/RightLeg/RightFoot/RightToeBase/RightToeBase_end":{"quat":{"offset":3558,"frameCount":1},"scale":{"offset":3563,"frameCount":1},"position":{"offset":3567,"frameCount":1}},"Character_1":{"quat":{"offset":3571,"frameCount":1},"scale":{"offset":3576,"frameCount":1},"position":{"offset":3580,"frameCount":1}}}],-1],0,0,[],[],[]],[[[11,"FlashLight"],[90,"FlashLight",false,0,1,[[170,-2],[60,0,-3,[0],1],[58,null,false,-4,[117,1.35,[43]]]],[10,-1],[4,4278190080],[5,5000,5000]]],0,[0,2,1,0,0,1,0,0,1,0,0,1,0,5,1,4],[0,0],[-1,6],[1,131]]]]